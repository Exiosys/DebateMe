'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var state = require('../../state');
var view = require('../../view');

const field = state.StateField.define({
    create(state) {
        return decorateSelections(state.selection);
    },
    update(deco, tr) {
        return tr.docChanged || tr.selectionSet ? decorateSelections(tr.selection) : deco;
    }
}).provide(view.EditorView.decorations);
/// Returns an extension that enables multiple selections for the
/// editor. Secondary cursors and selected ranges are drawn with
/// simple decorations, and might not look the same as the primary
/// native selection.
function multipleSelections() {
    return [
        state.EditorState.allowMultipleSelections.of(true),
        field,
        styles
    ];
}
class CursorWidget extends view.WidgetType {
    toDOM() {
        let span = document.createElement("span");
        span.className = view.themeClass("secondaryCursor");
        return span;
    }
}
CursorWidget.deco = view.Decoration.widget({ widget: new CursorWidget(null) });
const rangeMark = view.Decoration.mark({ class: view.themeClass("secondarySelection") });
function decorateSelections(selection) {
    let { ranges, primaryIndex } = selection;
    if (ranges.length == 1)
        return view.Decoration.none;
    let deco = [];
    for (let i = 0; i < ranges.length; i++)
        if (i != primaryIndex) {
            let range = ranges[i];
            deco.push(range.empty ? CursorWidget.deco.range(range.from) : rangeMark.range(ranges[i].from, ranges[i].to));
        }
    return view.Decoration.set(deco);
}
const styles = view.EditorView.baseTheme({
    secondarySelection: {
        backgroundColor_fallback: "#3297FD",
        color_fallback: "white !important",
        backgroundColor: "Highlight",
        color: "HighlightText !important"
    },
    secondaryCursor: {
        display: "inline-block",
        verticalAlign: "text-top",
        borderLeft: "1.4px solid #555",
        width: 0,
        height: "1.15em",
        margin: "0 -0.7px -.7em"
    }
});

exports.multipleSelections = multipleSelections;
