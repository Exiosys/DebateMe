{"version":3,"file":"index.es.js","sources":["../src/highlight.ts"],"sourcesContent":["import {Tree, NodeType, NodeProp} from \"lezer-tree\"\nimport {Style, StyleModule} from \"style-mod\"\nimport {EditorView, ViewPlugin, PluginValue, ViewUpdate, Decoration, DecorationSet} from \"../../view\"\nimport {EditorState, Extension} from \"../../state\"\nimport {RangeSetBuilder} from \"../../rangeset\"\n\nconst Inherit = 1\n\n/// A tag system defines a set of node (token) tags used for\n/// highlighting. You'll usually want to use the\n/// [default](#highlight.defaultTags) set, but it is possible to\n/// define your own custom system when that doesn't fit your use case.\nexport class TagSystem {\n  /// The flags argument given when creating this system.\n  flags: readonly string[]\n\n  /// The types argument given when creating this system.\n  types: readonly string[]\n\n  /// @internal\n  flagMask: number\n  /// @internal\n  typeShift: number\n  /// @internal\n  typeNames: string[] = [\"\"]\n  /// @internal\n  typeIDs: {[name: string]: number} = Object.create(null)\n  /// @internal\n  parents: number[]\n\n  /// A [node\n  /// prop](https://lezer.codemirror.net/docs/ref#tree.NodeProp) used\n  /// to associate styling tag information with syntax tree nodes.\n  prop = new NodeProp<number>()\n\n  /// Define a tag system. Each tag identifies a type of syntactic\n  /// element, which can have a single type and any number of flags.\n  /// The `flags` argument should be an array of flag names, and the\n  /// `types` argument an array of type names. Type names may have a\n  /// `\"name=parentName\"` format to specify that this type is an\n  /// instance of some other type, which means that, if no styling for\n  /// the type itself is provided, it'll fall back to the parent\n  /// type's styling.\n  ///\n  /// You can specify a `subtypes` property to assign a given number\n  /// of sub-types to each type. These are automatically generated\n  /// types with the base type name suffixed with `#1` to `#`_`N`_\n  /// (where _N_ is the number given in the `subtypes` field) that\n  /// have the base type as parent type.\n  constructor(options: {flags: string[], types: string[], subtypes?: number}) {\n    this.flags = options.flags\n    this.types = options.types\n    this.flagMask = Math.pow(2, this.flags.length) - 1\n    this.typeShift = this.flags.length + 1\n    let subtypes = options.subtypes || 0\n    let parentNames: (string | undefined)[] = [undefined]\n    this.typeIDs[\"\"] = 0\n    let typeID = 1\n    for (let type of options.types) {\n      let match = /^([\\w\\-]+)(?:=([\\w-]+))?$/.exec(type)\n      if (!match) throw new RangeError(\"Invalid type name \" + type)\n      let id = typeID++\n      this.typeNames[id] = match[1]\n      this.typeIDs[match[1]] = id\n      parentNames[id] = match[2]\n      for (let i = 0; i < subtypes; i++) {\n        let subID = typeID++, name = match[1] + \"#\" + (i + 1)\n        this.typeNames[subID] = name\n        this.typeIDs[name] = subID\n        parentNames[subID] = match[1]\n      }\n    }\n    this.parents = parentNames.map(name => {\n      if (name == null) return 0\n      let id = this.typeIDs[name]\n      if (id == null) throw new RangeError(`Unknown parent type '${name}' specified`)\n      return id\n    })\n    if (this.flags.length > 29 || this.typeNames.length > Math.pow(2, 29 - this.flags.length))\n      throw new RangeError(\"Too many style tag flags to fit in a 30-bit integer\")\n  }\n\n  /// Parse a tag name into a numeric ID. Only necessary if you are\n  /// manually defining [node properties](#highlight.TagSystem.prop)\n  /// for this system.\n  get(name: string) {\n    let value = name.charCodeAt(0) == 43 ? 1 : 0 // Check for leading '+'\n    for (let part of (value ? name.slice(1) : name).split(\" \")) if (part) {\n      let flag = this.flags.indexOf(part)\n      if (flag > -1) {\n        value += 1 << (flag + 1)\n      } else {\n        let typeID = this.typeIDs[part]\n        if (typeID == null) throw new RangeError(`Unknown tag type '${part}'`)\n        if (value >> this.typeShift) throw new RangeError(`Multiple tag types specified in '${name}'`)\n        value += typeID << this.typeShift\n      }\n    }\n    return value\n  }\n\n  /// Create a\n  /// [`PropSource`](https://lezer.codemirror.net/docs/ref#tree.PropSource)\n  /// that adds node properties for this system. `tags` should map\n  /// node type\n  /// [selectors](https://lezer.codemirror.net/docs/ref#tree.NodeType^match)\n  /// to tag names.\n  add(tags: {[selector: string]: string}) {\n    let match = NodeType.match(tags)\n    return this.prop.add((type: NodeType) => {\n      let found = match(type)\n      return found == null ? undefined : this.get(found)\n    })\n  }\n\n  /// Create a highlighter extension for this system, styling the\n  /// given tags using the given CSS objects.\n  highlighter(spec: {[tag: string]: Style}): Extension {\n    let styling = new Styling(this, spec)\n    return [\n      ViewPlugin.define(view => new Highlighter(view, this.prop, styling)).decorations(),\n      EditorView.styleModule.of(styling.module)\n    ]\n  }\n\n  /// @internal\n  specificity(tag: number) {\n    let flags = tag & this.flagMask, spec = 0\n    for (let i = 1; i <= this.flags.length; i++)\n      if (flags & (1 << i)) spec++\n    for (let type = tag >> (this.flags.length + 1); type; type = this.parents[type]) spec += 1000\n    return spec\n  }\n}\n\n/// The set of highlighting tags used by regular language packages and\n/// themes.\nexport const defaultTags = new TagSystem({\n  flags: [\"invalid\", \"meta\",\n          \"link\", \"strong\", \"emphasis\", \"monospace\",\n          \"changed\", \"inserted\", \"deleted\",\n          \"definition\", \"constant\", \"control\"],\n  subtypes: 7,\n  types: [\n    \"comment\",\n    \"lineComment=comment\",\n    \"blockComment=comment\",\n    \"name\",\n    \"variableName=name\",\n    \"typeName=name\",\n    \"propertyName=name\",\n    \"className=name\",\n    \"labelName=name\",\n    \"namespace=name\",\n    \"literal\",\n    \"string=literal\",\n    \"character=string\",\n    \"number=literal\",\n    \"integer=number\",\n    \"float=number\",\n    \"regexp=literal\",\n    \"escape=literal\",\n    \"color=literal\",\n    \"content\",\n    \"heading=content\",\n    \"list=content\",\n    \"quote=content\",\n    \"keyword\",\n    \"self=keyword\",\n    \"null=keyword\",\n    \"atom=keyword\",\n    \"unit=keyword\",\n    \"modifier=keyword\",\n    \"operatorKeyword=keyword\",\n    \"operator\",\n    \"derefOperator=operator\",\n    \"arithmeticOperator=operator\",\n    \"logicOperator=operator\",\n    \"bitwiseOperator=operator\",\n    \"compareOperator=operator\",\n    \"updateOperator=operator\",\n    \"typeOperator=operator\",\n    \"punctuation\",\n    \"separator=punctuation\",\n    \"bracket=punctuation\",\n    \"angleBracket=bracket\",\n    \"squareBracket=bracket\",\n    \"paren=bracket\",\n    \"brace=bracket\"\n  ]\n})\n\n/// Used to add a set of tags to a language syntax via\n/// [`Parser.withProps`](https://lezer.codemirror.net/docs/ref#lezer.Parser.withProps).\n/// The argument object can use syntax node selectors (see\n/// [`NodeType.match`](https://lezer.codemirror.net/docs/ref#tree.NodeType^match))\n/// as property names, and tag names (in the [default tag\n/// system](#highlight.defaultTags)) as values.\nexport const styleTags = (tags: {[selector: string]: string}) => defaultTags.add(tags)\n\n/// Create a highlighter theme that adds the given styles to the given\n/// tags. The spec's property names must be tag names, and the values\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\nexport const highlighter = (spec: {[tag: string]: Style}) => defaultTags.highlighter(spec)\n\nclass StyleRule {\n  constructor(public type: number, public flags: number, public specificity: number, public cls: string) {}\n}\n\nclass Styling {\n  module: StyleModule<{[name: string]: string}>\n  rules: readonly StyleRule[]\n  cache: {[tag: number]: string} = Object.create(null)\n\n  constructor(private tags: TagSystem, spec: {[name: string]: Style}) {\n    let modSpec = Object.create(null)\n    let nextCls = 0\n    let rules: StyleRule[] = []\n    for (let prop in spec) {\n      let tag = tags.get(prop)\n      let cls = \"c\" + nextCls++\n      modSpec[cls] = spec[prop]\n      rules.push(new StyleRule(tag >> tags.typeShift, tag & tags.flagMask, tags.specificity(tag), cls))\n    }\n    this.rules = rules.sort((a, b) => b.specificity - a.specificity)\n    this.module = new StyleModule(modSpec)\n  }\n\n  match(tag: number) {\n    let known = this.cache[tag]\n    if (known != null) return known\n    let result = \"\"\n    let type = tag >> this.tags.typeShift, flags = tag & this.tags.flagMask\n    for (;;) {\n      for (let rule of this.rules) {\n        if (rule.type == type && (rule.flags & flags) == rule.flags) {\n          if (result) result += \" \"\n          result += this.module[rule.cls]\n          flags &= ~rule.flags\n          if (type) break\n        }\n      }\n      if (type) type = this.tags.parents[type]\n      else break\n    }\n    return this.cache[tag] = result\n  }\n}\n\nclass Highlighter implements PluginValue {\n  tree: Tree\n  decorations: DecorationSet\n\n  constructor(view: EditorView, private prop: NodeProp<number>, private styling: Styling) {\n    this.tree = view.state.tree\n    this.decorations = this.buildDeco(view.visibleRanges, this.tree)\n  }\n\n  update(update: ViewUpdate) {\n    let syntax = update.state.facet(EditorState.syntax)\n    if (!syntax.length) {\n      this.decorations = Decoration.none\n    } else if (syntax[0].parsePos(update.state) < update.view.viewport.to) {\n      this.decorations = this.decorations.map(update.changes)\n    } else if (this.tree != syntax[0].getTree(update.state) || update.viewportChanged) {\n      this.tree = syntax[0].getTree(update.state)\n      this.decorations = this.buildDeco(update.view.visibleRanges, this.tree)\n    }\n  }\n\n  buildDeco(ranges: readonly {from: number, to: number}[], tree: Tree) {\n    let builder = new RangeSetBuilder<Decoration>()\n    let start = 0\n    function flush(pos: number, style: string) {\n      if (pos > start && style)\n        builder.add(start, pos, Decoration.mark({class: style})) // FIXME cache these\n      start = pos\n    }\n\n    for (let {from, to} of ranges) {\n      start = from\n      // The current node's own classes\n      let curClass = \"\"\n      let context: string[] = []\n      let inherited: string[] = []\n      tree.iterate({\n        from, to,\n        enter: (type, start) => {\n          let inheritedClass = inherited.length ? inherited[inherited.length - 1] : \"\"\n          let cls = inheritedClass\n          let style = type.prop(this.prop)\n          if (style != null) {\n            let val = this.styling.match(style)\n            if (val) {\n              if (cls) cls += \" \"\n              cls += val\n            }\n            if (style & Inherit) inheritedClass = cls\n          }\n          context.push(cls)\n          if (inheritedClass) inherited.push(inheritedClass)\n          if (cls != curClass) {\n            flush(start, curClass)\n            curClass = cls\n          }\n        },\n        leave: (_t, _s, end) => {\n          context.pop()\n          inherited.pop()\n          let backTo = context.length ? context[context.length - 1] : \"\"\n          if (backTo != curClass) {\n            flush(Math.min(to, end), curClass)\n            curClass = backTo\n          }\n        }\n      })\n    }\n    return builder.finish()\n  }\n}\n\n/// A default highlighter (works well with light themes).\nexport const defaultHighlighter = highlighter({\n  invalid: {color: \"#f00\"},\n  keyword: {color: \"#708\"},\n  atom: {color: \"#219\"},\n  number: {color: \"#164\"},\n  string: {color: \"#a11\"},\n  character: {color: \"#a11\"},\n  regexp: {color: \"#e40\"},\n  escape: {color: \"#e40\"},\n  \"variableName definition\": {color: \"#00f\"},\n  typeName: {color: \"#085\"},\n  \"propertyName definition\": {color: \"#00c\"},\n  comment: {color: \"#940\"},\n  meta: {color: \"#555\"}\n})\n"],"names":[],"mappings":"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"}