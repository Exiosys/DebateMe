{"version":3,"file":"index.js","sources":["../src/special-chars.ts"],"sourcesContent":["import {Decoration, DecorationSet, Range, WidgetType, ViewPlugin, ViewUpdate, EditorView} from \"../../view\"\nimport {combineConfig, ChangedRange, Facet, Extension} from \"../../state\"\nimport {countColumn} from \"../../text\"\nimport {StyleModule} from \"style-mod\"\n\n/// Configure the special character highlighter.\nexport interface SpecialCharConfig {\n  /// An optional function that renders the placeholder elements.\n  render?: ((code: number, description: string | null, placeHolder: string) => HTMLElement) | null\n  /// Regular expression that matches the special characters to\n  /// highlight.\n  specialChars?: RegExp\n  /// Regular expression that can be used to add characters to the\n  /// default set of characters to highlight.\n  addSpecialChars?: RegExp | null\n}\n\nconst Specials = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/gu\n\nconst Names: {[key: number]: string} = {\n  0: \"null\",\n  7: \"bell\",\n  8: \"backspace\",\n  10: \"newline\",\n  11: \"vertical tab\",\n  13: \"carriage return\",\n  27: \"escape\",\n  8203: \"zero width space\",\n  8204: \"zero width non-joiner\",\n  8205: \"zero width joiner\",\n  8206: \"left-to-right mark\",\n  8207: \"right-to-left mark\",\n  8232: \"line separator\",\n  8233: \"paragraph separator\",\n  65279: \"zero width no-break space\",\n  65532: \"object replacement\"\n}\n\nconst specialCharConfig = Facet.define<SpecialCharConfig, Required<SpecialCharConfig> & {replaceTabs?: boolean}>({\n  combine(configs) {\n    // FIXME make configurations compose properly\n    let config: Required<SpecialCharConfig> & {replaceTabs?: boolean} = combineConfig(configs, {\n      render: null,\n      specialChars: Specials,\n      addSpecialChars: null\n    })\n\n    let styles = document.body.style as any\n    config.replaceTabs = (styles.tabSize || styles.MozTabSize) == null\n    if (config.replaceTabs)\n      config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, \"gu\")\n\n    if (config.addSpecialChars)\n      config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, \"gu\")\n\n    return config\n  }\n})\n\n/// Returns an extension that installs highlighting of special\n/// characters.\nexport function specialChars(config: SpecialCharConfig = {}): Extension {\n  return [specialCharConfig.of(config), specialCharPlugin, styleExt]\n}\n\nconst JoinGap = 10\n\nconst specialCharPlugin = ViewPlugin.fromClass(class {\n  from = 0\n  to = 0\n  decorations: DecorationSet = Decoration.none\n  decorationCache: {[char: number]: Decoration} = Object.create(null)\n\n  constructor(public view: EditorView) {\n    this.updateForViewport()\n  }\n\n  update(update: ViewUpdate) {\n    if (update.prevState.facet(specialCharConfig) != update.state.facet(specialCharConfig)) {\n      this.decorationCache = Object.create(null)\n      this.from = this.to = 0\n      this.decorations = Decoration.none\n    }\n    if (update.changes.length) {\n      this.decorations = this.decorations.map(update.changes)\n      this.from = update.changes.mapPos(this.from, 1)\n      this.to = update.changes.mapPos(this.to, -1)\n      this.closeHoles(update.changes.changedRanges())\n    }\n    this.updateForViewport()\n  }\n\n  closeHoles(ranges: readonly ChangedRange[]) {\n    let decorations: Range<Decoration>[] = [], vp = this.view.viewport, replaced: number[] = []\n    let config = this.view.state.facet(specialCharConfig)\n    for (let i = 0; i < ranges.length; i++) {\n      let {fromB: from, toB: to} = ranges[i]\n      // Must redraw all tabs further on the line\n      if (config.replaceTabs) to = this.view.state.doc.lineAt(to).end\n      while (i < ranges.length - 1 && ranges[i + 1].fromB < to + JoinGap) to = Math.max(to, ranges[++i].toB)\n      // Clip to current viewport, to avoid doing work for invisible text\n      from = Math.max(vp.from, from); to = Math.min(vp.to, to)\n      if (from >= to) continue\n      this.getDecorationsFor(from, to, decorations)\n      replaced.push(from, to)\n    }\n    if (replaced.length) this.decorations = this.decorations.update({\n      add: decorations,\n      filter: pos => {\n        for (let i = 0; i < replaced.length; i += 2)\n          if (pos >= replaced[i] && pos < replaced[i + 1]) return false\n        return true\n      },\n      filterFrom: replaced[0],\n      filterTo: replaced[replaced.length - 1]\n    })\n  }\n\n  updateForViewport() {\n    let vp = this.view.viewport\n    // Viewports match, don't do anything\n    if (this.from == vp.from && this.to == vp.to) return\n    let decorations: Range<Decoration>[] = []\n    if (this.from >= vp.to || this.to <= vp.from) {\n      this.getDecorationsFor(vp.from, vp.to, decorations)\n      this.decorations = Decoration.set(decorations)\n    } else {\n      if (vp.from < this.from) this.getDecorationsFor(vp.from, this.from, decorations)\n      if (this.to < vp.to) this.getDecorationsFor(this.to, vp.to, decorations)\n      this.decorations = this.decorations.update({\n        add: decorations,\n        filter: (from, to) => from >= vp.from && to <= vp.to\n      })\n    }\n    this.from = vp.from; this.to = vp.to\n  }\n\n  getDecorationsFor(from: number, to: number, target: Range<Decoration>[]) {\n    let config = this.view.state.facet(specialCharConfig)\n\n    let {doc} = this.view.state\n    for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n      if (!cursor.lineBreak) {\n        while (m = config.specialChars.exec(cursor.value)) {\n          let code = m[0].codePointAt ? m[0].codePointAt(0) : m[0].charCodeAt(0), deco\n          if (code == null) continue\n          if (code == 9) {\n            let line = doc.lineAt(pos + m.index)\n            let size = this.view.state.tabSize, col = countColumn(doc.slice(line.start, pos + m.index), 0, size)\n            deco = Decoration.replace({widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth)})\n          } else {\n            deco = this.decorationCache[code] ||\n              (this.decorationCache[code] = Decoration.replace({widget: new SpecialCharWidget(config, code)}))\n          }\n          target.push(deco.range(pos + m.index, pos + m.index + m[0].length))\n        }\n      }\n      pos += cursor.value.length\n    }\n  }\n}).decorations()\n\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code: number): string | null {\n  if (code >= 32) return null\n  if (code == 10) return \"\\u2424\"\n  return String.fromCharCode(9216 + code)\n}\n\nconst DefaultPlaceholder = \"\\u2022\"\n\nclass SpecialCharWidget extends WidgetType<number> {\n  constructor(private options: Required<SpecialCharConfig>, code: number) { super(code) }\n\n  toDOM() {\n    let ph = placeHolder(this.value) || DefaultPlaceholder\n    let desc = \"Control character \" + (Names[this.value] || this.value)\n    let custom = this.options.render && this.options.render(this.value, desc, ph)\n    if (custom) return custom\n    let span = document.createElement(\"span\")\n    span.textContent = ph\n    span.title = desc\n    span.setAttribute(\"aria-label\", desc)\n    span.style.color = \"red\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n\nclass TabWidget extends WidgetType<number> {\n  toDOM() {\n    let span = document.createElement(\"span\")\n    span.textContent = \"\\t\"\n    span.className = style.tab\n    span.style.width = this.value + \"px\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n\nconst style = new StyleModule({\n  tab: {\n    display: \"inline-block\",\n    overflow: \"hidden\",\n    verticalAlign: \"bottom\"\n  }\n})\nconst styleExt = EditorView.styleModule.of(style)\n"],"names":["Facet","combineConfig","ViewPlugin","view","Decoration","countColumn","WidgetType","StyleModule","EditorView"],"mappings":"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"}