{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["import {EditorView, ViewPlugin, PluginField, ViewUpdate, BlockType, BlockInfo, themeClass} from \"../../view\"\nimport {Range, RangeValue, RangeSet, RangeCursor} from \"../../rangeset\"\nimport {combineConfig, fillConfig, MapMode, Annotation, Facet, Extension} from \"../../state\"\n\n/// A gutter marker represents a bit of information attached to a line\n/// in a specific gutter. Your own custom markers have to extend this\n/// class.\nexport abstract class GutterMarker extends RangeValue {\n  /// @internal\n  compare(other: GutterMarker) {\n    return this == other || this.constructor == other.constructor && this.eq(other)\n  }\n\n  /// Compare this marker to another marker of the same type.\n  abstract eq(other: GutterMarker): boolean\n\n  /// Render the DOM node for this marker, if any.\n  toDOM(_view: EditorView): Node | null { return null }\n\n  /// Create a range that places this marker at the given position.\n  at(pos: number) { return new Range(pos, pos, this) }\n\n  /// This property can be used to add CSS classes to the gutter\n  /// element that contains this marker.\n  elementClass!: string\n}\n\nGutterMarker.prototype.elementClass = \"\"\nGutterMarker.prototype.startMapMode = GutterMarker.prototype.endMapMode = MapMode.TrackBefore\n\ntype Handlers = {[event: string]: (view: EditorView, line: BlockInfo, event: any) => boolean}\n\n/// Configuration options when creating a generic gutter.\nexport interface GutterConfig {\n  /// The theme selector for the gutter's wrapping DOM element. Will\n  /// be prefixed with `\"gutter.\"` for the gutter wrapper, and then\n  /// suffixed with `\"Element\"` for the individual line elements.\n  style?: string\n  /// Controls whether empty gutter elements should be rendered.\n  /// Defaults to false.\n  renderEmptyElements?: boolean\n  /// A function that computes the initial set of markers for the\n  /// gutter, if any. Defaults to the empty set.\n  initialMarkers?: (view: EditorView) => RangeSet<GutterMarker>\n  /// A function that updates the set of markers when the view\n  /// updates. This is where you could read transaction information to\n  /// add or remove markers, depending on the kind of gutter you are\n  /// implementing.\n  updateMarkers?: (markers: RangeSet<GutterMarker>, update: ViewUpdate) => RangeSet<GutterMarker>\n  /// Can be used to optionally add a single marker to every line.\n  lineMarker?: (view: EditorView, line: BlockInfo, markers: readonly GutterMarker[]) => GutterMarker | null\n  /// Use a spacer element that gives the gutter its base width.\n  initialSpacer?: null | ((view: EditorView) => GutterMarker)\n  /// Update the spacer element when the view is updated.\n  updateSpacer?: null | ((spacer: GutterMarker, update: ViewUpdate) => GutterMarker)\n  /// Supply event handlers for DOM events on this gutter.\n  domEventHandlers?: Handlers\n}\n\nconst defaults = {\n  style: \"\",\n  renderEmptyElements: false,\n  elementStyle: \"\",\n  initialMarkers: () => RangeSet.empty,\n  updateMarkers: (markers: RangeSet<GutterMarker>) => markers,\n  lineMarker: () => null,\n  initialSpacer: null,\n  updateSpacer: null,\n  domEventHandlers: {}\n}\n\nconst activeGutters = Facet.define<Required<GutterConfig>>()\n\n/// Define an editor gutter.\nexport function gutter(config: GutterConfig): Extension {\n  return [gutters(), activeGutters.of(fillConfig(config, defaults))]\n}\n\nconst baseTheme = EditorView.baseTheme({\n  gutters: {\n    background: \"#f5f5f5\",\n    borderRight: \"1px solid silver\",\n    color: \"#999\",\n    display: \"flex\",\n    height: \"100%\",\n    boxSizing: \"border-box\",\n    left: 0\n  },\n\n  gutter: {\n    display: \"flex !important\", // Necessary -- prevents margin collapsing\n    flexDirection: \"column\",\n    flexShrink: 0,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflow: \"hidden\"\n  },\n\n  gutterElement: {\n    boxSizing: \"border-box\"\n  },\n\n  \"gutterElement.lineNumber\": {\n    padding: \"0 3px 0 5px\",\n    minWidth: \"20px\",\n    textAlign: \"right\",\n    whiteSpace: \"nowrap\"\n  }\n})\n\nconst unfixGutters = Facet.define<boolean, boolean>({\n  combine: values => values.some(x => x)\n})\n\n/// The gutter-drawing plugin is automatically enabled when you add a\n/// gutter, but you can use this function to explicitly configure it.\n///\n/// Unless `fixed` is explicitly set to `false`, the gutters are\n/// fixed, meaning they don't scroll along with the content\n/// horizontally.\nexport function gutters(config?: {fixed?: boolean}): Extension {\n  let result = [\n    gutterView,\n    baseTheme\n  ]\n  if (config && config.fixed === false) result.push(unfixGutters.of(true))\n  return result\n}\n\nconst gutterView = ViewPlugin.fromClass(class {\n  gutters: SingleGutterView[]\n  dom: HTMLElement\n  fixed: boolean\n\n  constructor(readonly view: EditorView) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = themeClass(\"gutters\")\n    this.dom.setAttribute(\"aria-hidden\", \"true\")\n    this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf))\n    for (let gutter of this.gutters) this.dom.appendChild(gutter.dom)\n    this.fixed = !view.state.facet(unfixGutters)\n    if (this.fixed) {\n      // FIXME IE11 fallback, which doesn't support position: sticky,\n      // by using position: relative + event handlers that realign the\n      // gutter (or just force fixed=false on IE11?)\n      this.dom.style.position = \"sticky\"\n    }\n    view.scrollDOM.insertBefore(this.dom, view.contentDOM)\n  }\n\n  update(update: ViewUpdate) {\n    if (!this.updateGutters(update)) return\n    let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport))\n    this.view.viewportLines(line => {\n      let text: BlockInfo | undefined\n      if (Array.isArray(line.type)) text = line.type.find(b => b.type == BlockType.Text)\n      else text = line.type == BlockType.Text ? line : undefined\n      if (!text) return\n\n      for (let cx of contexts) cx.line(this.view, text)\n    }, 0)\n    for (let cx of contexts) cx.finish()\n    this.dom.style.minHeight = this.view.contentHeight + \"px\"\n    if (update.state.facet(unfixGutters) != !this.fixed) {\n      this.fixed = !this.fixed\n      this.dom.style.position = this.fixed ? \"sticky\" : \"\"\n    }\n  }\n\n  updateGutters(update: ViewUpdate) {\n    let prev = update.prevState.facet(activeGutters), cur = update.state.facet(activeGutters)\n    let change = update.docChanged || update.heightChanged\n    if (prev == cur) {\n      for (let gutter of this.gutters) if (gutter.update(update)) change = true\n    } else {\n      change = true\n      let gutters = []\n      for (let conf of cur) {\n        let known = prev.indexOf(conf)\n        if (known < 0) {\n          gutters.push(new SingleGutterView(this.view, conf))\n        } else {\n          this.gutters[known].update(update)\n          gutters.push(this.gutters[known])\n        }\n      }\n      for (let g of this.gutters) g.dom.remove()\n      for (let g of gutters) this.dom.appendChild(g.dom)\n      this.gutters = gutters\n    }\n    return change\n  }\n}).provide(PluginField.scrollMargins, value => {\n  if (value.gutters.length == 0 || !value.fixed) return null\n  return value.view.textDirection == \"ltr\" ? {left: value.dom.offsetWidth} : {right: value.dom.offsetWidth}\n})\n\nclass UpdateContext {\n  cursor: RangeCursor<GutterMarker>\n  localMarkers: GutterMarker[] = []\n  i = 0\n  height = 0\n\n  constructor(readonly gutter: SingleGutterView, viewport: {from: number, to: number}) {\n    this.cursor = gutter.markers.iter(viewport.from)\n  }\n\n  line(view: EditorView, line: BlockInfo) {\n    if (this.localMarkers.length) this.localMarkers = []\n    while (this.cursor.value && this.cursor.from <= line.from) {\n      if (this.cursor.from == line.from) this.localMarkers.push(this.cursor.value)\n      this.cursor.next()\n    }\n    let forLine = this.gutter.config.lineMarker(view, line, this.localMarkers)\n    if (forLine) this.localMarkers.unshift(forLine)\n\n    let gutter = this.gutter\n    if (this.localMarkers.length == 0 && !gutter.config.renderEmptyElements) return\n\n    let above = line.top - this.height\n    if (this.i == gutter.elements.length) {\n      let newElt = new GutterElement(view, line.height, above, this.localMarkers, gutter.elementClass)\n      gutter.elements.push(newElt)\n      gutter.dom.appendChild(newElt.dom)\n    } else {\n      let markers: readonly GutterMarker[] = this.localMarkers, elt = gutter.elements[this.i]\n      if (sameMarkers(markers, elt.markers)) {\n        markers = elt.markers\n        this.localMarkers.length = 0\n      }\n      elt.update(view, line.height, above, markers, gutter.elementClass)\n    }\n    this.height = line.bottom\n    this.i++\n  }\n\n  finish() {\n    let gutter = this.gutter\n    while (gutter.elements.length > this.i) gutter.dom.removeChild(gutter.elements.pop()!.dom)\n  }\n}\n\nclass SingleGutterView {\n  dom: HTMLElement\n  elements: GutterElement[] = []\n  markers: RangeSet<GutterMarker>\n  spacer: GutterElement | null = null\n  elementClass!: string\n\n  constructor(public view: EditorView, public config: Required<GutterConfig>) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = themeClass(\"gutter\" + (this.config.style ? \".\" + this.config.style : \"\"))\n    this.elementClass = themeClass(\"gutterElement\" + (this.config.style ? \".\" + this.config.style : \"\"))\n    for (let prop in config.domEventHandlers) {\n      this.dom.addEventListener(prop, (event: Event) => {\n        let line = view.lineAtHeight((event as MouseEvent).clientY)\n        if (config.domEventHandlers[prop](view, line, event)) event.preventDefault()\n      })\n    }\n    this.markers = config.initialMarkers(view)\n    if (config.initialSpacer) {\n      this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)], this.elementClass)\n      this.dom.appendChild(this.spacer.dom)\n      this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\"\n    }\n  }\n\n  update(update: ViewUpdate) {\n    let prevMarkers = this.markers\n    this.markers = this.config.updateMarkers(this.markers.map(update.changes), update)\n    if (this.spacer && this.config.updateSpacer) {\n      let updated = this.config.updateSpacer(this.spacer.markers[0], update)\n      if (updated != this.spacer.markers[0]) this.spacer.update(update.view, 0, 0, [updated], this.elementClass)\n    }\n    return this.markers == prevMarkers\n  }\n\n  destroy() {\n    this.dom.remove()\n  }\n}\n\nclass GutterElement {\n  dom: HTMLElement\n  height: number = -1\n  above: number = 0\n  markers!: readonly GutterMarker[]\n\n  constructor(view: EditorView, height: number, above: number, markers: readonly GutterMarker[], eltClass: string) {\n    this.dom = document.createElement(\"div\")\n    this.update(view, height, above, markers, eltClass)\n  }\n\n  update(view: EditorView, height: number, above: number, markers: readonly GutterMarker[], cssClass: string) {\n    if (this.height != height)\n      this.dom.style.height = (this.height = height) + \"px\"\n    if (this.above != above)\n      this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\"\n    if (this.markers != markers) {\n      this.markers = markers\n      for (let ch; ch = this.dom.lastChild;) ch.remove()\n      let cls = cssClass\n      for (let m of markers) {\n        let dom = m.toDOM(view)\n        if (dom) this.dom.appendChild(dom)\n        let c = m.elementClass\n        if (c) cls += \" \" + c\n      }\n      this.dom.className = cls\n    }\n  }\n}\n\nfunction sameMarkers(a: readonly GutterMarker[], b: readonly GutterMarker[]): boolean {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].compare(b[i])) return false\n  return true\n}\n\n/// Configuration options when [creating](#gutter.lineNumbers) a line\n/// number gutter.\nexport interface LineNumberConfig {\n  /// How to display line numbers. Defaults to simply converting them\n  /// to string.\n  formatNumber?: (lineNo: number) => string\n  /// Supply event handlers for DOM events on this gutter.\n  domEventHandlers?: Handlers\n}\n\n/// Used to insert markers into the line number gutter.\nexport const lineNumberMarkers = Annotation.define<LineNumberMarkerUpdate>()\n\nexport type LineNumberMarkerUpdate = {\n  /// When given, adds these markers.\n  add?: Range<GutterMarker>[],\n  /// Filter the line number markers through this function.\n  filter?: (from: number, to: number, marker: GutterMarker) => boolean\n}\n\nconst lineNumberConfig = Facet.define<LineNumberConfig, Required<LineNumberConfig>>({\n  combine(values) {\n    return combineConfig<Required<LineNumberConfig>>(values, {formatNumber: String, domEventHandlers: {}}, {\n      domEventHandlers(a: Handlers, b: Handlers) {\n        let result: Handlers = {}\n        for (let event in a) result[event] = a[event]\n        for (let event in b) {\n          let exists = result[event], add = b[event]\n          result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add\n        }\n        return result\n      }\n    })\n  }\n})\n\nclass NumberMarker extends GutterMarker {\n  constructor(readonly number: number) { super() }\n\n  eq(other: NumberMarker) { return this.number == other.number }\n\n  toDOM(view: EditorView) {\n    let config = view.state.facet(lineNumberConfig)\n    return document.createTextNode(config.formatNumber(this.number))\n  }\n}\n\nconst lineNumberGutter = gutter({\n  style: \"lineNumber\",\n  updateMarkers(markers: RangeSet<GutterMarker>, update: ViewUpdate) {\n    for (let tr of update.transactions) {\n      let ann = tr.annotation(lineNumberMarkers)\n      if (ann) markers = markers.update(ann)\n    }\n    return markers\n  },\n  lineMarker(view, line, others) {\n    if (others.length) return null\n    // FIXME try to make the line number queries cheaper?\n    return new NumberMarker(view.state.doc.lineAt(line.from).number)\n  },\n  initialSpacer(view: EditorView) {\n    return new NumberMarker(maxLineNumber(view.state.doc.lines))\n  },\n  updateSpacer(spacer: GutterMarker, update: ViewUpdate) {\n    let max = maxLineNumber(update.view.state.doc.lines)\n    return max == (spacer as NumberMarker).number ? spacer : new NumberMarker(max)\n  }\n})\n\n/// Create a line number gutter extension. The order in which the\n/// gutters appear is determined by their extension priority.\nexport function lineNumbers(config: LineNumberConfig = {}): Extension {\n  return [\n    lineNumberConfig.of(config),\n    lineNumberGutter\n  ]\n}\n\nfunction maxLineNumber(lines: number) {\n  let last = 9\n  while (last < lines) last = last * 10 + 9\n  return last\n}\n"],"names":[],"mappings":"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"}