{"version":3,"file":"index.js","sources":["../src/browser.ts","../src/dom.ts","../src/contentview.ts","../src/attributes.ts","../src/inlineview.ts","../src/decoration.ts","../src/theme.ts","../src/blockview.ts","../src/buildview.ts","../src/heightmap.ts","../src/extension.ts","../src/viewstate.ts","../src/docview.ts","../src/cursor.ts","../src/input.ts","../src/domobserver.ts","../src/domchange.ts","../src/editorview.ts","../src/index.ts"],"sourcesContent":["let [nav, doc]: [any, any] = typeof navigator != \"undefined\"\n  ? [navigator, document]\n  : [{userAgent: \"\", vendor: \"\", platform: \"\"}, {documentElement: {style: {}}}]\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent)\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent)\nconst ie = !!(ie_upto10 || ie_11up || ie_edge)\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent)\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent)\nconst webkit = !ie && 'WebkitAppearance' in doc.documentElement.style\n\nexport default {\n  mac: /Mac/.test(nav.platform),\n  ie,\n  ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n  gecko,\n  gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n  chrome: !!chrome,\n  chrome_version: chrome ? +chrome[1] : 0,\n  ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n  android: /Android\\b/.test(nav.userAgent),\n  webkit,\n  safari: /Apple Computer/.test(nav.vendor),\n  webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n  tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n}\n","import browser from \"./browser\"\n\nexport function getSelection(root: DocumentOrShadowRoot): Selection {\n  return (root.getSelection ? root.getSelection() : document.getSelection())!\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport function selectionCollapsed(domSel: Selection) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function hasSelection(dom: HTMLElement, selection: Selection): boolean {\n  if (!selection.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode! : selection.anchorNode)\n  } catch(_) {\n    return false\n  }\n}\n\nexport function clientRectsFor(dom: Node): DOMRectList {\n  if (dom.nodeType == 3) {\n    let range = document.createRange()\n    range.setEnd(dom, dom.nodeValue!.length)\n    range.setStart(dom, 0)\n    return range.getClientRects() as DOMRectList\n  } else if (dom.nodeType == 1) {\n    return (dom as HTMLElement).getClientRects() as DOMRectList\n  } else {\n    return [] as any as DOMRectList\n  }\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport function isEquivalentPosition(node: Node, off: number, targetNode: Node | null, targetOff: number): boolean {\n  return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n                       scanFor(node, off, targetNode, targetOff, 1)) : false\n}\n\nexport function domIndex(node: Node): number {\n  for (var index = 0;; index++) {\n    node = node.previousSibling!\n    if (!node) return index\n  }\n}\n\nfunction scanFor(node: Node, off: number, targetNode: Node, targetOff: number, dir: -1 | 1): boolean {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : maxOffset(node))) {\n      if (node.nodeName == \"DIV\") return false\n      let parent = node.parentNode\n      if (!parent || parent.nodeType != 1) return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      off = dir < 0 ? maxOffset(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function maxOffset(node: Node): number {\n  return node.nodeType == 3 ? node.nodeValue!.length : node.childNodes.length\n}\n\nexport type Rect = {left: number, right: number, top: number, bottom: number}\n\nfunction windowRect(win: Window): Rect {\n  return {left: 0, right: win.innerWidth,\n          top: 0, bottom: win.innerHeight}\n}\n\nconst ScrollSpace = 5\n\nexport function scrollRectIntoView(dom: HTMLElement, rect: Rect) {\n  let doc = dom.ownerDocument!, win = doc.defaultView!\n\n  for (let cur: any = dom.parentNode; cur;) {\n    if (cur.nodeType == 1) { // Element\n      let bounding: Rect, top = cur == document.body\n      if (top) {\n        bounding = windowRect(win)\n      } else {\n        if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n          cur = cur.parentNode\n          continue\n        }\n        let rect = cur.getBoundingClientRect()\n        // Make sure scrollbar width isn't included in the rectangle\n        bounding = {left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight}\n      }\n\n      let moveX = 0, moveY = 0\n      if (rect.top < bounding.top)\n        moveY = -(bounding.top - rect.top + ScrollSpace)\n      else if (rect.bottom > bounding.bottom)\n        moveY = rect.bottom - bounding.bottom + ScrollSpace\n      if (rect.left < bounding.left)\n        moveX = -(bounding.left - rect.left + ScrollSpace)\n      else if (rect.right > bounding.right)\n        moveX = rect.right - bounding.right + ScrollSpace\n      if (moveX || moveY) {\n        if (top) {\n          win.scrollBy(moveX, moveY)\n        } else {\n          if (moveY) {\n            let start = cur.scrollTop\n            cur.scrollTop += moveY\n            moveY = cur.scrollTop - start\n          }\n          if (moveX) {\n            let start = cur.scrollLeft\n            cur.scrollLeft += moveX\n            moveX = cur.scrollLeft - start\n          }\n          rect = {left: rect.left - moveX, top: rect.top - moveY,\n                  right: rect.right - moveX, bottom: rect.bottom - moveY} as ClientRect\n        }\n      }\n      if (top) break\n      cur = cur.parentNode\n    } else if (cur.nodeType == 11) { // A shadow root\n      cur = cur.host\n    } else {\n      break\n    }\n  }\n}\n\nexport class DOMSelection {\n  anchorNode: Node | null = null\n  anchorOffset: number = 0\n  focusNode: Node | null = null\n  focusOffset: number = 0\n\n  eq(domSel: Selection): boolean {\n    return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n      this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset\n  }\n\n  set(domSel: Selection) {\n    this.anchorNode = domSel.anchorNode; this.anchorOffset = domSel.anchorOffset\n    this.focusNode = domSel.focusNode; this.focusOffset = domSel.focusOffset\n  }\n}\n\nlet preventScrollSupported: null | false | {preventScroll: boolean} = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom: HTMLElement) {\n  if ((dom as any).setActive) return (dom as any).setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stack = []\n  for (let cur: Node | null = dom; cur; cur = cur.parentNode) {\n    stack.push(cur, dom.scrollTop, dom.scrollLeft)\n    if (cur == cur.ownerDocument) break\n  }\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    for (let i = 0; i < stack.length;) {\n      let elt = stack[i++] as HTMLElement, top = stack[i++] as number, left = stack[i++] as number\n      if (elt.scrollTop != top) elt.scrollTop = top\n      if (elt.scrollLeft != left) elt.scrollLeft = left\n    }\n  }\n}\n","import {Rect, maxOffset, domIndex} from \"./dom\"\nimport {EditorView} from \"./editorview\"\n\nexport const enum Dirty { Not = 0, Child = 1, Node = 2 }\n\nexport class DOMPos {\n  constructor(readonly node: Node, readonly offset: number, readonly precise = true) {}\n\n  static before(dom: Node, precise?: boolean) { return new DOMPos(dom.parentNode!, domIndex(dom), precise) }\n  static after(dom: Node, precise?: boolean) { return new DOMPos(dom.parentNode!, domIndex(dom) + 1, precise) }\n}\n\nconst none: any[] = []\n\nexport abstract class ContentView {\n  parent: ContentView | null = null\n  dom: Node | null = null\n  dirty: number = Dirty.Node\n  abstract length: number\n  abstract children: ContentView[]\n  breakAfter!: number\n\n  get editorView(): EditorView {\n    if (!this.parent) throw new Error(\"Accessing view in orphan content view\")\n    return this.parent.editorView\n  }\n\n  get overrideDOMText(): readonly string[] | null { return null }\n\n  get posAtStart(): number {\n    return this.parent ? this.parent.posBefore(this) : 0\n  }\n\n  get posAtEnd(): number {\n    return this.posAtStart + this.length\n  }\n\n  posBefore(view: ContentView): number {\n    let pos = this.posAtStart\n    for (let child of this.children) {\n      if (child == view) return pos\n      pos += child.length + child.breakAfter\n    }\n    throw new RangeError(\"Invalid child in posBefore\")\n  }\n\n  posAfter(view: ContentView): number {\n    return this.posBefore(view) + view.length\n  }\n\n  coordsAt(pos: number): Rect | null { return null }\n\n  sync() {\n    if (this.dirty & Dirty.Node) {\n      let parent = this.dom as HTMLElement, pos: Node | null = parent.firstChild\n      for (let child of this.children) {\n        if (child.dirty) {\n          if (pos && !child.dom && !ContentView.get(pos)) {\n            let prev = pos.previousSibling\n            if (child.reuseDOM(pos)) pos = prev ? prev.nextSibling : parent.firstChild\n          }\n          child.sync()\n          child.dirty = Dirty.Not\n        }\n        pos = syncNodeInto(parent, pos, child.dom!)\n      }\n      while (pos) pos = rm(pos)\n    } else if (this.dirty & Dirty.Child) {\n      for (let child of this.children) if (child.dirty) {\n        child.sync()\n        child.dirty = Dirty.Not\n      }\n    }\n  }\n\n  reuseDOM(dom: Node) { return false }\n\n  abstract domAtPos(pos: number): DOMPos\n\n  localPosFromDOM(node: Node, offset: number): number {\n    let after: Node | null\n    if (node == this.dom) {\n      after = this.dom.childNodes[offset]\n    } else {\n      let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1\n      for (;;) {\n        let parent = node.parentNode!\n        if (parent == this.dom) break\n        if (bias == 0 && parent.firstChild != parent.lastChild) {\n          if (node == parent.firstChild) bias = -1\n          else bias = 1\n        }\n        node = parent\n      }\n      if (bias < 0) after = node\n      else after = node.nextSibling\n    }\n    if (after == this.dom.firstChild) return 0\n    while (after && !ContentView.get(after)) after = after.nextSibling\n    if (!after) return this.length\n\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i]\n      if (child.dom == after) return pos\n      pos += child.length + child.breakAfter\n    }\n  }\n\n  domBoundsAround(from: number, to: number, offset = 0): {startDOM: Node | null, endDOM: Node | null, from: number, to: number} | null {\n    let fromI = -1, fromStart = -1, toI = -1, toEnd = -1\n    for (let i = 0, pos = offset; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (pos < from && end > to) return child.domBoundsAround(from, to, pos)\n      if (end >= from && fromI == -1) { fromI = i; fromStart = pos }\n      if (end >= to && toI == -1) { toI = i; toEnd = end; break }\n      pos = end + child.breakAfter\n    }\n    return {from: fromStart, to: toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom!.nextSibling : null) || this.dom!.firstChild,\n            endDOM: toI < this.children.length - 1 ? this.children[toI + 1].dom : null}\n  }\n\n  // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n  markDirty(andParent: boolean = false) {\n    if (this.dirty & Dirty.Node) return\n    this.dirty |= Dirty.Node\n    this.markParentsDirty(andParent)\n  }\n\n  markParentsDirty(childList: boolean) {\n    for (let parent = this.parent; parent; parent = parent.parent) {\n      if (childList) parent.dirty |= Dirty.Node\n      if (parent.dirty & Dirty.Child) return\n      parent.dirty |= Dirty.Child\n      childList = false\n    }\n  }\n\n  setParent(parent: ContentView) {\n    if (this.parent != parent) {\n      this.parent = parent\n      if (this.dirty) this.markParentsDirty(true)\n    }\n  }\n\n  setDOM(dom: Node) {\n    this.dom = dom\n    ;(dom as any).cmView = this\n  }\n\n  get rootView(): ContentView {\n    for (let v: ContentView = this;;) {\n      let parent = v.parent\n      if (!parent) return v\n      v = parent\n    }\n  }\n\n  replaceChildren(from: number, to: number, children: ContentView[] = none) {\n    this.markDirty()\n    for (let i = from; i < to; i++) this.children[i].parent = null\n    this.children.splice(from, to - from, ...children)\n    for (let i = 0; i < children.length; i++) children[i].setParent(this)\n  }\n\n  ignoreMutation(rec: MutationRecord): boolean { return false }\n  ignoreEvent(event: Event): boolean { return false }\n\n  childCursor(pos: number = this.length) {\n    return new ChildCursor(this.children, pos, this.children.length)\n  }\n\n  childPos(pos: number, bias: number = 1): {i: number, off: number} {\n    return this.childCursor().findPos(pos, bias)\n  }\n\n  toString() {\n    let name = this.constructor.name.replace(\"View\", \"\")\n    return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n                   this.length ? \"[\" + (name == \"Text\" ? (this as any).text : this.length) + \"]\" : \"\") +\n      (this.breakAfter ? \"#\" : \"\")\n  }\n\n  static get(node: Node): ContentView | null { return (node as any).cmView }\n}\n\nContentView.prototype.breakAfter = 0\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom: Node): Node {\n  let next = dom.nextSibling\n  dom.parentNode!.removeChild(dom)\n  return next!\n}\n\nfunction syncNodeInto(parent: HTMLElement, pos: Node | null, dom: Node): Node | null {\n  if (dom.parentNode == parent) {\n    while (pos != dom) pos = rm(pos!)\n    pos = dom.nextSibling\n  } else {\n    parent.insertBefore(dom, pos)\n  }\n  return pos\n}\n\nexport class ChildCursor {\n  off: number = 0\n\n  constructor(public children: readonly ContentView[], public pos: number, public i: number) {}\n\n  findPos(pos: number, bias: number = 1): this {\n    for (;;) {\n      if (pos > this.pos || pos == this.pos &&\n          (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n        this.off = pos - this.pos\n        return this\n      }\n      let next = this.children[--this.i]\n      this.pos -= next.length + next.breakAfter\n    }\n  }\n}\n","export type Attrs = {[name: string]: string}\n\nexport function combineAttrs(source: Attrs, target: Attrs) {\n  for (let name in source) {\n    if (name == \"class\" && target.class) target.class += \" \" + source.class\n    else if (name == \"style\" && target.style) target.style += \";\" + source.style\n    else target[name] = source[name]\n  }\n  return target\n}\n\nexport function attrsEq(a: Attrs | null, b: Attrs | null): boolean {\n  if (a == b) return true\n  if (!a || !b) return false\n  let keysA = Object.keys(a), keysB = Object.keys(b)\n  if (keysA.length != keysB.length) return false\n  for (let key of keysA) {\n    if (keysB.indexOf(key) == -1 || a[key] !== b[key]) return false\n  }\n  return true\n}\n\nexport function updateAttrs(dom: HTMLElement, prev: Attrs | null, attrs: Attrs | null) {\n  if (prev) for (let name in prev) if (!(attrs && name in attrs)) dom.removeAttribute(name)\n  if (attrs) for (let name in attrs) if (!(prev && prev[name] == attrs[name])) dom.setAttribute(name, attrs[name])\n}\n","import {ContentView, DOMPos} from \"./contentview\"\nimport {WidgetType} from \"./decoration\"\nimport {attrsEq} from \"./attributes\"\nimport {Text} from \"../../text\"\nimport {Rect} from \"./dom\"\nimport browser from \"./browser\"\nimport {Open} from \"./buildview\"\n\nconst none: any[] = []\n\nexport abstract class InlineView extends ContentView {\n  abstract merge(from: number, to?: number, source?: InlineView | null): boolean\n  match(other: InlineView) { return false }\n  get children() { return none }\n  abstract slice(from: number, to?: number): InlineView\n  getSide() { return 0 }\n}\n\nconst MaxJoinLen = 256\n\nexport class TextView extends InlineView {\n  textDOM: Node | null = null;\n  class: string | null;\n\n  constructor(public text: string,\n              public tagName: string | null,\n              clss: string | null,\n              public attrs: {[key: string]: string} | null) {\n    super()\n    this.class = clss\n  }\n\n  get length() { return this.text.length }\n\n  createDOM(textDOM?: Node) {\n    let tagName = this.tagName || (this.attrs || this.class ? \"span\" : null)\n    this.textDOM = textDOM || document.createTextNode(this.text)\n    if (tagName) {\n      let dom = document.createElement(tagName)\n      dom.appendChild(this.textDOM)\n      if (this.class) dom.className = this.class\n      if (this.attrs) for (let name in this.attrs) dom.setAttribute(name, this.attrs[name])\n      this.setDOM(dom)\n    } else {\n      this.setDOM(this.textDOM)\n    }\n  }\n\n  sync() {\n    if (!this.dom) this.createDOM()\n    if (this.textDOM!.nodeValue != this.text) {\n      this.textDOM!.nodeValue = this.text\n      let dom = this.dom!\n      if (this.textDOM != dom && (this.dom!.firstChild != this.textDOM || dom.lastChild != this.textDOM)) {\n        while (dom.firstChild) dom.removeChild(dom.firstChild)\n        dom.appendChild(this.textDOM!)\n      }\n    }\n  }\n\n  reuseDOM(dom: Node) {\n    if (dom.nodeType != 3) return false\n    this.createDOM(dom)\n    return true\n  }\n\n  merge(from: number, to: number = this.length, source: InlineView | null = null): boolean {\n    if (source &&\n        (!(source instanceof TextView) ||\n         source.tagName != this.tagName || source.class != this.class ||\n         !attrsEq(source.attrs, this.attrs) || this.length - (to - from) + source.length > MaxJoinLen))\n      return false\n    this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to)\n    this.markDirty()\n    return true\n  }\n\n  slice(from: number, to: number = this.length) {\n    return new TextView(this.text.slice(from, to), this.tagName, this.class, this.attrs)\n  }\n\n  localPosFromDOM(node: Node, offset: number): number {\n    return node == this.textDOM ? offset : offset ? this.text.length : 0\n  }\n\n  domAtPos(pos: number) { return new DOMPos(this.textDOM!, pos) }\n\n  domBoundsAround(from: number, to: number, offset: number) {\n    return {from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom!.nextSibling}\n  }\n\n  coordsAt(pos: number): Rect {\n    return textCoords(this.textDOM!, pos)\n  }\n}\n\nfunction textCoords(text: Node, pos: number): Rect {\n  let range = document.createRange()\n  if (browser.chrome || browser.gecko) {\n    // These browsers reliably return valid rectangles for empty ranges\n    range.setEnd(text, pos)\n    range.setStart(text, pos)\n    return range.getBoundingClientRect()\n  } else {\n    // Otherwise, get the rectangle around a character and take one side\n    let extend = pos == 0 ? 1 : -1\n    range.setEnd(text, pos + (extend > 0 ? 1 : 0))\n    range.setStart(text, pos - (extend < 0 ? 1 : 0))\n    let rect = range.getBoundingClientRect()\n    let x = extend < 0 ? rect.right : rect.left\n    return {left: x, right: x, top: rect.top, bottom: rect.bottom}\n  }\n}\n\n// Also used for collapsed ranges that don't have a placeholder widget!\nexport class WidgetView extends InlineView {\n  dom!: HTMLElement | null\n\n  static create(widget: WidgetType, length: number, side: number, open: number = 0) {\n    return new (widget.customView || WidgetView)(widget, length, side, open)\n  }\n\n  constructor(public widget: WidgetType, public length: number, readonly side: number, readonly open: number) {\n    super()\n  }\n\n  slice(from: number, to: number = this.length) { return WidgetView.create(this.widget, to - from, this.side) }\n\n  sync() {\n    if (!this.dom || !this.widget.updateDOM(this.dom)) {\n      this.setDOM(this.widget.toDOM(this.editorView))\n      this.dom!.contentEditable = \"false\"\n    }\n  }\n\n  getSide() { return this.side }\n\n  merge(from: number, to: number = this.length, source: InlineView | null = null) {\n    if (source) {\n      if (!(source instanceof WidgetView) || !source.open ||\n          from > 0 && !(source.open & Open.Start) ||\n          to < this.length && !(source.open & Open.End)) return false\n      if (!this.widget.compare(source.widget))\n        throw new Error(\"Trying to merge incompatible widgets\")\n    }\n    this.length = from + (source ? source.length : 0) + (this.length - to)\n    return true\n  }\n\n  match(other: InlineView): boolean {\n    if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n      if (this.widget.constructor == other.widget.constructor) {\n        if (!this.widget.eq(other.widget.value)) this.markDirty(true)\n        this.widget = other.widget\n        return true\n      }\n    }\n    return false\n  }\n\n  ignoreMutation(): boolean { return true }\n  ignoreEvent(event: Event): boolean { return this.widget.ignoreEvent(event) }\n\n  get overrideDOMText(): readonly string[] | null {\n    if (this.length == 0) return [\"\"]\n    let top: ContentView = this\n    while (top.parent) top = top.parent\n    let view = (top as any).editorView, text: Text | undefined = view && view.state.doc, start = this.posAtStart\n    return text ? text.sliceLines(start, start + this.length) : [\"\"]\n  }\n\n  domAtPos(pos: number) {\n    return pos == 0 ? DOMPos.before(this.dom!) : DOMPos.after(this.dom!, pos == this.length)\n  }\n\n  domBoundsAround() { return null }\n\n  coordsAt(pos: number): Rect | null {\n    let rects = this.dom!.getClientRects()\n    for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n      let rect = rects[i]\n      if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom) return rects[i]\n    }\n    return null\n  }\n}\n\nexport class CompositionView extends WidgetView {\n  domAtPos(pos: number) { return new DOMPos(this.widget.value.text, pos) }\n\n  sync() { if (!this.dom) this.setDOM(this.widget.toDOM(this.editorView)) }\n\n  ignoreMutation(): boolean { return false }\n\n  get overrideDOMText() { return null }\n\n  coordsAt(pos: number) { return textCoords(this.widget.value.text, pos) }\n}\n","import {MapMode} from \"../../state\"\nimport {RangeValue, Range, RangeSet} from \"../../rangeset\"\nimport {WidgetView} from \"./inlineview\"\nimport {attrsEq} from \"./attributes\"\nimport {EditorView} from \"./editorview\"\n\n/// Options passed when [creating](#view.Decoration^mark) a mark\n/// decoration.\nexport interface MarkDecorationSpec {\n  /// Whether the mark covers its start and end position or not. This\n  /// influences whether content inserted at those positions becomes\n  /// part of the mark. Defaults to false.\n  inclusive?: boolean\n  /// Specify whether the start position of the marked range should be\n  /// inclusive. Overrides `inclusive`, when both are present.\n  inclusiveStart?: boolean\n  /// Whether the end should be inclusive.\n  inclusiveEnd?: boolean\n  /// Add attributes to the DOM elements that hold the text in the\n  /// marked range.\n  attributes?: {[key: string]: string}\n  /// Shorthand for `{attributes: {class: value}}`.\n  class?: string\n  /// Add a wrapping element around the text in the marked range. Note\n  /// that there will not be a single element covering the entire\n  /// range—content is split on mark starts and ends, and each piece\n  /// gets its own element.\n  tagName?: string\n}\n\n/// Options passed when [creating](#view.Decoration^widget) a widget\n/// decoration.\nexport interface WidgetDecorationSpec {\n  /// The type of widget to draw here.\n  widget: WidgetType\n  /// Which side of the given position the widget is on. When this is\n  /// positive, the widget will be drawn after the cursor if the\n  /// cursor is on the same position. Otherwise, it'll be drawn before\n  /// it. When multiple widgets sit at the same position, their `side`\n  /// values will determine their ordering—those with a lower value\n  /// come first. Defaults to 0.\n  side?: number\n  /// Determines whether this is a block widgets, which will be drawn\n  /// between lines, or an inline widget (the default) which is drawn\n  /// between the surrounding text.\n  block?: boolean\n}\n\n/// Options passed when [creating](#view.Decoration^replace) a\n/// replacing decoration.\nexport interface ReplaceDecorationSpec {\n  /// An optional widget to drawn in the place of the replaced\n  /// content.\n  widget?: WidgetType\n  /// Whether this range covers the positions on its sides. This\n  /// influences whether new content becomes part of the range and\n  /// whether the cursor can be drawn on its sides. Defaults to false.\n  inclusive?: boolean\n  /// Set inclusivity at the start.\n  inclusiveStart?: boolean\n  /// Set inclusivity at the end.\n  inclusiveEnd?: boolean\n  /// Whether this is a block-level decoration. Defaults to false.\n  block?: boolean\n}\n\n/// Options passed when [creating](#view.Decoration^line) a line\n/// decoration.\nexport interface LineDecorationSpec {\n  /// DOM attributes to add to the element wrapping the line.\n  attributes?: {[key: string]: string}\n}\n\n/// Widgets added to the content are described by subclasses of this\n/// class. This makes it possible to delay creating of the DOM\n/// structure for a widget until it is needed, and to avoid redrawing\n/// widgets even when the decorations that define them are recreated.\n/// `T` can be a type of value passed to instances of the widget type.\nexport abstract class WidgetType<T = any> {\n  /// Create an instance of this widget type.\n  constructor(\n    /// @internal\n    readonly value: T\n  ) {}\n  /// Build the DOM structure for this widget instance.\n  abstract toDOM(view: EditorView): HTMLElement\n  /// Compare this instance to another instance of the same class. By\n  /// default, it'll compare the instances' parameters with `===`.\n  eq(value: T): boolean { return this.value === value }\n  /// Update a DOM element created by a widget of the same type but\n  /// with a different value to reflect this widget. May return true\n  /// to indicate that it could update, false to indicate it couldn't\n  /// (in which case the widget will be redrawn). The default\n  /// implementation just returns false.\n  updateDOM(_dom: HTMLElement): boolean { return false }\n\n  /// @internal\n  compare(other: WidgetType): boolean {\n    return this == other || this.constructor == other.constructor && this.eq(other.value)\n  }\n\n  /// The estimated height this widget will have, to be used when\n  /// estimating the height of content that hasn't been drawn. May\n  /// return -1 to indicate you don't know. The default implementation\n  /// returns -1.\n  get estimatedHeight(): number { return -1 }\n\n  /// Can be used to configure which kinds of events inside the widget\n  /// should be ignored by the editor. The default is to ignore all\n  /// events.\n  ignoreEvent(_event: Event): boolean { return true }\n\n  //// @internal\n  get customView(): null | typeof WidgetView { return null }\n}\n\n/// A decoration set represents a collection of decorated ranges,\n/// organized for efficient access and mapping. See\n/// [`RangeSet`](#rangeset.RangeSet) for its methods.\nexport type DecorationSet = RangeSet<Decoration>\n\nconst enum Side { BigInline = 1e8, BigBlock = 2e8 }\n\n/// The different types of blocks that can occur in an editor view.\nexport enum BlockType {\n  /// A line of text.\n  Text,\n  /// A block widget associated with the position after it.\n  WidgetBefore,\n  /// A block widget associated with the position before it.\n  WidgetAfter,\n  /// A block widget [replacing](#view.Decoration^replace) a range of content.\n  WidgetRange\n}\n\n/// A decoration provides information on how to draw or style a piece\n/// of content. You'll usually use it wrapped in a\n/// [`Range`](#rangeset.Range), which adds a start and\n/// end position.\nexport abstract class Decoration extends RangeValue {\n  /// @internal\n  constructor(\n    /// @internal\n    readonly startSide: number,\n    /// @internal\n    readonly endSide: number,\n    /// @internal\n    readonly widget: WidgetType | null,\n    /// The config object used to create this decoration.\n    readonly spec: any) { super() }\n\n  /// @internal\n  get point() { return false }\n\n  /// @internal\n  get heightRelevant() { return false }\n\n  abstract eq(other: Decoration): boolean\n\n  /// Create a mark decoration, which influences the styling of the\n  /// text in its range.\n  static mark(spec: MarkDecorationSpec): Decoration {\n    return new MarkDecoration(spec)\n  }\n\n  /// Create a widget decoration, which adds an element at the given\n  /// position.\n  static widget(spec: WidgetDecorationSpec): Decoration {\n    let side = spec.side || 0\n    if (spec.block) side += (Side.BigBlock + 1) * (side > 0 ? 1 : -1)\n    return new PointDecoration(spec, side, side, !!spec.block, spec.widget || null, false)\n  }\n\n  /// Create a replace decoration which replaces the given range with\n  /// a widget, or simply hides it.\n  static replace(spec: ReplaceDecorationSpec): Decoration {\n    let block = !!spec.block\n    let {start, end} = getInclusive(spec)\n    let startSide = block ? -Side.BigBlock * (start ? 2 : 1) : Side.BigInline * (start ? -1 : 1)\n    let endSide = block ? Side.BigBlock * (end ? 2 : 1) : Side.BigInline * (end ? 1 : -1)\n    return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true)\n  }\n\n  /// Create a line decoration, which can add DOM attributes to the\n  /// line starting at the given position.\n  static line(spec: LineDecorationSpec): Decoration {\n    return new LineDecoration(spec)\n  }\n\n  /// Build a [`DecorationSet`](#view.DecorationSet) from the given\n  /// decorated range or ranges.\n  static set(of: Range<Decoration> | readonly Range<Decoration>[], sort = false): DecorationSet {\n    return RangeSet.of<Decoration>(of, sort)\n  }\n\n  /// The empty set of decorations.\n  static none = RangeSet.empty as DecorationSet\n\n  /// @internal\n  hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false }\n}\n\nexport class MarkDecoration extends Decoration {\n  constructor(spec: MarkDecorationSpec) {\n    let {start, end} = getInclusive(spec)\n    super(Side.BigInline * (start ? -1 : 1),\n          Side.BigInline * (end ? 1 : -1),\n          null, spec)\n  }\n\n  eq(other: Decoration): boolean {\n    return this == other ||\n      other instanceof MarkDecoration &&\n      this.spec.tagName == other.spec.tagName &&\n      this.spec.class == other.spec.class &&\n      attrsEq(this.spec.attributes || null, other.spec.attributes || null)\n  }\n\n  range(from: number, to = from) {\n    if (from >= to) throw new RangeError(\"Mark decorations may not be empty\")\n    return super.range(from, to)\n  }\n}\n\nexport class LineDecoration extends Decoration {\n  constructor(spec: LineDecorationSpec) {\n    super(-Side.BigInline, -Side.BigInline, null, spec)\n  }\n\n  get point() { return true }\n\n  eq(other: Decoration): boolean {\n    return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes)\n  }\n\n  range(from: number, to = from) {\n    if (to != from) throw new RangeError(\"Line decoration ranges must be zero-length\")\n    return super.range(from, to)\n  }\n}\n\nLineDecoration.prototype.startMapMode = LineDecoration.prototype.endMapMode = MapMode.TrackBefore\n\nexport class PointDecoration extends Decoration {\n  constructor(spec: any,\n              startSide: number, endSide: number,\n              public block: boolean,\n              widget: WidgetType | null,\n              readonly isReplace: boolean) {\n    super(startSide, endSide, widget, spec)\n    if (block) {\n      this.startMapMode = startSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter\n      this.endMapMode = endSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter\n    } else {\n      this.startMapMode = this.endMapMode = MapMode.TrackDel\n    }\n  }\n\n  get point() { return true }\n\n  // Only relevant when this.block == true\n  get type() {\n    return this.startSide < this.endSide ? BlockType.WidgetRange\n      : this.startSide < 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter\n  }\n\n  get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5 }\n\n  eq(other: Decoration): boolean {\n    return other instanceof PointDecoration &&\n      widgetsEq(this.widget, other.widget) &&\n      this.block == other.block &&\n      this.startSide == other.startSide && this.endSide == other.endSide\n  }\n\n  range(from: number, to = from) {\n    if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide < 0)))\n      throw new RangeError(\"Invalid range for replacement decoration\")\n    if (!this.isReplace && to != from)\n      throw new RangeError(\"Widget decorations can only create zero-length ranges\")\n    return super.range(from, to)\n  }\n}\n\nfunction getInclusive(spec: {inclusive?: boolean, inclusiveStart?: boolean, inclusiveEnd?: boolean}): {start: boolean, end: boolean} {\n  let {inclusiveStart: start, inclusiveEnd: end} = spec\n  if (start == null) start = spec.inclusive\n  if (end == null) end = spec.inclusive\n  return {start: start || false, end: end || false}\n}\n\nfunction widgetsEq(a: WidgetType | null, b: WidgetType | null): boolean {\n  return a == b || !!(a && b && a.compare(b))\n}\n\nconst MinRangeGap = 4\n\nexport function addRange(from: number, to: number, ranges: number[]) {\n  let last = ranges.length - 1\n  if (last >= 0 && ranges[last] + MinRangeGap > from) ranges[last] = Math.max(ranges[last], to)\n  else ranges.push(from, to)\n}\n\nexport function joinRanges(a: number[], b: number[]): number[] {\n  if (a.length == 0) return b\n  if (b.length == 0) return a\n  let result: number[] = []\n  for (let iA = 0, iB = 0;;) {\n    if (iA < a.length && (iB == b.length || a[iA] < b[iB]))\n      addRange(a[iA++], a[iA++], result)\n    else if (iB < b.length)\n      addRange(b[iB++], b[iB++], result)\n    else\n      break\n  }\n  return result\n}\n","import {Facet} from \"../../state\"\nimport {StyleModule, Style} from \"style-mod\"\n\nexport const theme = Facet.define<string>()\n\nexport const baseThemeID = StyleModule.newName()\n\nexport function buildTheme(id: string, spec: {[name: string]: Style}) {\n  let styles = Object.create(null)\n  for (let prop in spec) {\n    let parts = prop.split(\".\"), selector = \".\" + id + (parts[0] == \"wrap\" ? \"\" : \" \")\n    for (let i = 1; i <= parts.length; i++) selector += \".cm-\" + parts.slice(0, i).join(\"-\")\n    styles[selector] = spec[prop]\n  }\n  return new StyleModule(styles, {generateClasses: false})\n}\n\n/// Create a set of CSS class names for the given theme selector,\n/// which can be added to a DOM element within an editor to make\n/// themes able to style it. Theme selectors can be single words or\n/// words separated by dot characters. In the latter case, the\n/// returned classes combine those that match the full name and those\n/// that match some prefix—for example `\"panel.search\"` will match\n/// both the theme styles specified as `\"panel.search\"` and those with\n/// just `\"panel\"`. More specific theme styles (with more dots) take\n/// precedence.\nexport function themeClass(selector: string): string {\n  let parts = selector.split(\".\"), result = \"\"\n  for (let i = 1; i <= parts.length; i++)\n    result += (result ? \" \" : \"\") + \"cm-\" + parts.slice(0, i).join(\"-\")\n  return result\n}    \n\nexport const baseTheme = buildTheme(baseThemeID, {\n  wrap: {\n    position: \"relative !important\",\n    boxSizing: \"border-box\",\n    \"&.cm-focused\": {\n      // FIXME it would be great if we could directly use the browser's\n      // default focus outline, but it appears we can't, so this tries to\n      // approximate that\n      outline_fallback: \"1px dotted #212121\",\n      outline: \"5px auto -webkit-focus-ring-color\"\n    },\n    display: \"flex !important\",\n    flexDirection: \"column\"\n  },\n\n  scroller: {\n    display: \"flex !important\",\n    alignItems: \"flex-start !important\",\n    fontFamily: \"monospace\",\n    lineHeight: 1.4,\n    height: \"100%\",\n    overflowX: \"auto\"\n  },\n\n  content: {\n    margin: 0,\n    flexGrow: 2,\n    minHeight: \"100%\",\n    display: \"block\",\n    whiteSpace: \"pre\",\n    boxSizing: \"border-box\",\n\n    padding: \"4px 0\",\n    outline: \"none\",\n    caretColor: \"black\",\n  },\n\n  line: {\n    display: \"block\",\n    padding: \"0 2px 0 4px\"\n  }\n})\n","import {ContentView, DOMPos} from \"./contentview\"\nimport {DocView} from \"./docview\"\nimport {InlineView, TextView} from \"./inlineview\"\nimport {clientRectsFor, Rect} from \"./dom\"\nimport {LineDecoration, WidgetType, BlockType} from \"./decoration\"\nimport {Attrs, combineAttrs, attrsEq, updateAttrs} from \"./attributes\"\nimport {Open} from \"./buildview\"\nimport {themeClass} from \"./theme\"\n\nexport interface BlockView extends ContentView {\n  merge(from: number, to: number, source: ContentView | null, takeDeco: boolean): boolean\n  match(other: BlockView): boolean\n  split(at: number): BlockView\n  type: BlockType\n  dom: HTMLElement | null\n}\n\nconst LineClass = themeClass(\"line\")\n\nexport class LineView extends ContentView implements BlockView {\n  children: InlineView[] = []\n  length: number = 0\n  dom!: HTMLElement | null\n  prevAttrs: Attrs | null | undefined = undefined\n  attrs: Attrs | null = null\n  breakAfter = 0\n\n  // Consumes source\n  merge(from: number, to: number, source: BlockView | null, takeDeco: boolean): boolean {\n    if (source) {\n      if (!(source instanceof LineView)) return false\n      if (!this.dom) source.transferDOM(this) // Reuse source.dom when appropriate\n    }\n    if (takeDeco) this.setDeco(source ? source.attrs : null)\n\n    let elts = source ? source.children : []\n    let cur = this.childCursor()\n    let {i: toI, off: toOff} = cur.findPos(to, 1)\n    let {i: fromI, off: fromOff} = cur.findPos(from, -1)\n    let dLen = from - to\n    for (let view of elts) dLen += view.length\n    this.length += dLen\n\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n      let start = this.children[fromI]\n      // Maybe just update that view and be done\n      if (elts.length == 1 && start.merge(fromOff, toOff, elts[0])) return true\n      if (elts.length == 0) { start.merge(fromOff, toOff, null); return true }\n      // Otherwise split it, so that we don't have to worry about aliasing front/end afterwards\n      let after = start.slice(toOff)\n      if (after.merge(0, 0, elts[elts.length - 1])) elts[elts.length - 1] = after\n      else elts.push(after)\n      toI++\n      toOff = 0\n    }\n\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n      let end = this.children[toI]\n      if (elts.length && end.merge(0, toOff, elts[elts.length - 1])) elts.pop()\n      else end.merge(0, toOff, null)\n    } else if (toI < this.children.length && elts.length &&\n               this.children[toI].merge(0, 0, elts[elts.length - 1])) {\n      elts.pop()\n    }\n    if (fromOff) {\n      let start = this.children[fromI]\n      if (elts.length && start.merge(fromOff, undefined, elts[0])) elts.shift()\n      else start.merge(fromOff, undefined, null)\n      fromI++\n    } else if (fromI && elts.length && this.children[fromI - 1].merge(this.children[fromI - 1].length, undefined, elts[0])) {\n      elts.shift()\n    }\n\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && this.children[toI - 1].match(elts[elts.length - 1])) {\n      elts.pop()\n      toI--\n    }\n    while (fromI < toI && elts.length && this.children[fromI].match(elts[0])) {\n      elts.shift()\n      fromI++\n    }\n\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI) this.replaceChildren(fromI, toI, elts)\n    return true\n  }\n\n  split(at: number) {\n    let end = new LineView\n    end.breakAfter = this.breakAfter\n    if (this.length == 0) return end\n    let {i, off} = this.childPos(at)\n    if (off) {\n      end.append(this.children[i].slice(off))\n      this.children[i].merge(off, undefined, null)\n      i++\n    }\n    for (let j = i; j < this.children.length; j++) end.append(this.children[j])\n    while (i > 0 && this.children[i - 1].length == 0) { this.children[i - 1].parent = null; i-- }\n    this.children.length = i\n    this.markDirty()\n    this.length = at\n    return end\n  }\n\n  transferDOM(other: LineView) {\n    if (!this.dom) return\n    other.setDOM(this.dom)\n    other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs\n    this.prevAttrs = undefined\n    this.dom = null\n  }\n\n  setDeco(attrs: Attrs | null) {\n    if (!attrsEq(this.attrs, attrs)) {\n      if (this.dom) {\n        this.prevAttrs = this.attrs\n        this.markDirty()\n      }\n      this.attrs = attrs\n    }\n  }\n\n  // Only called when building a line view in ContentBuilder\n  append(child: InlineView) {\n    this.children.push(child)\n    child.setParent(this)\n    this.length += child.length\n  }\n\n  // Only called when building a line view in ContentBuilder\n  addLineDeco(deco: LineDecoration) {\n    let attrs = deco.spec.attributes\n    if (attrs) this.attrs = combineAttrs(attrs, this.attrs || {})\n  }\n\n  domAtPos(pos: number): DOMPos {\n    let i = 0\n    for (let off = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = off + child.length\n      if (end == off && child.getSide() <= 0) continue\n      if (pos > off && pos < end && child.dom!.parentNode == this.dom) return child.domAtPos(pos - off)\n      if (pos <= off) break\n      off = end\n    }\n    for (; i > 0; i--) {\n      let before = this.children[i - 1].dom!\n      if (before.parentNode == this.dom) return DOMPos.after(before)\n    }\n    return new DOMPos(this.dom!, 0)\n  }\n\n  // FIXME might need another hack to work around Firefox's behavior\n  // of not actually displaying the cursor even though it's there in\n  // the DOM\n  sync() {\n    if (!this.dom) {\n      this.setDOM(document.createElement(\"div\"))\n      this.dom!.className = LineClass\n      this.prevAttrs = this.attrs ? null : undefined\n    }\n    if (this.prevAttrs !== undefined) {\n      updateAttrs(this.dom!, this.prevAttrs, this.attrs)\n      this.dom!.classList.add(LineClass)\n      this.prevAttrs = undefined\n    }\n    super.sync()\n    let last = this.dom!.lastChild\n    if (!last || (last.nodeName != \"BR\" && !(ContentView.get(last) instanceof TextView))) {\n      let hack = document.createElement(\"BR\")\n      ;(hack as any).cmIgnore = true\n      this.dom!.appendChild(hack)\n    }\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} | null {\n    if (this.children.length == 0 || this.length > 20) return null\n    let totalWidth = 0\n    for (let child of this.children) {\n      if (!(child instanceof TextView)) return null\n      let rects = clientRectsFor(child.dom!)\n      if (rects.length != 1) return null\n      totalWidth += rects[0].width\n    }\n    return {lineHeight: this.dom!.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length}\n  }\n\n  coordsAt(pos: number): Rect | null {\n    for (let off = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = off + child.length\n      if (end >= pos) return child.coordsAt(pos - off)\n      off = end\n    }\n    return (this.dom!.lastChild as HTMLElement).getBoundingClientRect()\n  }\n\n  match(other: ContentView) { return false }\n\n  get type() { return BlockType.Text }\n}\n\nconst none = [] as any\n\nexport class BlockWidgetView extends ContentView implements BlockView {\n  dom!: HTMLElement | null\n  parent!: DocView | null\n  breakAfter = 0\n\n  constructor(\n    public widget: WidgetType,\n    public length: number,\n    public type: BlockType,\n    // This is set by the builder and used to distinguish between\n    // adjacent widgets and parts of the same widget when calling\n    // `merge`. It's kind of silly that it's an instance variable, but\n    // it's hard to route there otherwise.\n    public open: number = 0) {\n    super()\n  }\n\n  merge(from: number, to: number, source: ContentView | null): boolean {\n    if (!(source instanceof BlockWidgetView) || !source.open ||\n        from > 0 && !(source.open & Open.Start) ||\n        to < this.length && !(source.open & Open.End)) return false\n    if (!this.widget.compare(source.widget))\n      throw new Error(\"Trying to merge an open widget with an incompatible node\")\n    this.length = from + source.length + (this.length - to)\n    return true\n  }\n\n  domAtPos(pos: number) {\n    return pos == 0 ? DOMPos.before(this.dom!) : DOMPos.after(this.dom!, pos == this.length)\n  }\n\n  split(at: number) {\n    let len = this.length - at\n    this.length = at\n    return new BlockWidgetView(this.widget, len, this.type)\n  }\n\n  get children() { return none }\n\n  sync() {\n    if (!this.dom || !this.widget.updateDOM(this.dom)) {\n      this.setDOM(this.widget.toDOM(this.editorView))\n      this.dom!.contentEditable = \"false\"\n    }\n  }\n\n  get overrideDOMText() {\n    return this.parent ? this.parent!.view.state.doc.sliceLines(this.posAtStart, this.posAtEnd) : [\"\"]\n  }\n\n  domBoundsAround() { return null }\n\n  match(other: ContentView) {\n    if (other instanceof BlockWidgetView && other.type == this.type &&\n        other.widget.constructor == this.widget.constructor) {\n      if (!other.widget.eq(this.widget.value)) this.markDirty(true)\n      this.widget = other.widget\n      this.length = other.length\n      this.breakAfter = other.breakAfter\n      return true\n    }\n    return false\n  }\n}\n","import {SpanIterator, RangeSet} from \"../../rangeset\"\nimport {DecorationSet, Decoration, PointDecoration, LineDecoration, MarkDecoration, BlockType, WidgetType} from \"./decoration\"\nimport {BlockView, LineView, BlockWidgetView} from \"./blockview\"\nimport {WidgetView, TextView} from \"./inlineview\"\nimport {Text, TextIterator} from \"../../text\"\n\nexport const enum Open { Start = 1, End = 2 }\n\nexport class ContentBuilder implements SpanIterator<Decoration> {\n  content: BlockView[] = []\n  curLine: LineView | null = null\n  breakAtStart = 0\n  cursor: TextIterator\n  text: string = \"\"\n  skip: number\n  textOff: number = 0\n\n  constructor(private doc: Text, public pos: number, public end: number) {\n    this.cursor = doc.iter()\n    this.skip = pos\n  }\n\n  posCovered() {\n    if (this.content.length == 0)\n      return !this.breakAtStart && this.doc.lineAt(this.pos).start != this.pos\n    let last = this.content[this.content.length - 1]\n    return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore)\n  }\n\n  getLine() {\n    if (!this.curLine)\n      this.content.push(this.curLine = new LineView)\n    return this.curLine\n  }\n\n  addWidget(view: BlockWidgetView) {\n    this.curLine = null\n    this.content.push(view)\n  }\n\n  finish() {\n    if (!this.posCovered()) this.getLine()\n  }\n\n  buildText(length: number, tagName: string | null, clss: string | null, attrs: {[key: string]: string} | null,\n            _ranges: Decoration[]) {\n    while (length > 0) {\n      if (this.textOff == this.text.length) {\n        let {value, lineBreak, done} = this.cursor.next(this.skip)\n        this.skip = 0\n        if (done) throw new Error(\"Ran out of text content when drawing inline views\")\n        if (lineBreak) {\n          if (!this.posCovered()) this.getLine()\n          if (this.content.length) this.content[this.content.length - 1].breakAfter = 1\n          else this.breakAtStart = 1\n          this.curLine = null\n          length--\n          continue\n        } else {\n          this.text = value\n          this.textOff = 0\n        }\n      }\n      let take = Math.min(this.text.length - this.textOff, length)\n      this.getLine().append(new TextView(this.text.slice(this.textOff, this.textOff + take), tagName, clss, attrs))\n      length -= take\n      this.textOff += take\n    }\n  }\n\n  span(from: number, to: number, active: Decoration[]) {\n    let tagName = null, clss = null\n    let attrs: {[key: string]: string} | null = null\n    for (let {spec} of active as MarkDecoration[]) {\n      if (spec.tagName) tagName = spec.tagName\n      if (spec.class) clss = clss ? clss + \" \" + spec.class : spec.class\n      if (spec.attributes) for (let name in spec.attributes) {\n        let value = spec.attributes[name]\n        if (value == null) continue\n        if (name == \"class\") {\n          clss = clss ? clss + \" \" + value : value\n        } else {\n          if (!attrs) attrs = {}\n          if (name == \"style\" && attrs.style) value = attrs.style + \";\" + value\n          attrs[name] = value\n        }\n      }\n    }\n\n    this.buildText(to - from, tagName, clss, attrs, active)\n    this.pos = to\n  }\n\n  point(from: number, to: number, deco: Decoration, openStart: boolean, openEnd: boolean) {\n    let open = (openStart ? Open.Start : 0) | (openEnd ? Open.End : 0)\n    let len = to - from\n    if (deco instanceof PointDecoration) {\n      if (deco.block) {\n        let {type} = deco\n        if (type == BlockType.WidgetAfter && !this.posCovered()) this.getLine()\n        this.addWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type, open))\n      } else {\n        this.getLine().append(WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide, open))\n      }\n    } else if (this.doc.lineAt(this.pos).start == this.pos) { // Line decoration\n      this.getLine().addLineDeco(deco as LineDecoration)\n    }\n\n    if (len) {\n      // Advance the iterator past the replaced content\n      if (this.textOff + len <= this.text.length) {\n        this.textOff += len\n      } else {\n        this.skip += len - (this.text.length - this.textOff)\n        this.text = \"\"\n        this.textOff = 0\n      }\n      this.pos = to\n    }\n  }\n\n  static build(text: Text, from: number, to: number, decorations: readonly DecorationSet[]):\n    {content: BlockView[], breakAtStart: number} {\n    let builder = new ContentBuilder(text, from, to)\n    RangeSet.spans(decorations, from, to, builder)\n    builder.finish()\n    return builder\n  }\n}\n\nclass NullWidget extends WidgetType<string> {\n  toDOM() { return document.createElement(this.value) }\n  updateDOM(elt: HTMLElement) { return elt.nodeName.toLowerCase() == this.value }\n}\n","import {Text} from \"../../text\"\nimport {ChangedRange} from \"../../state\"\nimport {RangeSet, SpanIterator} from \"../../rangeset\"\nimport {DecorationSet, PointDecoration, Decoration, BlockType, addRange} from \"./decoration\"\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"]\n\nexport class HeightOracle {\n  doc: Text = Text.empty\n  lineWrapping: boolean = false\n  direction: \"ltr\" | \"rtl\" = \"ltr\"\n  heightSamples: {[key: number]: boolean} = {}\n  lineHeight: number = 14\n  charWidth: number = 7\n  lineLength: number = 30\n  // Used to track, during updateHeight, if any actual heights changed\n  heightChanged: boolean = false\n\n  heightForGap(from: number, to: number): number {\n    let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1\n    if (this.lineWrapping)\n      lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength)\n    return this.lineHeight * lines\n  }\n\n  heightForLine(length: number): number {\n    if (!this.lineWrapping) return this.lineHeight\n    let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)))\n    return lines * this.lineHeight\n  }\n\n  setDoc(doc: Text): this { this.doc = doc; return this }\n\n  mustRefresh(lineHeights: number[], whiteSpace: string, direction: string): boolean {\n    let newHeight = false\n    for (let i = 0; i < lineHeights.length; i++) {\n      let h = lineHeights[i]\n      if (h < 0) {\n        i++\n      } else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n        newHeight = true\n        this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return newHeight || (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction\n  }\n\n  refresh(whiteSpace: string, direction: \"ltr\" | \"rtl\", lineHeight: number, charWidth: number,\n          lineLength: number, knownHeights: number[]): boolean {\n    let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1\n    let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n      this.lineWrapping != lineWrapping ||\n      this.direction != direction\n    this.lineWrapping = lineWrapping\n    this.direction = direction\n    this.lineHeight = lineHeight\n    this.charWidth = charWidth\n    this.lineLength = lineLength\n    if (changed) {\n      this.heightSamples = {}\n      for (let i = 0; i < knownHeights.length; i++) {\n        let h = knownHeights[i]\n        if (h < 0) i++\n        else this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return changed\n  }\n}\n\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nexport class MeasuredHeights {\n  public index = 0\n  constructor(readonly from: number, readonly heights: number[]) {}\n  get more() { return this.index < this.heights.length }\n}\n\n/// Record used to represent information about a block-level element\n/// in the editor view.\nexport class BlockInfo {\n  /// @internal\n  constructor(\n    /// The start of the element in the document.\n    readonly from: number,\n    /// The length of the element.\n    readonly length: number,\n    /// The top position of the element.\n    readonly top: number,\n    /// Its height.\n    readonly height: number,\n    /// The type of element this is. When querying lines, this may be\n    /// an array of all the blocks that make up the line.\n    readonly type: BlockType | readonly BlockInfo[]\n  ) {}\n\n  /// The end of the element as a document position.\n  get to() { return this.from + this.length }\n  /// The bottom position of the element.\n  get bottom() { return this.top + this.height }\n\n  /// @internal\n  join(other: BlockInfo) {\n    let detail = (Array.isArray(this.type) ? this.type : [this])\n      .concat(Array.isArray(other.type) ? other.type : [other])\n    return new BlockInfo(this.from, this.length + other.length,\n                         this.top, this.height + other.height, detail)\n  }\n}\n\nexport enum QueryType { ByPos, ByHeight, ByPosNoHeight }\n\nconst enum Flag { Break = 1, Outdated = 2 }\n\nexport abstract class HeightMap {\n  constructor(\n    public length: number, // The number of characters covered\n    public height: number, // Height of this part of the document\n    public flags: number = Flag.Outdated\n  ) {}\n\n  size!: number\n\n  get outdated() { return (this.flags & Flag.Outdated) > 0 }\n  set outdated(value) { this.flags = (value ? Flag.Outdated : 0) | (this.flags & ~Flag.Outdated) }\n\n  abstract blockAt(height: number, doc: Text, top: number, offset: number): BlockInfo\n  abstract lineAt(value: number, type: QueryType, doc: Text, top: number, offset: number): BlockInfo\n  abstract forEachLine(from: number, to: number, doc: Text, top: number, offset: number, f: (line: BlockInfo) => void): void\n\n  abstract updateHeight(oracle: HeightOracle, offset?: number, force?: boolean, measured?: MeasuredHeights): HeightMap\n  abstract toString(): void\n\n  setHeight(oracle: HeightOracle, height: number) {\n    if (this.height != height) {\n      this.height = height\n      oracle.heightChanged = true\n    }\n  }\n\n  // Base case is to replace a leaf node, which simply builds a tree\n  // from the new nodes and returns that (HeightMapBranch and\n  // HeightMapGap override this to actually use from/to)\n  replace(_from: number, _to: number, nodes: (HeightMap | null)[]): HeightMap {\n    return HeightMap.of(nodes)\n  }\n\n  // Again, these are base cases, and are overridden for branch and gap nodes.\n  decomposeLeft(_to: number, result: (HeightMap | null)[]) { result.push(this) }\n  decomposeRight(_from: number, result: (HeightMap | null)[]) { result.push(this) }\n\n  applyChanges(decorations: readonly DecorationSet[], oldDoc: Text, oracle: HeightOracle,\n               changes: readonly ChangedRange[]): HeightMap {\n    let me: HeightMap = this\n    for (let i = changes.length - 1; i >= 0; i--) {\n      let {fromA, toA, fromB, toB} = changes[i]\n      let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0)\n      let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0)\n      toB += end.to - toA; toA = end.to\n      while (i > 0 && start.from <= changes[i - 1].toA) {\n        fromA = changes[i - 1].fromA\n        fromB = changes[i - 1].fromB\n        i--\n        if (fromA < start.from) start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0)\n      }\n      fromB += start.from - fromA; fromA = start.from\n      let nodes = NodeBuilder.build(oracle, decorations, fromB, toB)\n      me = me.replace(fromA, toA, nodes)\n    }\n    return me.updateHeight(oracle, 0)\n  }\n\n  static empty(): HeightMap { return new HeightMapText(0, 0) }\n\n  // nodes uses null values to indicate the position of line breaks.\n  // There are never line breaks at the start or end of the array, or\n  // two line breaks next to each other, and the array isn't allowed\n  // to be empty (same restrictions as return value from the builder).\n  static of(nodes: (HeightMap | null)[]): HeightMap {\n    if (nodes.length == 1) return nodes[0] as HeightMap\n\n    let i = 0, j = nodes.length, before = 0, after = 0\n    for (;;) {\n      if (i == j) {\n        if (before > after * 2) {\n          let split = nodes[i - 1] as HeightMapBranch\n          if (split.break) nodes.splice(--i, 1, split.left, null, split.right)\n          else nodes.splice(--i, 1, split.left, split.right)\n          j += 1 + split.break\n          before -= split.size\n        } else if (after > before * 2) {\n          let split = nodes[j] as HeightMapBranch\n          if (split.break) nodes.splice(j, 1, split.left, null, split.right)\n          else nodes.splice(j, 1, split.left, split.right)\n          j += 2 + split.break\n          after -= split.size\n        } else {\n          break\n        }\n      } else if (before < after) {\n        let next = nodes[i++]\n        if (next) before += next.size\n      } else {\n        let next = nodes[--j]\n        if (next) after += next.size\n      }\n    }\n\n    let brk = 0\n    if (nodes[i - 1] == null) { brk = 1; i-- }\n    else if (nodes[i] == null) { brk = 1; j++ }\n    return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)))\n  }\n}\n\nHeightMap.prototype.size = 1\n\nclass HeightMapBlock extends HeightMap {\n  constructor(length: number, height: number, readonly type: BlockType) { super(length, height) }\n\n  blockAt(_height: number, _doc: Text, top: number, offset: number) {\n    return new BlockInfo(offset, this.length, top, this.height, this.type)\n  }\n\n  lineAt(_value: number, _type: QueryType, doc: Text, top: number, offset: number) {\n    return this.blockAt(0, doc, top, offset)\n  }\n\n  forEachLine(_from: number, _to: number, doc: Text, top: number, offset: number, f: (line: BlockInfo) => void) {\n    f(this.blockAt(0, doc, top, offset))\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, _force: boolean = false, measured?: MeasuredHeights) {\n    if (measured && measured.from <= offset && measured.more)\n      this.setHeight(oracle, measured.heights[measured.index++])\n    this.outdated = false\n    return this\n  }\n\n  toString() { return `block(${this.length})` }\n}\n\nclass HeightMapText extends HeightMapBlock {\n  public collapsed = 0 // Amount of collapsed content in the line\n  public widgetHeight = 0 // Maximum inline widget height\n\n  constructor(length: number, height: number) { super(length, height, BlockType.Text) }\n\n  replace(_from: number, _to: number, nodes: (HeightMap | null)[]): HeightMap {\n    if (nodes.length == 1 && nodes[0] instanceof HeightMapText && Math.abs(this.length - nodes[0]!.length) < 10) {\n      nodes[0]!.height = this.height\n      return nodes[0]!\n    } else {\n      return HeightMap.of(nodes)\n    }\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights) {\n    if (measured && measured.from <= offset && measured.more)\n      this.setHeight(oracle, measured.heights[measured.index++])\n    else if (force || this.outdated)\n      this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)))\n    this.outdated = false\n    return this\n  }\n\n  toString() {\n    return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`\n  }\n}\n\nclass HeightMapGap extends HeightMap {\n  constructor(length: number) { super(length, 0) }\n\n  private lines(doc: Text, offset: number): {firstLine: number, lastLine: number, lineHeight: number} {\n    let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number\n    return {firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1)}\n  }\n\n  blockAt(height: number, doc: Text, top: number, offset: number) {\n    let {firstLine, lastLine, lineHeight} = this.lines(doc, offset)\n    let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)))\n    let {start, length} = doc.line(firstLine + line)\n    return new BlockInfo(start, length, top + lineHeight * line, lineHeight, BlockType.Text)\n  }\n\n  lineAt(value: number, type: QueryType, doc: Text, top: number, offset: number) {\n    if (type == QueryType.ByHeight) return this.blockAt(value, doc, top, offset)\n    if (type == QueryType.ByPosNoHeight) {\n      let {start, end} = doc.lineAt(value)\n      return new BlockInfo(start, end - start, 0, 0, BlockType.Text)\n    }\n    let {firstLine, lineHeight} = this.lines(doc, offset)\n    let {start, length, number} = doc.lineAt(value)\n    return new BlockInfo(start, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text)\n  }\n\n  forEachLine(from: number, to: number, doc: Text, top: number, offset: number, f: (line: BlockInfo) => void) {\n    let {firstLine, lastLine, lineHeight} = this.lines(doc, offset)\n    for (let line = firstLine; line <= lastLine; line++) {\n      let {start, end} = doc.line(line)\n      if (start > to) break\n      if (end >= from) f(new BlockInfo(start, end - start, top, top += lineHeight, BlockType.Text))\n    }\n  }\n\n  replace(from: number, to: number, nodes: (HeightMap | null)[]): HeightMap {\n    let after = this.length - to\n    if (after > 0) {\n      let last = nodes[nodes.length - 1]\n      if (last instanceof HeightMapGap) nodes[nodes.length - 1] = new HeightMapGap(last.length + after)\n      else nodes.push(null, new HeightMapGap(after - 1))\n    }\n    if (from > 0) {\n      let first = nodes[0]\n      if (first instanceof HeightMapGap) nodes[0] = new HeightMapGap(from + first.length)\n      else nodes.unshift(new HeightMapGap(from - 1), null)\n    }\n    return HeightMap.of(nodes)\n  }\n\n  decomposeLeft(to: number, result: (HeightMap | null)[]) {\n    result.push(to == this.length ? this : new HeightMapGap(to))\n  }\n\n  decomposeRight(from: number, result: (HeightMap | null)[]) {\n    result.push(from == 0 ? this : new HeightMapGap(this.length - from))\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let end = offset + this.length\n    if (measured && measured.from <= offset + this.length && measured.more) {\n      // Fill in part of this gap with measured lines. We know there\n      // can't be widgets or collapsed ranges in those lines, because\n      // they would already have been added to the heightmap (gaps\n      // only contain plain text).\n      let nodes = [], pos = Math.max(offset, measured.from)\n      if (measured.from > offset) nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset))\n      while (pos <= end && measured.more) {\n        let len = oracle.doc.lineAt(pos).length\n        if (nodes.length) nodes.push(null)\n        let line = new HeightMapText(len, measured.heights[measured.index++])\n        line.outdated = false\n        nodes.push(line)\n        pos += len + 1\n      }\n      if (pos <= end) nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos))\n      oracle.heightChanged = true\n      return HeightMap.of(nodes)\n    } else if (force || this.outdated) {\n      this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length))\n      this.outdated = false\n    }\n    return this\n  }\n\n  toString() { return `gap(${this.length})` }\n}\n\nclass HeightMapBranch extends HeightMap {\n  size: number\n\n  constructor(public left: HeightMap, brk: number, public right: HeightMap) {\n    super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? Flag.Outdated : 0))\n    this.size = left.size + right.size\n  }\n\n  get break() { return this.flags & Flag.Break }\n\n  blockAt(height: number, doc: Text, top: number, offset: number) {\n    let mid = top + this.left.height\n    return height < mid || this.right.height == 0 ? this.left.blockAt(height, doc, top, offset)\n      : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break)\n  }\n\n  lineAt(value: number, type: QueryType, doc: Text, top: number, offset: number) {\n    let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break\n    let left = type == QueryType.ByHeight ? value < rightTop || this.right.height == 0 : value < rightOffset\n    let base = left ? this.left.lineAt(value, type, doc, top, offset)\n      : this.right.lineAt(value, type, doc, rightTop, rightOffset)\n    if (this.break || (left ? base.to < rightOffset : base.from > rightOffset)) return base\n    let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos\n    if (left)\n      return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset))\n    else\n      return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base)\n  }\n\n  forEachLine(from: number, to: number, doc: Text, top: number, offset: number, f: (line: BlockInfo) => void) {\n    let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break\n    if (this.break) {\n      if (from < rightOffset) this.left.forEachLine(from, to, doc, top, offset, f)\n      if (to >= rightOffset) this.right.forEachLine(from, to, doc, rightTop, rightOffset, f)\n    } else {\n      let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset)\n      if (from < mid.from) this.left.forEachLine(from, mid.from - 1, doc, top, offset, f)\n      if (mid.to >= from && mid.from <= to) f(mid)\n      if (to > mid.to) this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f)\n    }\n  }\n\n  replace(from: number, to: number, nodes: (HeightMap | null)[]): HeightMap {\n    let rightStart = this.left.length + this.break\n    if (to < rightStart)\n      return this.balanced(this.left.replace(from, to, nodes), this.right)\n    if (from > this.left.length)\n      return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes))\n\n    let result: (HeightMap | null)[] = []\n    if (from > 0) this.decomposeLeft(from, result)\n    let left = result.length\n    for (let node of nodes) result.push(node)\n    if (from > 0) mergeGaps(result, left - 1)\n    if (to < this.length) {\n      let right = result.length\n      this.decomposeRight(to, result)\n      mergeGaps(result, right)\n    }\n    return HeightMap.of(result)\n  }\n\n  decomposeLeft(to: number, result: (HeightMap | null)[]) {\n    let left = this.left.length\n    if (to <= left) return this.left.decomposeLeft(to, result)\n    result.push(this.left)\n    if (this.break) {\n      left++\n      if (to >= left) result.push(null)\n    }\n    if (to > left) this.right.decomposeLeft(to - left, result)\n  }\n\n  decomposeRight(from: number, result: (HeightMap | null)[]) {\n    let left = this.left.length, right = left + this.break\n    if (from >= right) return this.right.decomposeRight(from - right, result)\n    if (from < left) this.left.decomposeRight(from, result)\n    if (this.break && from < right) result.push(null)\n    result.push(this.right)\n  }\n\n  balanced(left: HeightMap, right: HeightMap): HeightMap {\n    if (left.size > 2 * right.size || right.size > 2 * left.size)\n      return HeightMap.of(this.break ? [left, null, right] : [left, right])\n    this.left = left; this.right = right\n    this.height = left.height + right.height\n    this.outdated = left.outdated || right.outdated\n    this.size = left.size + right.size\n    this.length = left.length + this.break + right.length\n    return this\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let {left, right} = this, rightStart = offset + left.length + this.break, rebalance: any = null\n    if (measured && measured.from <= offset + left.length && measured.more)\n      rebalance = left = left.updateHeight(oracle, offset, force, measured)\n    else\n      left.updateHeight(oracle, offset, force)\n    if (measured && measured.from <= rightStart + right.length && measured.more)\n      rebalance = right = right.updateHeight(oracle, rightStart, force, measured)\n    else\n      right.updateHeight(oracle, rightStart, force)\n    if (rebalance) return this.balanced(left, right)\n    this.height = this.left.height + this.right.height\n    this.outdated = false\n    return this\n  }\n\n  toString() { return this.left + (this.break ? \" \" : \"-\") + this.right }\n}\n\nfunction mergeGaps(nodes: (HeightMap | null)[], around: number) {\n  let before, after\n  if (nodes[around] == null &&\n      (before = nodes[around - 1]) instanceof HeightMapGap &&\n      (after = nodes[around + 1]) instanceof HeightMapGap)\n    nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length))\n}\n\nconst relevantWidgetHeight = 5\n\nclass NodeBuilder implements SpanIterator<Decoration> {\n  nodes: (HeightMap | null)[] = []\n  writtenTo: number\n  lineStart = -1\n  lineEnd = -1\n  covering: HeightMapBlock | null = null\n\n  constructor(public pos: number, public oracle: HeightOracle) {\n    this.writtenTo = pos\n  }\n\n  get isCovered() {\n    return this.covering && this.nodes[this.nodes.length - 1] == this.covering\n  }\n\n  span(_from: number, to: number) {\n    if (this.lineStart > -1) {\n      let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1]\n      if (last instanceof HeightMapText)\n        last.length += end - this.pos\n      else if (end > this.pos || !this.isCovered)\n        this.nodes.push(new HeightMapText(end - this.pos, -1))\n      this.writtenTo = end\n      if (to > end) {\n        this.nodes.push(null)\n        this.writtenTo++\n        this.lineStart = -1\n      }\n    }\n    this.pos = to\n  }\n\n  point(from: number, to: number, deco: PointDecoration) {\n    if (from < to || deco.heightRelevant) {\n      let height = deco.widget ? Math.max(0, deco.widget.estimatedHeight) : 0\n      let len = to - from\n      if (deco.block) {\n        this.addBlock(new HeightMapBlock(len, height, deco.type))\n      } else if (len || height >= relevantWidgetHeight) {\n        this.addLineDeco(height, len)\n      }\n    } else if (to > from) {\n      this.span(from, to)\n    }\n    if (this.lineEnd > -1 && this.lineEnd < this.pos)\n      this.lineEnd = this.oracle.doc.lineAt(this.pos).end\n  }\n\n  enterLine() {\n    if (this.lineStart > -1) return\n    let {start, end} = this.oracle.doc.lineAt(this.pos)\n    this.lineStart = start; this.lineEnd = end\n    if (this.writtenTo < start) {\n      if (this.writtenTo < start - 1 || this.nodes[this.nodes.length - 1] == null)\n        this.nodes.push(new HeightMapGap(start - this.writtenTo - 1))\n      this.nodes.push(null)\n    }\n    if (this.pos > start)\n      this.nodes.push(new HeightMapText(this.pos - start, -1))\n    this.writtenTo = this.pos\n  }\n\n  ensureLine() {\n    this.enterLine()\n    let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null\n    if (last instanceof HeightMapText) return last\n    let line = new HeightMapText(0, -1)\n    this.nodes.push(line)\n    return line\n  }\n\n  addBlock(block: HeightMapBlock) {\n    this.enterLine()\n    if (block.type == BlockType.WidgetAfter && !this.isCovered) this.ensureLine()\n    this.nodes.push(block)\n    this.writtenTo = this.pos = this.pos + block.length\n    if (block.type != BlockType.WidgetBefore) this.covering = block\n  }\n\n  addLineDeco(height: number, length: number) {\n    let line = this.ensureLine()\n    line.length += length\n    line.collapsed += length\n    line.widgetHeight = Math.max(line.widgetHeight, height)\n    this.writtenTo = this.pos = this.pos + length\n  }\n\n  finish(from: number) {\n    let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1]\n    if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n      this.nodes.push(new HeightMapText(0, -1))\n    else if (this.writtenTo < this.pos || last == null)\n      this.nodes.push(new HeightMapGap(this.pos - this.writtenTo))\n    let pos = from\n    for (let node of this.nodes) {\n      if (node instanceof HeightMapText) node.updateHeight(this.oracle, pos)\n      pos += node ? node.length : 1\n    }\n    return this.nodes\n  }\n\n  // Always called with a region that on both sides either stretches\n  // to a line break or the end of the document.\n  // The returned array uses null to indicate line breaks, but never\n  // starts or ends in a line break, or has multiple line breaks next\n  // to each other.\n  static build(oracle: HeightOracle, decorations: readonly DecorationSet[],\n               from: number, to: number): (HeightMap | null)[] {\n    let builder = new NodeBuilder(from, oracle)\n    RangeSet.spans(decorations, from, to, builder)\n    return builder.finish(from)\n  }\n\n  get minPointSize() { return 0 }\n}\n\nexport function heightRelevantDecoChanges(a: readonly DecorationSet[], b: readonly DecorationSet[],\n                                          diff: readonly ChangedRange[], length: number) {\n  let comp = new DecorationComparator()\n  RangeSet.compare(a, b, diff, length, comp)\n  return comp.changes\n}\n\nclass DecorationComparator {\n  changes: number[] = []\n\n  compareRange() {}\n\n  comparePoint(from: number, to: number, a: Decoration | null, b: Decoration | null) {\n    if (from < to || a && a.heightRelevant || b && b.heightRelevant) addRange(from, to, this.changes)\n  }\n\n  get minPointSize() { return 0 }\n}\n","import {EditorState, Transaction, ChangeSet, Facet, Extension} from \"../../state\"\nimport {StyleModule} from \"style-mod\"\nimport {DecorationSet} from \"./decoration\"\nimport {EditorView} from \"./editorview\"\nimport {Attrs, combineAttrs} from \"./attributes\"\nimport {Rect} from \"./dom\"\n\n/// Command functions are used in key bindings and other types of user\n/// actions. Given an editor view, they check whether their effect can\n/// apply to the editor, and if it can, perform it as a side effect\n/// (which usually means dispatching a transaction) and return `true`.\nexport type Command = (target: EditorView) => boolean\n\nconst none: readonly any[] = []\n\nexport const domEventHandlers = Facet.define<{[key: string]: (view: EditorView, event: any) => boolean}>()\n\nexport const clickAddsSelectionRange = Facet.define<(event: MouseEvent) => boolean>()\n\nexport const dragMovesSelection = Facet.define<(event: MouseEvent) => boolean>()\n\n/// This is the interface plugin objects conform to.\nexport interface PluginValue {\n  /// Notifies the plugin of an update that happened in the view. This\n  /// is called _before_ the view updates its DOM. It is responsible\n  /// for updating the plugin's internal state (including any state\n  /// that may be read by behaviors). It should _not_ change the DOM,\n  /// or read the DOM in a way that triggers a layout recomputation.\n  update?(_update: ViewUpdate): void\n\n  /// Called when the plugin is no longer going to be used. Should\n  /// revert any changes the plugin made to the DOM.\n  destroy?(): void\n}\n\n/// Plugin fields are a mechanism for allowing plugins to provide\n/// values that can be retrieved through the\n/// [`pluginValues`](#view.EditorView.pluginValues) view method.\nexport class PluginField<T> {\n  static define<T>() { return new PluginField<T>() }\n\n  /// Plugins can provide additional scroll margins (space around the\n  /// sides of the scrolling element that should be considered\n  /// invisible) through this field. This can be useful when the\n  /// plugin introduces elements that cover part of that element (for\n  /// example a horizontally fixed gutter).\n  static scrollMargins = PluginField.define<Partial<Rect> | null>()\n}\n\nlet nextPluginID = 0\n\nexport const viewPlugin = Facet.define<ViewPlugin<any>>()\n\n/// View plugins associate stateful values with a view. They can\n/// influence the way the content is drawn, and are notified of things\n/// that happen in the view.\nexport class ViewPlugin<T extends PluginValue> {\n  /// Instances of this class act as extensions.\n  extension: Extension\n\n  private constructor(\n    /// @internal\n    readonly id: number,\n    /// @internal\n    readonly create: (view: EditorView) => T,\n    /// @internal\n    readonly fields: readonly {field: PluginField<any>, get: (plugin: T) => any}[]\n  ) {\n    this.extension = viewPlugin.of(this)\n  }\n\n  /// Define a plugin from a constructor function that creates the\n  /// plugin's value, given an editor view.\n  static define<T extends PluginValue>(create: (view: EditorView) => T) {\n    return new ViewPlugin<T>(nextPluginID++, create, [])\n  }\n\n  /// Create a plugin for a class whose constructor takes a single\n  /// editor view as argument.\n  static fromClass<T extends PluginValue>(cls: {new (view: EditorView): T}) {\n    return ViewPlugin.define(view => new cls(view))\n  }\n\n  /// Create a new version of this plugin that provides a given\n  /// [plugin field](#view.PluginField).\n  provide<V>(field: PluginField<V>, get: (plugin: T) => V) {\n    return new ViewPlugin(this.id, this.create, this.fields.concat({field, get}))\n  }\n\n  /// Create a new version of this plugin that provides decorations.\n  /// Decorations provided by plugins can observe the editor and base\n  /// on, for example, the current viewport. On the other hand, they\n  /// should not influence the viewport, for example through collapsed\n  /// regions or large widgets.\n  ///\n  /// When the plugin value type has a `decorations` property, that is\n  /// used to provide the decorations when no explicit getter is\n  /// provided.\n  decorations<V extends {decorations: DecorationSet} & PluginValue>(this: ViewPlugin<V>): ViewPlugin<T>\n  decorations(get: (plugin: T) => DecorationSet): ViewPlugin<T>\n  decorations(get?: (plugin: T) => DecorationSet) {\n    return this.provide(pluginDecorations, get || ((value: any) => value.decorations))\n  }\n}\n\n// FIXME somehow ensure that no replacing decorations end up in here\nexport const pluginDecorations = PluginField.define<DecorationSet>()\n\nexport class PluginInstance {\n  updateFunc: (update: ViewUpdate) => void\n\n  constructor(readonly value: PluginValue, readonly spec: ViewPlugin<any>) {\n    this.updateFunc = this.value.update ? this.value.update.bind(this.value) : () => undefined\n  }\n\n  static create(spec: ViewPlugin<any>, view: EditorView) {\n    let value\n    try { value = spec.create(view) }\n    catch (e) {\n      console.error(\"CodeMirror plugin crashed:\", e)\n      return PluginInstance.dummy\n    }\n    return new PluginInstance(value, spec)\n  }\n\n  takeField<T>(type: PluginField<T>, target: T[]) {\n    for (let {field, get} of this.spec.fields) if (field == type) target.push(get(this.value))\n  }\n\n  update(update: ViewUpdate) {\n    try {\n      this.updateFunc(update)\n      return this\n    } catch (e) {\n      console.error(\"CodeMirror plugin crashed:\", e)\n      if (this.value.destroy) try { this.value.destroy() } catch (_) {}\n      return PluginInstance.dummy\n    }\n  }\n\n  destroy() {\n    try { if (this.value.destroy) this.value.destroy() }\n    catch (e) { console.error(\"CodeMirror plugin crashed:\", e) }\n  }\n\n  static dummy = new PluginInstance({}, ViewPlugin.define(() => ({})))\n}\n\nexport interface MeasureRequest<T> {\n  key?: any\n  read(view: EditorView): T\n  write(measure: T, view: EditorView): void\n}\n\nexport const editorAttributes = Facet.define<Attrs, Attrs>({\n  combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n})\n\nexport const contentAttributes = Facet.define<Attrs, Attrs>({\n  combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n})\n\n// Provide decorations\nexport const decorations = Facet.define<DecorationSet>()\n\nexport const styleModule = Facet.define<StyleModule>()\n\nexport const phrases = Facet.define<{[key: string]: string}>()\n\nexport const enum UpdateFlag { Focus = 1, Height = 2, Viewport = 4, Oracle = 8, LineGaps = 16 }\n\n/// View [plugins](#view.ViewPlugin) are given instances of this\n/// class, which describe what happened, whenever the view is updated.\nexport class ViewUpdate {\n  /// The changes made to the document by this update.\n  readonly changes: ChangeSet\n  /// The previous editor state.\n  readonly prevState: EditorState\n  /// @internal\n  flags = 0\n\n  /// @internal\n  constructor(\n    /// The editor view that the update is associated with.\n    readonly view: EditorView,\n  /// The new editor state.\n    readonly state: EditorState,\n    /// The transactions involved in the update. May be empty.\n    readonly transactions: readonly Transaction[] = none\n  ) {\n    this.changes = transactions.reduce((chs, tr) => chs.appendSet(tr.changes), ChangeSet.empty)\n    this.prevState = view.state\n    let focus = view.hasFocus\n    if (focus != view.inputState.notifiedFocused) {\n      view.inputState.notifiedFocused = focus\n      this.flags != UpdateFlag.Focus\n    }\n    if (this.docChanged) this.flags |= UpdateFlag.Height\n  }\n\n  /// Tells you whether the viewport changed in this update.\n  get viewportChanged() {\n    return (this.flags & UpdateFlag.Viewport) > 0\n  }\n\n  /// Indicates whether the line height in the editor changed in this update.\n  get heightChanged() {\n    return (this.flags & UpdateFlag.Height) > 0\n  }\n\n  /// True when this update indicates a focus change.\n  get focusChanged() {\n    return (this.flags & UpdateFlag.Focus) > 0\n  }\n\n  /// Whether the document changed in this update.\n  get docChanged() {\n    return this.transactions.some(tr => tr.docChanged)\n  }\n\n  /// Whether the selection was explicitly set in this update.\n  get selectionSet() {\n    return this.transactions.some(tr => tr.selectionSet)\n  }\n\n  /// @internal\n  get empty() { return this.flags == 0 && this.transactions.length == 0 }\n}\n","import {Text} from \"../../text\"\nimport {EditorState, ChangedRange, ChangeSet, Mapping} from \"../../state\"\nimport {RangeSet} from \"../../rangeset\"\nimport {Rect} from \"./dom\"\nimport {HeightMap, HeightOracle, BlockInfo, MeasuredHeights, QueryType, heightRelevantDecoChanges} from \"./heightmap\"\nimport {decorations, ViewUpdate, UpdateFlag} from \"./extension\"\nimport {WidgetType, Decoration, DecorationSet} from \"./decoration\"\nimport {DocView} from \"./docview\"\n\nfunction visiblePixelRange(dom: HTMLElement, paddingTop: number): Rect {\n  let rect = dom.getBoundingClientRect()\n  let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right)\n  let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom)\n  for (let parent = dom.parentNode as any; parent;) { // (Cast to any because TypeScript is useless with Node types)\n    if (parent.nodeType == 1) {\n      if (parent.scrollHeight > parent.clientHeight || parent.scrollWidth > parent.clientWidth) {\n        let parentRect = parent.getBoundingClientRect()\n        left = Math.max(left, parentRect.left)\n        right = Math.min(right, parentRect.right)\n        top = Math.max(top, parentRect.top)\n        bottom = Math.min(bottom, parentRect.bottom)\n      }\n      parent = parent.parentNode\n    } else if (parent.nodeType == 11) { // Shadow root\n      parent = parent.host\n    } else {\n      break\n    }\n  }\n  \n  return {left: left - rect.left, right: right - rect.left,\n          top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop)}\n}\n\nconst enum VP {\n  // FIXME look into appropriate value of this through benchmarking etc\n  Margin = 1000,\n  // coveredBy requires at least this many extra pixels to be covered\n  MinCoverMargin = 10,\n  MaxCoverMargin = VP.Margin / 4\n}\n\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nexport class LineGap {\n  constructor(readonly from: number, readonly to: number, readonly size: number) {}\n\n  static same(a: readonly LineGap[], b: readonly LineGap[]) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      let gA = a[i], gB = b[i]\n      if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size) return false\n    }\n    return true\n  }\n\n  draw(wrapping: boolean) {\n    return Decoration.replace({widget: new LineGapWidget({size: this.size, vertical: wrapping})}).range(this.from, this.to)\n  }\n}\n\nclass LineGapWidget extends WidgetType<{size: number, vertical: boolean}> {\n  toDOM() {\n    let elt = document.createElement(\"div\")\n    if (this.value.vertical) {\n      elt.style.height = this.value.size + \"px\"\n    } else {\n      elt.style.width = this.value.size + \"px\"\n      elt.style.height = \"2px\"\n      elt.style.display = \"inline-block\"\n    }\n    return elt\n  }\n\n  eq(other: {size: number, vertical: boolean}) { return this.value.size == other.size && this.value.vertical == other.vertical }\n\n  get estimatedHeight() { return this.value.vertical ? this.value.size : -1 }\n}\n\nconst enum LG { Margin = 10000, HalfMargin = LG.Margin >> 1,  MinViewPort = LG.Margin * 1.5 }\n\nexport class ViewState {\n  // These are contentDOM-local coordinates\n  pixelViewport: Rect = {left: 0, right: window.innerWidth, top: 0, bottom: 0}\n\n  paddingTop = 0\n  paddingBottom = 0\n\n  heightOracle: HeightOracle = new HeightOracle\n  heightMap: HeightMap = HeightMap.empty()\n\n  scrollTo = -1\n  // Briefly set to true when printing, to disable viewport limiting\n  printing = false\n\n  viewport: Viewport\n  visibleRanges: readonly {from: number, to: number}[] = []\n  lineGaps: readonly LineGap[]\n  lineGapDeco: DecorationSet\n\n  constructor(public state: EditorState) {\n    this.heightMap = this.heightMap.applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc),\n                                                 [new ChangedRange(0, 0, 0, state.doc.length)])\n    this.viewport = this.getViewport(0, -1)\n    this.lineGaps = this.ensureLineGaps([])\n    this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)))\n    this.computeVisibleRanges()\n  }\n\n  update(update: ViewUpdate, scrollTo = -1) {\n    let prev = this.state\n    this.state = update.state\n    let newDeco = this.state.facet(decorations)\n    let contentChanges = update.changes.changedRanges()\n    \n    let heightChanges = extendWithRanges(contentChanges, heightRelevantDecoChanges(\n      update.prevState.facet(decorations), newDeco,update ? contentChanges : [], this.state.doc.length))\n    let prevHeight = this.heightMap.height\n    this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges)\n    if (this.heightMap.height != prevHeight) update.flags |= UpdateFlag.Height\n\n    let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport\n    if (!viewport || scrollTo > -1 && (scrollTo < viewport.from || scrollTo > viewport.to) ||\n        !this.viewportIsCovering(viewport))\n      viewport = this.getViewport(0, scrollTo)\n    if (!viewport.eq(this.viewport)) {\n      this.viewport = viewport\n      update.flags |= UpdateFlag.Viewport\n    }\n    if (this.lineGaps.length || this.viewport.to - this.viewport.from > LG.MinViewPort)\n      update.flags |= this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)))\n    this.computeVisibleRanges()\n\n    if (scrollTo > -1) this.scrollTo = scrollTo\n  }\n\n  measure(docView: DocView, repeated: boolean) {\n    let dom = docView.dom, whiteSpace = \"\", direction: \"ltr\" | \"rtl\" = \"ltr\"\n\n    if (!repeated) {\n      // Vertical padding\n      let style = window.getComputedStyle(dom)\n      whiteSpace = style.whiteSpace!, direction = (style.direction || \"ltr\") as any\n      this.paddingTop = parseInt(style.paddingTop!) || 0\n      this.paddingBottom = parseInt(style.paddingBottom!) || 0\n    }\n\n    // Pixel viewport\n    let pixelViewport = this.printing ? {top: -1e8, bottom: 1e8, left: -1e8, right: 1e8} : visiblePixelRange(dom, this.paddingTop)\n    let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom\n    this.pixelViewport = pixelViewport\n    if (this.pixelViewport.bottom <= this.pixelViewport.top ||\n        this.pixelViewport.right <= this.pixelViewport.left) return 0\n\n    let lineHeights = docView.measureVisibleLineHeights()\n    let refresh = false, bias = 0\n\n    if (!repeated) {\n      if (this.heightOracle.mustRefresh(lineHeights, whiteSpace, direction)) {\n        let {lineHeight, charWidth} = docView.measureTextSize()\n        refresh = this.heightOracle.refresh(whiteSpace, direction, lineHeight, charWidth,\n                                            (docView.dom).clientWidth / charWidth, lineHeights)\n        if (refresh) docView.minWidth = 0\n      }\n\n      if (dTop > 0 && dBottom > 0) bias = Math.max(dTop, dBottom)\n      else if (dTop < 0 && dBottom < 0) bias = Math.min(dTop, dBottom)\n    }\n\n    this.heightOracle.heightChanged = false\n    this.heightMap = this.heightMap.updateHeight(\n      this.heightOracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights))\n\n    let result = this.heightOracle.heightChanged ? UpdateFlag.Height : 0\n    let scrollTo = this.scrollTo\n    this.scrollTo = -1\n    if (!this.viewportIsCovering(this.viewport, bias) ||\n        scrollTo > -1 && (scrollTo < this.viewport.from || scrollTo > this.viewport.to)) {\n      this.viewport = this.getViewport(bias, scrollTo)\n      result |= UpdateFlag.Viewport\n    }\n    if (this.lineGaps.length || this.viewport.to - this.viewport.from > LG.MinViewPort)\n      result |= this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps))\n    this.computeVisibleRanges()\n\n    if (scrollTo > -1) docView.scrollPosIntoView(scrollTo) // FIXME return instead?\n    return result\n  }\n\n  getViewport(bias: number, scrollTo: number): Viewport {\n    // This will divide VP.Margin between the top and the\n    // bottom, depending on the bias (the change in viewport position\n    // since the last update). It'll hold a number between 0 and 1\n    let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / VP.Margin / 2))\n    let map = this.heightMap, doc = this.state.doc, {top, bottom} = this.pixelViewport\n    let viewport = new Viewport(map.lineAt(top - marginTop * VP.Margin, QueryType.ByHeight, doc, 0, 0).from,\n                                map.lineAt(bottom + (1 - marginTop) * VP.Margin, QueryType.ByHeight, doc, 0, 0).to)\n    // If scrollTo is > -1, make sure the viewport includes that position\n    if (scrollTo > -1) {\n      if (scrollTo < viewport.from) {\n        let {top: newTop} = map.lineAt(scrollTo, QueryType.ByPos, doc, 0, 0)\n        viewport = new Viewport(map.lineAt(newTop - VP.Margin / 2, QueryType.ByHeight, doc, 0, 0).from,\n                                map.lineAt(newTop + (bottom - top) + VP.Margin / 2, QueryType.ByHeight, doc, 0, 0).to)\n      } else if (scrollTo > viewport.to) {\n        let {bottom: newBottom} = map.lineAt(scrollTo, QueryType.ByPos, doc, 0, 0)\n        viewport = new Viewport(map.lineAt(newBottom - (bottom - top) - VP.Margin / 2, QueryType.ByHeight, doc, 0, 0).from,\n                                map.lineAt(newBottom + VP.Margin / 2, QueryType.ByHeight, doc, 0, 0).to)\n      }\n    }\n    return viewport\n  }\n\n  mapViewport(viewport: Viewport, changes: Mapping) {\n    let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1)\n    if ((to - from) - (viewport.to - viewport.from) > 100) return null // Grew too much, recompute\n    return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from,\n                        this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to)\n  }\n\n  viewportIsCovering({from, to}: Viewport, bias = 0) {\n    let {top} = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0)\n    let {bottom} = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0)\n    return (from == 0 || top <= this.pixelViewport.top - Math.max(VP.MinCoverMargin, Math.min(-bias, VP.MaxCoverMargin))) &&\n      (to == this.state.doc.length ||\n       bottom >= this.pixelViewport.bottom + Math.max(VP.MinCoverMargin, Math.min(bias, VP.MaxCoverMargin)))\n  }\n\n  mapLineGaps(gaps: readonly LineGap[], changes: ChangeSet) {\n    if (!gaps.length || !changes.changes.length) return gaps\n    let mapped = []\n    for (let gap of gaps) if (!changes.touchesRange(gap.from, gap.to))\n      mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size))\n    return mapped\n  }\n\n  // Computes positions in the viewport where the start or end of a\n  // line should be hidden, trying to reuse existing line gaps when\n  // appropriate to avoid unneccesary redraws.\n  // Uses crude character-counting for the positioning and sizing,\n  // since actual DOM coordinates aren't always available and\n  // predictable. Relies on generous margins (see LG.Margin) to hide\n  // the artifacts this might produce from the user.\n  ensureLineGaps(current: readonly LineGap[]) {\n    let gaps: LineGap[] = []\n    // This won't work at all in predominantly right-to-left text.\n    if (this.heightOracle.direction != \"ltr\") return gaps\n    this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, line => {\n      if (line.length < LG.Margin) return\n      let structure = lineStructure(line.from, line.to, this.state)\n      if (structure.total < LG.Margin) return\n      let viewFrom, viewTo\n      if (this.heightOracle.lineWrapping) {\n        if (line.from != this.viewport.from) viewFrom = line.from\n        else viewFrom = findPosition(structure, (this.pixelViewport.top - line.top) / line.height)\n        if (line.to != this.viewport.to) viewTo = line.to\n        else viewTo = findPosition(structure, (this.pixelViewport.bottom - line.top) / line.height)\n      } else {\n        let totalWidth = structure.total * this.heightOracle.charWidth\n        viewFrom = findPosition(structure, this.pixelViewport.left / totalWidth)\n        viewTo = findPosition(structure, this.pixelViewport.right / totalWidth)\n      }\n      let sel = this.state.selection.primary\n      // Make sure the gap doesn't cover a selection end\n      if (sel.from <= viewFrom && sel.to >= line.from) viewFrom = sel.from\n      if (sel.from <= line.to && sel.to >= viewTo) viewTo = sel.to\n      let gapTo = viewFrom - LG.Margin, gapFrom = viewTo + LG.Margin\n      if (gapTo > line.from + LG.HalfMargin)\n        gaps.push(find(current, gap => gap.from == line.from && gap.to > gapTo - LG.HalfMargin && gap.to < gapTo + LG.HalfMargin) ||\n                  new LineGap(line.from, gapTo, this.gapSize(line, gapTo, true, structure)))\n      if (gapFrom < line.to - LG.HalfMargin)\n        gaps.push(find(current, gap => gap.to == line.to && gap.from > gapFrom - LG.HalfMargin &&\n                       gap.from < gapFrom + LG.HalfMargin) ||\n                  new LineGap(gapFrom, line.to, this.gapSize(line, gapFrom, false, structure)))\n    })\n    return gaps\n  }\n\n  gapSize(line: BlockInfo, pos: number, start: boolean,\n          structure: {total: number, ranges: {from: number, to: number}[]}) {\n    if (this.heightOracle.lineWrapping) {\n      let height = line.height * findFraction(structure, pos)\n      return start ? height : line.height - height\n    } else {\n      let ratio = findFraction(structure, pos)\n      return structure.total * this.heightOracle.charWidth * (start ? ratio : 1 - ratio)\n    }\n  }\n\n  updateLineGaps(gaps: readonly LineGap[]) {\n    if (!LineGap.same(gaps, this.lineGaps)) {\n      this.lineGaps = gaps\n      this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)))\n      return UpdateFlag.LineGaps\n    }\n    return 0\n  }\n\n  computeVisibleRanges() {\n    let deco = this.state.facet(decorations)\n    if (this.lineGaps.length) deco = deco.concat(this.lineGapDeco)\n    let ranges: {from: number, to: number}[] = []\n    RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n      span(from, to) { ranges.push({from, to}) },\n      point() {},\n      minPointSize: 20\n    })\n    this.visibleRanges = ranges\n  }\n\n  lineAt(pos: number, editorTop: number): BlockInfo {\n    return this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, editorTop + this.paddingTop, 0)\n  }\n\n  lineAtHeight(height: number, editorTop: number): BlockInfo {\n    return this.heightMap.lineAt(height, QueryType.ByHeight, this.state.doc, editorTop + this.paddingTop, 0)\n  }\n\n  blockAtHeight(height: number, editorTop: number): BlockInfo {\n    return this.heightMap.blockAt(height, this.state.doc, editorTop + this.paddingTop, 0)\n  }\n\n  forEachLine(from: number, to: number, f: (line: BlockInfo) => void, editorTop: number) {\n    return this.heightMap.forEachLine(from, to, this.state.doc, editorTop + this.paddingTop, 0, f)\n  }\n}\n\n/// Indicates the range of the document that is in the visible\n/// viewport.\nexport class Viewport {\n  constructor(readonly from: number, readonly to: number) {}\n  eq(b: Viewport) { return this.from == b.from && this.to == b.to }\n}\n\nexport function extendWithRanges(diff: readonly ChangedRange[], ranges: number[]): readonly ChangedRange[] {\n  if (ranges.length == 0) return diff\n  let result: ChangedRange[] = []\n  for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n    let next = dI == diff.length ? null : diff[dI], off = posA - posB\n    let end = next ? next.fromB : 1e9\n    while (rI < ranges.length && ranges[rI] < end) {\n      let from = ranges[rI], to = ranges[rI + 1]\n      let fromB = Math.max(posB, from), toB = Math.min(end, to)\n      if (fromB <= toB) new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result)\n      if (to > end) break\n      else rI += 2\n    }\n    if (!next) return result\n    new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result)\n    posA = next.toA; posB = next.toB\n  }\n}\n\nfunction lineStructure(from: number, to: number, state: EditorState) {\n  let ranges = [], pos = 0, total = 0\n  RangeSet.spans(state.facet(decorations), from, to, {\n    span() {},\n    point(from, to) {\n      if (from > pos) { ranges.push({from: pos, to: from}); total += to - pos }\n      pos = to\n    },\n    minPointSize: 20 // We're only interested in collapsed ranges of a significant size\n  })\n  if (pos < to) { ranges.push({from: pos, to}); total += to - pos }\n  return {total, ranges}\n}\n\nfunction findPosition({total, ranges}: {total: number, ranges: {from: number, to: number}[]}, ratio: number): number {\n  if (ratio <= 0) return ranges[0].from\n  if (ratio >= 1) return ranges[ranges.length - 1].to\n  let dist = Math.floor(total * ratio)\n  for (let i = 0;; i++) {\n    let {from, to} = ranges[i], size = to - from\n    if (dist <= size) return from + dist\n    dist -= size\n  }\n}\n\nfunction findFraction(structure: {total: number, ranges: {from: number, to: number}[]}, pos: number) {\n  let counted = 0\n  for (let {from, to} of structure.ranges) {\n    if (pos <= to) {\n      counted += pos - from\n      break\n    }\n    counted += to - from\n  }\n  return counted / structure.total\n}\n\nfunction find<T>(array: readonly T[], f: (value: T) => boolean): T | undefined {\n  for (let val of array) if (f(val)) return val\n  return undefined\n}\n","import {ContentView, ChildCursor, Dirty, DOMPos} from \"./contentview\"\nimport {BlockView, LineView} from \"./blockview\"\nimport {InlineView, CompositionView} from \"./inlineview\"\nimport {ContentBuilder} from \"./buildview\"\nimport {Viewport, extendWithRanges} from \"./viewstate\"\nimport browser from \"./browser\"\nimport {Decoration, DecorationSet, WidgetType, BlockType, addRange} from \"./decoration\"\nimport {clientRectsFor, isEquivalentPosition, maxOffset, Rect, scrollRectIntoView, getSelection} from \"./dom\"\nimport {ViewUpdate, PluginField, pluginDecorations, decorations as decorationsFacet, UpdateFlag} from \"./extension\"\nimport {EditorView} from \"./editorview\"\nimport {RangeSet} from \"../../rangeset\"\nimport {ChangedRange} from \"../../state\"\n\nconst none = [] as any\n\nexport class DocView extends ContentView {\n  children!: BlockView[]\n  viewports: Viewport[] = none\n\n  compositionDeco = Decoration.none\n  decorations: readonly DecorationSet[] = []\n  selectionDirty: any = null\n\n  // Track a minimum width for the editor. When measuring sizes in\n  // checkLayout, this is updated to point at the width of a given\n  // element and its extent in the document. When a change happens in\n  // that range, these are reset. That way, once we've seen a\n  // line/element of a given length, we keep the editor wide enough to\n  // fit at least that element, until it is changed, at which point we\n  // forget it again.\n  minWidth = 0\n  minWidthFrom = 0\n  minWidthTo = 0\n\n  // Track whether the DOM selection was set in a lossy way, so that\n  // we don't mess it up when reading it back it\n  impreciseAnchor: DOMPos | null = null\n  impreciseHead: DOMPos | null = null\n\n  dom!: HTMLElement\n\n  get root() { return this.view.root }\n\n  get editorView() { return this.view }\n\n  get length() { return this.view.state.doc.length }\n\n  constructor(readonly view: EditorView) {\n    super()\n    this.setDOM(view.contentDOM)\n    this.children = [new LineView]\n    this.children[0].setParent(this)\n    this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], this.updateDeco(), 0)\n  }\n\n  // Update the document view to a given state. scrollIntoView can be\n  // used as a hint to compute a new viewport that includes that\n  // position, if we know the editor is going to scroll that position\n  // into view.\n  update(update: ViewUpdate) {\n    let changedRanges = update.changes.changedRanges()\n    if (this.minWidth > 0 && changedRanges.length) {\n      if (!changedRanges.every(({fromA, toA}) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n        this.minWidth = 0\n      } else {\n        this.minWidthFrom = ChangedRange.mapPos(this.minWidthFrom, 1, changedRanges)\n        this.minWidthTo = ChangedRange.mapPos(this.minWidthTo, 1, changedRanges)\n      }\n    }\n\n    // When the DOM nodes around the selection are moved to another\n    // parent, Chrome sometimes reports a different selection through\n    // getSelection than the one that it actually shows to the user.\n    // This forces a selection update when lines are joined to work\n    // around that. Issue #54\n    let forceSelection = browser.chrome && !this.compositionDeco.size && update &&\n      update.changes.changes.some(ch => ch.text.length > 1)\n\n    if (!this.view.inputState?.composing) this.compositionDeco = Decoration.none\n    else if (update.transactions.length) this.compositionDeco = computeCompositionDeco(this.view, changedRanges)\n\n    let prevDeco = this.decorations, deco = this.updateDeco()\n    let decoDiff = findChangedDeco(prevDeco, deco, changedRanges, update.state.doc.length)\n    changedRanges = extendWithRanges(changedRanges, decoDiff)\n\n    if (this.dirty == Dirty.Not && changedRanges.length == 0 &&\n        !(update.flags & (UpdateFlag.Viewport | UpdateFlag.LineGaps)) &&\n        update.state.selection.primary.from >= this.view.viewport.from &&\n        update.state.selection.primary.to <= this.view.viewport.to) {\n      this.updateSelection(forceSelection)\n      return false\n    } else {\n      this.updateInner(changedRanges, deco, update.prevState.doc.length, forceSelection)\n      return true\n    }\n  }\n\n  // Used both by update and checkLayout do perform the actual DOM\n  // update\n  private updateInner(changes: readonly ChangedRange[], deco: readonly DecorationSet[],\n                      oldLength: number, forceSelection = false) {\n    this.updateChildren(changes, deco, oldLength)\n\n    this.view.observer.ignore(() => {\n      // Lock the height during redrawing, since Chrome sometimes\n      // messes with the scroll position during DOM mutation (though\n      // no relayout is triggered and I cannot imagine how it can\n      // recompute the scroll position without a layout)\n      this.dom.style.height = this.view.viewState.heightMap.height + \"px\"\n      this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\"\n      this.sync()\n      this.dirty = Dirty.Not\n      this.updateSelection(forceSelection)\n      this.dom.style.height = \"\"\n    })\n  }\n\n  private updateChildren(changes: readonly ChangedRange[], deco: readonly DecorationSet[], oldLength: number) {\n    let cursor = this.childCursor(oldLength)\n    for (let i = changes.length - 1;; i--) {\n      let next = i >= 0 ? changes[i] : null\n      if (!next) break\n      let {fromA, toA, fromB, toB} = next\n      let {content, breakAtStart} = ContentBuilder.build(this.view.state.doc, fromB, toB, deco)\n      let {i: toI, off: toOff} = cursor.findPos(toA, 1)\n      let {i: fromI, off: fromOff} = cursor.findPos(fromA, -1)\n      this.replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart)\n    }\n  }\n\n  private replaceRange(fromI: number, fromOff: number, toI: number, toOff: number,\n                       content: BlockView[], breakAtStart: number) {\n    let before = this.children[fromI], last = content.length ? content[content.length - 1] : null\n    let breakAtEnd = last ? last.breakAfter : breakAtStart\n    // Change within a single line\n    if (fromI == toI && !breakAtStart && !breakAtEnd && content.length < 2 &&\n        before.merge(fromOff, toOff, content.length ? last : null, fromOff == 0))\n      return\n\n    let after = this.children[toI]\n    // Make sure the end of the line after the update is preserved in `after`\n    if (toOff < after.length || after.children.length && after.children[after.children.length - 1].length == 0) {\n      // If we're splitting a line, separate part of the start line to\n      // avoid that being mangled when updating the start line.\n      if (fromI == toI) {\n        after = after.split(toOff)\n        toOff = 0\n      }\n      // If the element after the replacement should be merged with\n      // the last replacing element, update `content`\n      if (!breakAtEnd && last && after.merge(0, toOff, last, true)) {\n        content[content.length - 1] = after\n      } else {\n        // Remove the start of the after element, if necessary, and\n        // add it to `content`.\n        if (toOff || after.children.length && after.children[0].length == 0) after.merge(0, toOff, null, false)\n        content.push(after)\n      }\n    } else if (after.breakAfter) {\n      // The element at `toI` is entirely covered by this range.\n      // Preserve its line break, if any.\n      if (last) last.breakAfter = 1\n      else breakAtStart = 1\n    }\n    // Since we've handled the next element from the current elements\n    // now, make sure `toI` points after that.\n    toI++\n\n    before.breakAfter = breakAtStart\n    if (fromOff > 0) {\n      if (!breakAtStart && content.length && before.merge(fromOff, before.length, content[0], false)) {\n        before.breakAfter = content.shift()!.breakAfter\n      } else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n        before.merge(fromOff, before.length, null, false)\n      }\n      fromI++\n    }\n\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && content.length) {\n      if (this.children[toI - 1].match(content[content.length - 1]))\n        toI--, content.pop()\n      else if (this.children[fromI].match(content[0]))\n        fromI++, content.shift()\n      else\n        break\n    }\n    if (fromI < toI || content.length) this.replaceChildren(fromI, toI, content)\n  }\n\n  // Sync the DOM selection to this.state.selection\n  updateSelection(force = false) {\n    this.clearSelectionDirty()\n    if (this.root.activeElement != this.dom) return\n\n    let primary = this.view.state.selection.primary\n    // FIXME need to handle the case where the selection falls inside a block range\n    let anchor = this.domAtPos(primary.anchor)\n    let head = this.domAtPos(primary.head)\n\n    let domSel = getSelection(this.root)\n    // If the selection is already here, or in an equivalent position, don't touch it\n    if (force ||\n        !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n        !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n      this.view.observer.ignore(() => {\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        if (domSel.extend) {\n          domSel.collapse(anchor.node, anchor.offset)\n          if (!primary.empty) domSel.extend(head.node, head.offset)\n        } else {\n          let range = document.createRange()\n          if (primary.anchor > primary.head) [anchor, head] = [head, anchor]\n          range.setEnd(head.node, head.offset)\n          range.setStart(anchor.node, anchor.offset)\n          domSel.removeAllRanges()\n          domSel.addRange(range)\n        }\n      })\n    }\n\n    this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode!, domSel.anchorOffset)\n    this.impreciseHead = head.precise ? null: new DOMPos(domSel.focusNode!, domSel.focusOffset)\n  }\n\n  nearest(dom: Node): ContentView | null {\n    for (let cur: Node | null = dom; cur;) {\n      let domView = ContentView.get(cur)\n      if (domView && domView.rootView == this) return domView\n      cur = cur.parentNode\n    }\n    return null\n  }\n\n  posFromDOM(node: Node, offset: number): number {\n    let view = this.nearest(node)\n    if (!view) throw new RangeError(\"Trying to find position for a DOM position outside of the document\")\n    return view.localPosFromDOM(node, offset) + view.posAtStart\n  }\n\n  domAtPos(pos: number): DOMPos {\n    let {i, off} = this.childCursor().findPos(pos, -1)\n    for (; i < this.children.length - 1;) {\n      let child = this.children[i]\n      if (off < child.length || child instanceof LineView) break\n      i++; off = 0\n    }\n    return this.children[i].domAtPos(off)\n  }\n\n  coordsAt(pos: number): Rect | null {\n    for (let off = this.length, i = this.children.length - 1;; i--) {\n      let child = this.children[i], start = off - child.breakAfter - child.length\n      if (pos >= start && child.type != BlockType.WidgetAfter) return child.coordsAt(pos - start)\n      off = start\n    }\n  }\n\n  measureVisibleLineHeights() {\n    let result = [], {from, to} = this.view.viewState.viewport\n    let minWidth = Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1\n    for (let pos = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (end > to) break\n      if (pos >= from) {\n        result.push(child.dom!.getBoundingClientRect().height)\n        let width = child.dom!.scrollWidth\n        if (width > minWidth) {\n          this.minWidth = minWidth = width\n          this.minWidthFrom = pos\n          this.minWidthTo = end\n        }\n      }\n      pos = end + child.breakAfter\n    }\n    return result\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} {\n    for (let child of this.children) {\n      if (child instanceof LineView) {\n        let measure = child.measureTextSize()\n        if (measure) return measure\n      }\n    }\n    // If no workable line exists, force a layout of a measurable element\n    let dummy = document.createElement(\"div\"), lineHeight!: number, charWidth!: number\n    dummy.className = \"cm-line\"\n    dummy.textContent = \"abc def ghi jkl mno pqr stu\"\n    this.view.observer.ignore(() => {\n      this.dom.appendChild(dummy)\n      let rect = clientRectsFor(dummy.firstChild!)[0]\n      lineHeight = dummy.getBoundingClientRect().height\n      charWidth = rect ? rect.width / 27 : 7\n      dummy.remove()\n    })\n    return {lineHeight, charWidth}\n  }\n\n  clearSelectionDirty() {\n    if (this.selectionDirty != null) {\n      cancelAnimationFrame(this.selectionDirty)\n      this.selectionDirty = null\n    }\n  }\n\n  setSelectionDirty() {\n    this.view.observer.clearSelection()\n    if (this.selectionDirty == null)\n      this.selectionDirty = requestAnimationFrame(() => this.updateSelection())\n  }\n\n  childCursor(pos: number = this.length): ChildCursor {\n    // Move back to start of last element when possible, so that\n    // `ChildCursor.findPos` doesn't have to deal with the edge case\n    // of being after the last element.\n    let i = this.children.length\n    if (i) pos -= this.children[--i].length\n    return new ChildCursor(this.children, pos, i)\n  }\n\n  computeBlockGapDeco(): DecorationSet {\n    let visible = this.view.viewState.viewport, viewports: Viewport[] = [visible]\n    let {head, anchor} = this.view.state.selection.primary\n    if (head < visible.from || head > visible.to) {\n      let {from, to} = this.view.viewState.lineAt(head, 0)\n      viewports.push(new Viewport(from, to))\n    }\n    if (!viewports.some(({from, to}) => anchor >= from && anchor <= to)) {\n      let {from, to} = this.view.viewState.lineAt(anchor, 0)\n      viewports.push(new Viewport(from, to))\n    }\n    this.viewports = viewports.sort((a, b) => a.from - b.from)\n\n    let deco = []\n    for (let pos = 0, i = 0;; i++) {\n      let next = i == viewports.length ? null : viewports[i]\n      let end = next ? next.from - 1 : this.length\n      if (end > pos) {\n        let height = this.view.viewState.lineAt(end, 0).bottom - this.view.viewState.lineAt(pos, 0).top\n        deco.push(Decoration.replace({widget: new BlockGapWidget(height), block: true, inclusive: true}).range(pos, end))\n      }\n      if (!next) break\n      pos = next.to + 1\n    }\n    return Decoration.set(deco)\n  }\n\n  updateDeco() {\n    return this.decorations = [\n      ...this.view.state.facet(decorationsFacet),\n      this.computeBlockGapDeco(),\n      this.view.viewState.lineGapDeco,\n      this.compositionDeco,\n      ...this.view.pluginField(pluginDecorations)\n    ]\n  }\n\n  scrollPosIntoView(pos: number) {\n    let rect = this.coordsAt(pos)\n    if (!rect) return\n    let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0\n    for (let margins of this.view.pluginField(PluginField.scrollMargins)) if (margins) {\n      let {left, right, top, bottom} = margins\n      if (left != null) mLeft = Math.max(mLeft, left)\n      if (right != null) mRight = Math.max(mRight, right)\n      if (top != null) mTop = Math.max(mTop, top)\n      if (bottom != null) mBottom = Math.max(mBottom, bottom)\n    }\n    scrollRectIntoView(this.dom, {\n      left: rect.left - mLeft, top: rect.top - mTop,\n      right: rect.right + mRight, bottom: rect.bottom + mBottom\n    })\n  }\n}\n\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MaxNodeHeight = 1e7\n\nclass BlockGapWidget extends WidgetType<number> {\n  toDOM() {\n    let elt = document.createElement(\"div\")\n    this.updateDOM(elt)\n    return elt\n  }\n\n  updateDOM(elt: HTMLElement) {\n    if (this.value < MaxNodeHeight) {\n      while (elt.lastChild) elt.lastChild.remove()\n      elt.style.height = this.value + \"px\"\n    } else {\n      elt.style.height = \"\"\n      for (let remaining = this.value; remaining > 0; remaining -= MaxNodeHeight) {\n        let fill = elt.appendChild(document.createElement(\"div\"))\n        fill.style.height = Math.min(remaining, MaxNodeHeight) + \"px\"\n      }\n    }\n    return true\n  }\n\n  get estimatedHeight() { return this.value }\n}\n\nexport function computeCompositionDeco(view: EditorView, changes: readonly ChangedRange[]): DecorationSet {\n  let sel = getSelection(view.root)\n  let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset)\n  if (!textNode) return Decoration.none\n  let cView = view.docView.nearest(textNode)\n  let from: number, to: number, topNode = textNode\n  if (cView instanceof InlineView) {\n    from = cView.posAtStart\n    to = from + cView.length\n    topNode = cView.dom!\n  } else if (cView instanceof LineView) {\n    while (topNode.parentNode != cView.dom) topNode = topNode.parentNode!\n    let prev = topNode.previousSibling\n    while (prev && !ContentView.get(prev)) prev = prev.previousSibling\n    from = to = prev ? ContentView.get(prev)!.posAtEnd : cView.posAtStart\n  } else {\n    return Decoration.none\n  }\n\n  let newFrom = ChangedRange.mapPos(from, 1, changes), newTo = Math.max(newFrom, ChangedRange.mapPos(to, -1, changes))\n  let text = textNode.nodeValue!, doc = view.state.doc\n  if (newTo - newFrom < text.length) {\n    if (doc.slice(newFrom, Math.min(doc.length, newFrom + text.length)) == text) newTo = newFrom + text.length\n    else if (doc.slice(Math.max(0, newTo - text.length), newTo) == text) newFrom = newTo - text.length\n    else return Decoration.none\n  } else if (doc.slice(newFrom, newTo) != text) {\n    return Decoration.none\n  }\n\n  return Decoration.set(Decoration.replace({widget: new CompositionWidget({top: topNode, text: textNode})}).range(newFrom, newTo))\n}\n\nclass CompositionWidget extends WidgetType<{top: Node, text: Node}> {\n  eq(value: {top: Node, text: Node}) { return this.value.top == value.top && this.value.text == value.text }\n\n  toDOM() { return this.value.top as HTMLElement }\n\n  ignoreEvent() { return false }\n\n  get customView() { return CompositionView }\n}\n\nfunction nearbyTextNode(node: Node, offset: number): Node | null {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      node = node.childNodes[offset - 1]\n      offset = maxOffset(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\nclass DecorationComparator {\n  changes: number[] = []\n  compareRange(from: number, to: number) { addRange(from, to, this.changes) }\n  comparePoint(from: number, to: number) { addRange(from, to, this.changes) }\n}\n\nexport function findChangedDeco(a: readonly DecorationSet[], b: readonly DecorationSet[],\n                                diff: readonly ChangedRange[], length: number) {\n  let comp = new DecorationComparator\n  RangeSet.compare(a, b, diff, length, comp)\n  return comp.changes\n}\n","import {EditorView} from \"./editorview\"\nimport {LineView} from \"./blockview\"\nimport {BlockType} from \"./decoration\"\nimport {Dirty} from \"./contentview\"\nimport {InlineView, TextView, WidgetView} from \"./inlineview\"\nimport {Text as Doc, findColumn, countColumn, isExtendingChar} from \"../../text\"\nimport {SelectionRange} from \"../../state\"\nimport {isEquivalentPosition, clientRectsFor, getSelection} from \"./dom\"\nimport browser from \"./browser\"\n\ndeclare global {\n  interface Selection { modify(action: string, direction: string, granularity: string): void }\n  interface Document { caretPositionFromPoint(x: number, y: number): {offsetNode: Node, offset: number} }\n}\n\n// FIXME rename \"word\" to something more descriptive of what it actually does?\nexport function movePos(view: EditorView, start: number,\n                        direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n                        granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n                        action: \"move\" | \"extend\"): number {\n  let sel = getSelection(view.root)\n  let context = LineContext.get(view, start)\n  let dir: 1 | -1 = direction == \"forward\" || direction == \"right\" ? 1 : -1\n  // Can only query native behavior when Selection.modify is\n  // supported, the cursor is well inside the rendered viewport, and\n  // we're not doing by-line motion on Gecko (which will mess up goal\n  // column motion)\n  if (sel.modify && context && !context.nearViewportEnd(view) && view.hasFocus &&\n      granularity != \"word\" &&\n      !(granularity == \"line\" && (browser.gecko || view.state.selection.ranges.length > 1))) {\n    return view.observer.ignore(() => {\n      let prepared = context!.prepareForQuery(view, start)\n      let startDOM = view.docView.domAtPos(start)\n      let equiv = (!browser.chrome || prepared.lines.length == 0) &&\n        isEquivalentPosition(startDOM.node, startDOM.offset, sel.focusNode, sel.focusOffset) && false\n      // Firefox skips an extra character ahead when extending across\n      // an uneditable element (but not when moving)\n      if (prepared.atWidget && browser.gecko && action == \"extend\") action = \"move\"\n      if (action == \"move\" && !(equiv && sel.isCollapsed)) sel.collapse(startDOM.node, startDOM.offset)\n      else if (action == \"extend\" && !equiv) sel.extend(startDOM.node, startDOM.offset)\n      sel.modify(action, direction, granularity)\n      view.docView.setSelectionDirty()\n      let result = view.docView.posFromDOM(sel.focusNode!, sel.focusOffset)\n      context!.undoQueryPreparation(view, prepared)\n      return result\n    })\n  } else if (granularity == \"character\") {\n    return moveCharacterSimple(start, dir, context, view.state.doc)\n  } else if (granularity == \"lineboundary\") {\n    if (context) return context.start + (dir < 0 ? 0 : context.line.length)\n    let line = view.state.doc.lineAt(start)\n    return dir < 0 ? line.start : line.end\n  } else if (granularity == \"line\") {\n    if (context && !context.nearViewportEnd(view, dir)) {\n      let startCoords = view.coordsAtPos(start)!\n      let goal = getGoalColumn(view, start, startCoords.left)\n      for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, dist = 5; dist < 50; dist += 10) {\n        let pos = posAtCoords(view, {x: goal.column, y: startY + dist * dir}, dir)\n        if (pos < 0) break\n        if (pos != start) {\n          goal.pos = pos\n          return pos\n        }\n      }\n    }\n    // Can't do a precise one based on DOM positions, fall back to per-column\n    return moveLineByColumn(view.state.doc, view.state.tabSize, start, dir)\n  } else if (granularity == \"word\") {\n    return moveWord(view, start, direction)\n  } else {\n    throw new RangeError(\"Invalid move granularity: \" + granularity)\n  }\n}\n\nfunction moveLineByColumn(doc: Doc, tabSize: number, pos: number, dir: -1 | 1): number {\n  let line = doc.lineAt(pos)\n  // FIXME also needs goal column?\n  let col = 0\n  for (const iter = doc.iterRange(line.start, pos); !iter.next().done;)\n    col = countColumn(iter.value, col, tabSize)\n  if (dir < 0 && line.start == 0) return 0\n  else if (dir > 0 && line.end == doc.length) return line.end\n  let otherLine = doc.line(line.number + dir)\n  let result = otherLine.start\n  let seen = 0\n  for (const iter = doc.iterRange(otherLine.start, otherLine.end); seen >= col && !iter.next().done;) {\n    const {offset, leftOver} = findColumn(iter.value, seen, col, tabSize)\n    seen = col - leftOver\n    result += offset\n  }\n  return result\n}\n\nfunction moveCharacterSimple(start: number, dir: 1 | -1, context: LineContext | null, doc: Doc): number {\n  if (context == null) {\n    for (let pos = start;; pos += dir) {\n      if (dir < 0 && pos == 0 || dir > 0 && pos == doc.length) return pos\n      if (!isExtendingChar((dir < 0 ? doc.slice(pos - 1, pos) : doc.slice(pos, pos + 1)).charCodeAt(0))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n    }\n  }\n  for (let {i, off} = context.line.childPos(start - context.start), {children} = context.line, pos = start;;) {\n    if (off == (dir < 0 || i == children.length ? 0 : children[i].length)) {\n      i += dir\n      if (i < 0 || i >= children.length) // End/start of line\n        return Math.max(0, Math.min(doc.length, pos + (start == pos ? dir : 0)))\n      off = dir < 0 ? children[i].length : 0\n    }\n    let inline = children[i]\n    if (inline instanceof TextView) {\n      if (!isExtendingChar(inline.text.charCodeAt(off - (dir < 0 ? 1 : 0)))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n      off += dir; pos += dir\n    } else if (inline.length > 0) {\n      return pos - off + (dir < 0 ? 0 : inline.length)\n    }\n  }\n}\n\nfunction moveWord(view: EditorView, start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\") {\n  let {doc} = view.state\n  for (let pos = start, i = 0;; i++) {\n    let next = movePos(view, pos, direction, \"character\", \"move\")\n    if (next == pos) return pos // End of document\n    if (doc.sliceLines(Math.min(next, pos), Math.max(next, pos)).length > 1) return next // Crossed a line boundary\n    let group = SelectionRange.groupAt(view.state, next, next > pos ? -1 : 1)\n    let away = pos < group.from && pos > group.to\n    // If the group is away from its start position, we jumped over a\n    // bidi boundary, and should take the side closest (in index\n    // coordinates) to the start position\n    let start = away ? pos < group.head : group.from == pos ? false : group.to == pos ? true : next < pos\n    pos = start ? group.from : group.to\n    if (i > 0 || /\\S/.test(doc.slice(group.from, group.to))) return pos\n    next = Math.max(0, Math.min(doc.length, pos + (start ? -1 : 1)))\n  }\n}\n\nfunction getGoalColumn(view: EditorView, pos: number, column: number): {pos: number, column: number} {\n  for (let goal of view.inputState.goalColumns)\n    if (goal.pos == pos) return goal\n  let goal = {pos: 0, column}\n  view.inputState.goalColumns.push(goal)\n  return goal\n}\n\nexport class LineContext {\n  constructor(public line: LineView, public start: number, public index: number) {}\n\n  static get(view: EditorView, pos: number): LineContext | null {\n    for (let i = 0, off = 0;; i++) {\n      let line = view.docView.children[i], end = off + line.length\n      if (end >= pos) {\n        if (line instanceof LineView) return new LineContext(line, off, i)\n        if (line.length) return null\n      }\n      off = end + 1\n    }\n  }\n\n  nearViewportEnd(view: EditorView, side: number = 0): boolean {\n    for (let {from, to} of view.docView.viewports)\n      if (from > 0 && from == this.start && side <= 0 ||\n          to < view.state.doc.length && to == this.start + this.line.length && side >= 0)\n        return true\n    return false\n  }\n\n  // FIXME limit the amount of work in character motion in non-bidi\n  // context? or not worth it?\n  prepareForQuery(view: EditorView, pos: number) {\n    let linesToSync: LineView[] = [], atWidget = false\n    function maybeHide(view: InlineView) {\n      if (!(view instanceof TextView)) atWidget = true\n      if (view.length > 0) return false\n      ;(view.dom as any).remove()\n      if (linesToSync.indexOf(view.parent as LineView) < 0) linesToSync.push(view.parent as LineView)\n      return true\n    }\n    let {i, off} = this.line.childPos(pos - this.start)\n    if (off == 0) {\n      for (let j = i; j < this.line.children.length; j++) if (!maybeHide(this.line.children[j])) break\n      for (let j = i; j > 0; j--) if (!maybeHide(this.line.children[j - 1])) break\n    }\n    function addForLine(line: LineView, omit: number = -1) {\n      if (line.children.length == 0) return\n      for (let i = 0, off = 0; i <= line.children.length; i++) {\n        let next = i == line.children.length ? null : line.children[i]\n        if ((!next || !(next instanceof TextView)) && off != omit &&\n            (i == 0 || !(line.children[i - 1] instanceof TextView))) {\n          line.dom!.insertBefore(document.createTextNode(\"\\u200b\"), next ? next.dom : null)\n          if (linesToSync.indexOf(line) < 0) linesToSync.push(line)\n        }\n        if (next) off += next.length\n      }\n    }\n    if (this.index > 0)\n      addForLine(this.line.parent!.children[this.index - 1] as LineView)\n    addForLine(this.line, pos - this.start)\n    if (this.index < this.line.parent!.children.length - 1)\n      addForLine(this.line.parent!.children[this.index + 1] as LineView)\n    return {lines: linesToSync, atWidget}\n  }\n\n  undoQueryPreparation(view: EditorView, toSync: {lines: LineView[]}) {\n    for (let line of toSync.lines) { line.dirty = Dirty.Node; line.sync(); line.dirty = Dirty.Not }\n  }\n}\n\n\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\n\nfunction getdx(x: number, rect: ClientRect): number {\n  return rect.left > x ? rect.left - x : Math.max(0, x - rect.right)\n}\nfunction getdy(y: number, rect: ClientRect): number {\n  return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom)\n}\nfunction yOverlap(a: ClientRect, b: ClientRect): boolean {\n  return a.top < b.bottom - 1 && a.bottom > b.top + 1\n}\nfunction upTop(rect: ClientRect, top: number): ClientRect {\n  return top < rect.top ? {top, left: rect.left, right: rect.right, bottom: rect.bottom} as ClientRect : rect\n}\nfunction upBot(rect: ClientRect, bottom: number): ClientRect {\n  return bottom > rect.bottom ? {top: rect.top, left: rect.left, right: rect.right, bottom} as ClientRect : rect\n}\n\nfunction domPosAtCoords(parent: HTMLElement, x: number, y: number): {node: Node, offset: number} {\n  let closest, closestRect!: ClientRect, closestX!: number, closestY!: number\n  let above, below, aboveRect, belowRect\n  for (let child: Node | null = parent.firstChild; child; child = child.nextSibling) {\n    let rects = clientRectsFor(child)\n    for (let i = 0; i < rects.length; i++) {\n      let rect: ClientRect = rects[i]\n      if (closestRect && yOverlap(closestRect, rect))\n        rect = upTop(upBot(rect, closestRect.bottom), closestRect.top)\n      let dx = getdx(x, rect), dy = getdy(y, rect)\n      if (dx == 0 && dy == 0)\n        return child.nodeType == 3 ? domPosInText(child as Text, x, y) : domPosAtCoords(child as HTMLElement, x, y)\n      if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n        closest = child; closestRect = rect; closestX = dx; closestY = dy\n      }\n      if (dx == 0) {\n        if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) { above = child; aboveRect = rect }\n        else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) { below = child; belowRect = rect }\n      } else if (aboveRect && yOverlap(aboveRect, rect)) {\n        aboveRect = upBot(aboveRect, rect.bottom)\n      } else if (belowRect && yOverlap(belowRect, rect)) {\n        belowRect = upTop(belowRect, rect.top)\n      }\n    }\n  }\n  if (aboveRect && aboveRect.bottom >= y) { closest = above; closestRect = aboveRect }\n  else if (belowRect && belowRect.top <= y) { closest = below; closestRect = belowRect }\n\n  if (!closest) return {node: parent, offset: 0}\n  let clipX = Math.max(closestRect!.left, Math.min(closestRect!.right, x))\n  if (closest.nodeType == 3) return domPosInText(closest as Text, clipX, y)\n  if (!closestX && (closest as HTMLElement).contentEditable == \"true\")\n    domPosAtCoords(closest as HTMLElement, clipX, y)\n  let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n    (x >= (closestRect!.left + closestRect!.right) / 2 ? 1 : 0)\n  return {node: parent, offset}\n}\n\nfunction domPosInText(node: Text, x: number, y: number): {node: Node, offset: number} {\n  let len = node.nodeValue!.length, range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rects = range.getClientRects()\n    for (let j = 0; j < rects.length; j++) {\n      let rect = rects[j]\n      if (rect.top == rect.bottom) continue\n      if (rect.left - 1 <= x && rect.right + 1 >= x &&\n          rect.top - 1 <= y && rect.bottom + 1 >= y) {\n        let right = x >= (rect.left + rect.right) / 2, after = right\n        if (browser.chrome || browser.gecko) {\n          // Check for RTL on browsers that support getting client\n          // rects for empty ranges.\n          range.setEnd(node, i)\n          let rectBefore = range.getBoundingClientRect()\n          if (rectBefore.left == rect.right) after = !right\n        }\n        return {node, offset: i + (after ? 1 : 0)}\n      }\n    }\n  }\n  return {node, offset: 0}\n}\n\nexport function posAtCoords(view: EditorView, {x, y}: {x: number, y: number}, bias: -1 | 1 = -1): number {\n  let content = view.contentDOM.getBoundingClientRect(), block\n  let halfLine = view.defaultLineHeight / 2\n  for (let bounced = false;;) {\n    block = view.blockAtHeight(y, content.top)\n    if (block.top > y || block.bottom < y) {\n      bias = block.top > y ? -1 : 1\n      y = Math.min(block.bottom - halfLine, Math.max(block.top + halfLine, y))\n      if (bounced) return -1\n      else bounced = true\n    }\n    if (block.type == BlockType.Text) break\n    y = bias > 0 ? block.bottom + halfLine : block.top - halfLine\n  }\n  let lineStart = block.from\n  // If this is outside of the rendered viewport, we can't determine a position\n  if (lineStart < view.viewport.from)\n    return view.viewport.from == 0 ? 0 : -1\n  if (lineStart > view.viewport.to)\n    return view.viewport.to == view.state.doc.length ? view.state.doc.length : -1\n  // Clip x to the viewport sides\n  x = Math.max(content.left + 1, Math.min(content.right - 1, x))\n  let root = view.root, element = root.elementFromPoint(x, y)\n\n  // There's visible editor content under the point, so we can try\n  // using caret(Position|Range)FromPoint as a shortcut\n  let node: Node | undefined, offset: number = -1\n  if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n    if (root.caretPositionFromPoint) {\n      let pos = root.caretPositionFromPoint(x, y)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } else if (root.caretRangeFromPoint) {\n      let range = root.caretRangeFromPoint(x, y)\n      if (range) ({startContainer: node, startOffset: offset} = range)\n    }\n  }\n\n  // No luck, do our own (potentially expensive) search\n  if (!node) {\n    let {line} = LineContext.get(view, lineStart)!\n    ;({node, offset} = domPosAtCoords(line.dom!, x, y))\n  }\n  return view.docView.posFromDOM(node, offset)\n}\n","import {EditorSelection, EditorState, SelectionRange, Transaction, ChangeSet, Change} from \"../../state\"\nimport {EditorView} from \"./editorview\"\nimport {ContentView} from \"./contentview\"\nimport {domEventHandlers, ViewUpdate, clickAddsSelectionRange, dragMovesSelection as dragBehavior} from \"./extension\"\nimport browser from \"./browser\"\nimport {LineContext} from \"./cursor\"\nimport {getSelection} from \"./dom\"\n\n// This will also be where dragging info and such goes\nexport class InputState {\n  lastKeyCode: number = 0\n  lastKeyTime: number = 0\n  lastSelectionOrigin: string | null = null\n  lastSelectionTime: number = 0\n\n  registeredEvents: string[] = []\n  customHandlers: readonly {[key: string]: (view: EditorView, event: any) => boolean}[] = []\n\n  composing = false\n\n  goalColumns: {pos: number, column: number}[] = []\n\n  mouseSelection: MouseSelection | null = null\n\n  notifiedFocused: boolean\n\n  setSelectionOrigin(origin: string) {\n    this.lastSelectionOrigin = origin\n    this.lastSelectionTime = Date.now()\n  }\n\n  constructor(view: EditorView) {\n    for (let type in handlers) {\n      let handler = handlers[type]\n      view.contentDOM.addEventListener(type, (event: Event) => {\n        if (!eventBelongsToEditor(view, event)) return\n        if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        else handler(view, event)\n      })\n      this.registeredEvents.push(type)\n    }\n    // Must always run, even if a custom handler handled the event\n    view.contentDOM.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n      view.inputState.lastKeyCode = event.keyCode\n      view.inputState.lastKeyTime = Date.now()\n    })\n    if (view.root.activeElement == view.contentDOM) view.dom.classList.add(\"cm-focused\")\n    this.notifiedFocused = view.hasFocus\n    this.ensureHandlers(view)\n  }\n\n  ensureHandlers(view: EditorView) {\n    let handlers = view.state.facet(domEventHandlers)\n    if (handlers == this.customHandlers) return\n    this.customHandlers = handlers\n    for (let set of handlers) {\n      for (let type in set) if (this.registeredEvents.indexOf(type) < 0) {\n        this.registeredEvents.push(type)\n        ;(type != \"scroll\" ? view.contentDOM : view.scrollDOM).addEventListener(type, (event: Event) => {\n          if (!eventBelongsToEditor(view, event)) return\n          if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        })\n      }\n    }\n  }\n\n  runCustomHandlers(type: string, view: EditorView, event: Event): boolean {\n    for (let handlers of this.customHandlers) {\n      let handler = handlers[type]\n      if (handler) {\n        try {\n          if (handler(view, event) || event.defaultPrevented) return true\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    }\n    return false\n  }\n\n  startMouseSelection(view: EditorView, event: MouseEvent, update: MouseSelectionUpdate) {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n    this.mouseSelection = new MouseSelection(this, view, event, update)\n  }\n\n  update(update: ViewUpdate) {\n    if (this.mouseSelection) this.mouseSelection.map(update.changes)\n    this.lastKeyCode = this.lastSelectionTime = 0\n  }\n\n  destroy() {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n  }\n}\n\nexport type MouseSelectionUpdate = (view: EditorView, startSelection: EditorSelection,\n                                    startPos: number, startBias: -1 | 1,\n                                    curPos: number, curBias: -1 | 1,\n                                    extend: boolean, multiple: boolean) => EditorSelection\n\nclass MouseSelection {\n  dragging: null | false | SelectionRange\n  startSelection: EditorSelection\n  startPos: number\n  startBias: -1 | 1\n  curPos: number\n  curBias: -1 | 1\n  extend: boolean\n  multiple: boolean\n  dragMove: boolean\n\n  constructor(private inputState: InputState, private view: EditorView, event: MouseEvent,\n              private update: MouseSelectionUpdate) {\n    let doc = view.contentDOM.ownerDocument!\n    doc.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    doc.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n\n    this.extend = event.shiftKey\n    this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, event)\n    this.dragMove = dragMovesSelection(view, event)\n\n    this.startSelection = view.state.selection\n    let {pos, bias} = this.queryPos(event)\n    this.startPos = this.curPos = pos\n    this.startBias = this.curBias = bias\n    this.dragging = isInPrimarySelection(view, this.startPos, event) ? null : false\n    // When clicking outside of the selection, immediately apply the\n    // effect of starting the selection\n    if (this.dragging === false) {\n      event.preventDefault()\n      this.select()\n    }\n  }\n\n  queryPos(event: MouseEvent): {pos: number, bias: 1 | -1} {\n    let pos = this.view.posAtCoords({x: event.clientX, y: event.clientY})\n    let coords = pos < 0 ? null : this.view.coordsAtPos(pos)\n    let bias: 1 | -1 = !coords ? 1 :\n      coords.top > event.clientY ? -1 :\n      coords.bottom < event.clientY ? 1 :\n      coords.left > event.clientX ? -1 : 1\n    return {pos, bias}\n  }\n\n  move(event: MouseEvent) {\n    if (event.buttons == 0) return this.destroy()\n    if (this.dragging !== false) return\n    let {pos, bias} = this.queryPos(event)\n    if (pos == this.curPos && bias == this.curBias) return\n    this.curPos = pos; this.curBias = bias\n    this.select()\n  }\n\n  up(event: MouseEvent) {\n    if (this.dragging == null) this.select()\n    this.destroy()\n  }\n\n  destroy() {\n    let doc = this.view.contentDOM.ownerDocument!\n    doc.removeEventListener(\"mousemove\", this.move)\n    doc.removeEventListener(\"mouseup\", this.up)\n    this.inputState.mouseSelection = null\n  }\n\n  select() {\n    let selection = this.update(this.view, this.startSelection, this.startPos, this.startBias,\n                                this.curPos, this.curBias, this.extend, this.multiple)\n    if (!selection.eq(this.view.state.selection))\n      this.view.dispatch(this.view.state.t().setSelection(selection)\n                         .annotate(Transaction.userEvent, \"pointer\")\n                         .scrollIntoView())\n  }\n\n  map(changes: ChangeSet) {\n    if (changes.length) {\n      this.startSelection = this.startSelection.map(changes)\n      this.startPos = changes.mapPos(this.startPos)\n      this.curPos = changes.mapPos(this.curPos)\n    }\n    if (this.dragging) this.dragging = this.dragging.map(changes)\n  }\n}\n\nfunction addsSelectionRange(view: EditorView, event: MouseEvent) {\n  let facet = view.state.facet(clickAddsSelectionRange)\n  return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey\n}\n\nfunction dragMovesSelection(view: EditorView, event: MouseEvent) {\n  let facet = view.state.facet(dragBehavior)\n  return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey\n}\n\nfunction isInPrimarySelection(view: EditorView, pos: number, event: MouseEvent) {\n  let {primary} = view.state.selection\n  if (primary.empty) return false\n  if (pos < primary.from || pos > primary.to) return false\n  if (pos > primary.from && pos < primary.to) return true\n  // On boundary clicks, check whether the coordinates are inside the\n  // selection's client rectangles\n  let sel = getSelection(view.root)\n  if (sel.rangeCount == 0) return true\n  let rects = sel.getRangeAt(0).getClientRects()\n  for (let i = 0; i < rects.length; i++) {\n    let rect = rects[i]\n    if (rect.left <= event.clientX && rect.right >= event.clientX &&\n        rect.top <= event.clientY && rect.bottom >= event.clientY) return true\n  }\n  return false\n}\n\nfunction eventBelongsToEditor(view: EditorView, event: Event): boolean {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node: Node | null = event.target as Node, cView; node != view.contentDOM; node = node.parentNode)\n    if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n      return false\n  return true\n}\n\nconst handlers: {[key: string]: (view: EditorView, event: any) => void} = Object.create(null)\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n  (browser.ios && browser.webkit_version < 604)\n\nfunction capturePaste(view: EditorView) {\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    doc.body.removeChild(target)\n    doPaste(view, target.value)\n  }, 50)\n}\n\nfunction doPaste(view: EditorView, text: string) {\n  view.dispatch(view.state.t().replaceSelection(text)\n                .annotate(Transaction.userEvent, \"paste\").scrollIntoView())\n}\n\nfunction mustCapture(event: KeyboardEvent): boolean {\n  const enum Mod { Ctrl = 1, Alt = 2, Shift = 4, Meta = 8 }\n  let mods = (event.ctrlKey ? Mod.Ctrl : 0) | (event.metaKey ? Mod.Meta : 0) |\n    (event.altKey ? Mod.Alt : 0) | (event.shiftKey ? Mod.Shift : 0)\n  let code = event.keyCode, macCtrl = browser.mac && mods == Mod.Ctrl\n  return code == 8 || (macCtrl && code == 72) ||  // Backspace, Ctrl-h on Mac\n    code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n    code == 27 || // Esc\n    (mods == (browser.mac ? Mod.Meta : Mod.Ctrl) && // Ctrl/Cmd-[biyz]\n     (code == 66 || code == 73 || code == 89 || code == 90))\n}\n\nhandlers.keydown = (view, event: KeyboardEvent) => {\n  if (mustCapture(event)) event.preventDefault()\n  view.inputState.setSelectionOrigin(\"keyboard\")\n}\n\nhandlers.touchdown = handlers.touchmove = (view, event: MouseEvent) => {\n  view.inputState.setSelectionOrigin(\"pointer\")\n}\n\nhandlers.mousedown = (view, event: MouseEvent) => {\n  if (event.button == 0)\n    view.startMouseSelection(event, updateMouseSelection(event.detail))\n}\n\nfunction rangeForClick(view: EditorView, pos: number, bias: -1 | 1, type: number): SelectionRange {\n  if (type == 1) { // Single click\n    return new SelectionRange(pos)\n  } else if (type == 2) { // Double click\n    return SelectionRange.groupAt(view.state, pos, bias)\n  } else { // Triple click\n    let context = LineContext.get(view, pos)\n    if (context) return new SelectionRange(context.start + context.line.length, context.start)\n    let {start, end} = view.state.doc.lineAt(pos)\n    return new SelectionRange(start, end)\n  }\n}\n\nfunction updateMouseSelection(type: number): MouseSelectionUpdate {\n  return (view, startSelection, startPos, startBias, curPos, curBias, extend, multiple) => {\n    let range = rangeForClick(view, curPos, curBias, type)\n    if (startPos != curPos && !extend) {\n      let startRange = rangeForClick(view, startPos, startBias, type)\n      let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to)\n      range = from < range.from ? new SelectionRange(from, to) : new SelectionRange(to, from)\n    }\n    if (extend)\n      return startSelection.replaceRange(startSelection.primary.extend(range.from, range.to))\n    else if (multiple)\n      return startSelection.addRange(range)\n    else\n      return EditorSelection.create([range])\n  }\n}\n\nhandlers.dragstart = (view, event: DragEvent) => {\n  let {doc, selection: {primary}} = view.state\n  let {mouseSelection} = view.inputState\n  if (mouseSelection) mouseSelection.dragging = primary\n\n  if (event.dataTransfer) {\n    event.dataTransfer.setData(\"Text\", doc.slice(primary.from, primary.to))\n    event.dataTransfer.effectAllowed = \"copyMove\"\n  }\n}\n\nhandlers.drop = (view, event: DragEvent) => {\n  if (!event.dataTransfer) return\n\n  let dropPos = view.posAtCoords({x: event.clientX, y: event.clientY})\n  let text = event.dataTransfer.getData(\"Text\")\n  if (dropPos < 0 || !text) return\n\n  event.preventDefault()\n\n  let tr = view.state.t()\n  let {mouseSelection} = view.inputState\n  if (mouseSelection && mouseSelection.dragging && mouseSelection.dragMove) {\n    tr.replace(mouseSelection.dragging.from, mouseSelection.dragging.to, \"\")\n    dropPos = tr.changes.mapPos(dropPos)\n  }\n  let change = new Change(dropPos, dropPos, view.state.splitLines(text))\n  tr.change(change)\n    .setSelection(EditorSelection.single(dropPos, dropPos + change.length))\n    .annotate(Transaction.userEvent, \"drop\")\n  view.focus()\n  view.dispatch(tr)\n}\n\nhandlers.paste = (view: EditorView, event: ClipboardEvent) => {\n  view.observer.flush()\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = data && data.getData(\"text/plain\")\n  if (text) {\n    doPaste(view, text)\n    event.preventDefault()\n  } else {\n    capturePaste(view)\n  }\n}\n\nfunction captureCopy(view: EditorView, text: string) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.value = text\n  target.focus()\n  target.selectionEnd = text.length\n  target.selectionStart = 0\n  setTimeout(() => {\n    doc.body.removeChild(target)\n    view.focus()\n  }, 50)\n}\n\nhandlers.copy = handlers.cut = (view, event: ClipboardEvent) => {\n  let range = view.state.selection.primary\n  if (range.empty) return\n\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = view.state.joinLines(view.state.doc.sliceLines(range.from, range.to))\n  if (data) {\n    event.preventDefault()\n    data.clearData()\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, text)\n  }\n  if (event.type == \"cut\") {\n    view.dispatch(view.state.t().replaceSelection([\"\"]).scrollIntoView().annotate(Transaction.userEvent, \"cut\"))\n  }\n}\n\nhandlers.focus = handlers.blur = view => {\n  setTimeout(() => {\n    if (view.hasFocus != view.inputState.notifiedFocused) view.update([])\n  }, 10)\n}\n\nhandlers.beforeprint = view => {\n  view.viewState.printing = true\n  view.requestMeasure()\n  setTimeout(() => {\n    view.viewState.printing = false\n    view.requestMeasure()\n  }, 2000)\n}\n\nfunction forceClearComposition(view: EditorView) {\n  if (view.docView.compositionDeco.size) view.update([])\n}\n\nhandlers.compositionstart = handlers.compositionupdate = view => {\n  if (!view.inputState.composing) {\n    if (view.docView.compositionDeco.size) {\n      view.observer.flush()\n      forceClearComposition(view)\n    }\n    // FIXME possibly set a timeout to clear it again on Android\n    view.inputState.composing = true\n  }\n}\n\nhandlers.compositionend = view => {\n  view.inputState.composing = false\n  setTimeout(() => {\n    if (!view.inputState.composing) forceClearComposition(view)\n  }, 50)\n}\n","import browser from \"./browser\"\nimport {ContentView, Dirty} from \"./contentview\"\nimport {EditorView} from \"./editorview\"\nimport {hasSelection, getSelection, DOMSelection} from \"./dom\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n  characterDataOldValue: true\n}\n\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nexport class DOMObserver {\n  dom: HTMLElement\n\n  observer: MutationObserver\n  active: boolean = false\n  ignoreSelection: DOMSelection = new DOMSelection\n\n  onSelectionChange: any\n  onCharData: any\n\n  charDataQueue: MutationRecord[] = []\n  charDataTimeout: any = null\n\n  scrollTargets: HTMLElement[] = []\n  intersection: IntersectionObserver | null = null\n  intersecting: boolean = false\n\n  // Timeout for scheduling check of the parents that need scroll handlers\n  parentCheck = -1\n\n  constructor(private view: EditorView,\n              private onChange: (from: number, to: number, typeOver: boolean) => boolean,\n              private onScrollChanged: () => void) {\n    this.dom = view.contentDOM\n    this.observer = new MutationObserver(mutations => this.flush(mutations))\n    if (useCharData)\n      this.onCharData = (event: MutationEvent) => {\n        this.charDataQueue.push({target: event.target,\n                                 type: \"characterData\",\n                                 oldValue: event.prevValue} as MutationRecord)\n        if (this.charDataTimeout == null) this.charDataTimeout = setTimeout(() => this.flush(), 20)\n      }\n    this.onSelectionChange = () => {\n      if (this.view.root.activeElement == this.dom) this.flush()\n    }\n    this.start()\n\n    this.onScroll = this.onScroll.bind(this)\n    window.addEventListener(\"scroll\", this.onScroll)\n    if (typeof IntersectionObserver == \"function\") {\n      this.intersection = new IntersectionObserver(entries => {\n        if (this.parentCheck < 0) this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000)\n        if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n          this.intersecting = !this.intersecting\n          this.onScroll()\n        }\n      }, {})\n      this.intersection.observe(this.dom)\n    }\n    this.listenForScroll()\n  }\n\n  onScroll() {\n    if (this.intersecting) {\n      this.flush()\n      this.onScrollChanged()\n    }\n  }\n\n  listenForScroll() {\n    this.parentCheck = -1\n    let i = 0, changed: HTMLElement[] | null = null\n    for (let dom = this.dom as any; dom;) {\n      if (dom.nodeType == 1) {\n        if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom) i++\n        else if (!changed) changed = this.scrollTargets.slice(0, i)\n        if (changed) changed.push(dom)\n        dom = dom.parentNode\n      } else if (dom.nodeType == 11) { // Shadow root\n        dom = dom.host\n      } else {\n        break\n      }\n    }\n    if (i < this.scrollTargets.length && !changed) changed = this.scrollTargets.slice(0, i)\n    if (changed) {\n      for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n      for (let dom of this.scrollTargets = changed) dom.addEventListener(\"scroll\", this.onScroll)\n    }\n  }\n\n  ignore<T>(f: () => T): T {\n    if (!this.active) return f()\n    try {\n      this.stop()\n      return f()\n    } finally {\n      this.start()\n      this.clear()\n    }\n  }\n\n  start() {\n    if (this.active) return\n    this.observer.observe(this.dom, observeOptions)\n    // FIXME is this shadow-root safe?\n    this.dom.ownerDocument!.addEventListener(\"selectionchange\", this.onSelectionChange)\n    if (useCharData)\n      this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.active = true\n  }\n\n  stop() {\n    if (!this.active) return\n    this.active = false\n    this.observer.disconnect()\n    this.dom.ownerDocument!.removeEventListener(\"selectionchange\", this.onSelectionChange)\n    if (useCharData)\n      this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n  }\n\n  takeCharRecords(): MutationRecord[] {\n    let result = this.charDataQueue\n    if (result.length) {\n      this.charDataQueue = []\n      clearTimeout(this.charDataTimeout)\n      this.charDataTimeout = null\n    }\n    return result\n  }\n\n  clearSelection() {\n    this.ignoreSelection.set(getSelection(this.view.root))\n  }\n\n  // Throw away any pending changes\n  clear() {\n    this.observer.takeRecords()\n    this.takeCharRecords()\n    this.clearSelection()\n  }\n\n  // Apply pending changes, if any\n  flush(records: MutationRecord[] = this.observer.takeRecords()) {\n    if (this.charDataQueue.length)\n      records = records.concat(this.takeCharRecords())\n    let selection = getSelection(this.view.root)\n    let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection)\n    if (records.length == 0 && !newSel) return\n\n    let from = -1, to = -1, typeOver = false\n    for (let record of records) {\n      let range = this.readMutation(record)\n      if (!range) continue\n      if (range.typeOver) typeOver = true\n      if (from == -1) {\n        ;({from, to} = range)\n      } else {\n        from = Math.min(range.from, from)\n        to = Math.max(range.to, to)\n      }\n    }\n\n    let apply = from > -1 || newSel\n    if (!apply || !this.onChange(from, to, typeOver)) {\n      if (this.view.docView.dirty) {\n        this.ignore(() => this.view.docView.sync())\n        this.view.docView.dirty = Dirty.Not\n      }\n      this.view.docView.updateSelection()\n    }\n    this.clearSelection()\n  }\n\n  readMutation(rec: MutationRecord): {from: number, to: number, typeOver: boolean} | null {\n    let cView = this.view.docView.nearest(rec.target)\n    if (!cView || cView.ignoreMutation(rec)) return null\n    cView.markDirty()\n\n    if (rec.type == \"childList\") {\n      let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1)\n      let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1)\n      return {from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n              to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false}\n    } else { // \"characterData\"\n      return {from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue}\n    }\n  }\n\n  destroy() {\n    this.stop()\n    if (this.intersection) this.intersection.disconnect()\n    for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n    window.removeEventListener(\"scroll\", this.onScroll)\n    clearTimeout(this.parentCheck)\n  }\n}\n\nfunction findChild(cView: ContentView, dom: Node | null, dir: number): ContentView | null {\n  while (dom) {\n    let curView = ContentView.get(dom)\n    if (curView && curView.parent == cView) return curView\n    let parent = dom.parentNode\n    dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling\n  }\n  return null\n}\n","import {EditorView} from \"./editorview\"\nimport {ContentView} from \"./contentview\"\nimport {selectionCollapsed, getSelection} from \"./dom\"\nimport browser from \"./browser\"\nimport {EditorSelection, Change, Transaction} from \"../../state\"\n\nconst LineSep = \"\\ufdda\" // A Unicode 'non-character', used to denote newlines internally\n\nexport function applyDOMChange(view: EditorView, start: number, end: number, typeOver: boolean): boolean {\n  let change, newSel\n  let sel = view.state.selection.primary, bounds\n  if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n    let {from, to} = bounds\n    let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view.contentDOM, view.root)\n    let reader = new DOMReader(selPoints)\n    reader.readRange(bounds.startDOM, bounds.endDOM)\n    newSel = selectionFromPoints(selPoints, from)\n\n    let preferredPos = sel.from, preferredSide = null\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n      preferredPos = sel.to\n      preferredSide = \"end\"\n    }\n    let diff = findDiff(view.state.doc.slice(from, to, LineSep), reader.text,\n                        preferredPos - from, preferredSide)\n    if (diff) change = new Change(from + diff.from, from + diff.toA,\n                                  reader.text.slice(diff.from, diff.toB).split(LineSep))\n  } else if (view.hasFocus) {\n    let domSel = getSelection(view.root)\n    let {impreciseHead: iHead, impreciseAnchor: iAnchor} = view.docView\n    let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ? view.state.selection.primary.head\n      : view.docView.posFromDOM(domSel.focusNode!, domSel.focusOffset)\n    let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset\n      ? view.state.selection.primary.anchor\n      : selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode!, domSel.anchorOffset)\n    if (head != sel.head || anchor != sel.anchor)\n      newSel = EditorSelection.single(anchor, head)\n  }\n\n  if (!change && !newSel) return false\n\n  // Heuristic to notice typing over a selected character\n  if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n    change = new Change(sel.from, sel.to, view.state.doc.sliceLines(sel.from, sel.to))\n\n  if (change) {\n    let startState = view.state\n    // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events.\n    if (browser.android &&\n        ((change.from == sel.from && change.to == sel.to &&\n          change.length == 1 && change.text.length == 2 &&\n          dispatchKey(view, \"Enter\", 10)) ||\n         (change.from == sel.from - 1 && change.to == sel.to && change.length == 0 &&\n          dispatchKey(view, \"Backspace\", 8)) ||\n         (change.from == sel.from && change.to == sel.to + 1 && change.length == 0 &&\n          dispatchKey(view, \"Delete\", 46))))\n      return view.state != startState\n\n    let tr = startState.t()\n    if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n      let before = sel.from < change.from ? startState.doc.slice(sel.from, change.from, LineSep) : \"\"\n      let after = sel.to > change.to ? startState.doc.slice(change.to, sel.to, LineSep) : \"\"\n      tr.replaceSelection((before + change.text.join(LineSep) + after).split(LineSep))\n    } else {\n      tr.change(change)\n      if (newSel && !tr.selection.primary.eq(newSel.primary))\n        tr.setSelection(tr.selection.replaceRange(newSel.primary))\n    }\n    view.dispatch(tr.scrollIntoView().annotate(Transaction.userEvent, \"input\"))\n    return true\n  } else if (newSel && !newSel.primary.eq(sel)) {\n    let tr = view.state.t().setSelection(newSel)\n    if (view.inputState.lastSelectionTime > Date.now() - 50) {\n      if (view.inputState.lastSelectionOrigin == \"keyboard\") tr.scrollIntoView()\n      else tr.annotate(Transaction.userEvent, view.inputState.lastSelectionOrigin!)\n    }\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction findDiff(a: string, b: string, preferredPos: number, preferredSide: string | null)\n    : {from: number, toA: number, toB: number} | null {\n  let minLen = Math.min(a.length, b.length)\n  let from = 0\n  while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from)) from++\n  if (from == minLen && a.length == b.length) return null\n  let toA = a.length, toB = b.length\n  while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) { toA--; toB-- }\n\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, from - Math.min(toA, toB))\n    preferredPos -= toA + adjust - from\n  }\n  if (toA < from && a.length < b.length) {\n    let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0\n    from -= move\n    toB = from + (toB - toA)\n    toA = from\n  } else if (toB < from) {\n    let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0\n    from -= move\n    toA = from + (toA - toB)\n    toB = from\n  }\n  return {from, toA, toB}\n}\n\nclass DOMReader {\n  text: string = \"\"\n  constructor(private points: DOMPoint[]) {}\n\n  readRange(start: Node | null, end: Node | null) {\n    if (!start) return\n    let parent = start.parentNode!\n    for (let cur = start!;;) {\n      this.findPointBefore(parent, cur)\n      this.readNode(cur)\n      let next: Node | null = cur.nextSibling\n      if (next == end) break\n      let view = ContentView.get(cur), nextView = ContentView.get(next!)\n      if ((view ? view.breakAfter : isBlockElement(cur)) ||\n          ((nextView ? nextView.breakAfter : isBlockElement(next!)) && !(cur.nodeName == \"BR\" && !(cur as any).cmIgnore)))\n        this.text += LineSep\n      cur = next!\n    }\n    this.findPointBefore(parent, end)\n  }\n\n  readNode(node: Node) {\n    if ((node as any).cmIgnore) return\n    let view = ContentView.get(node)\n    let fromView = view && view.overrideDOMText\n    let text: string | undefined\n    if (fromView != null) text = fromView.join(LineSep)\n    else if (node.nodeType == 3) text = node.nodeValue!\n    else if (node.nodeName == \"BR\") text = node.nextSibling ? LineSep : \"\"\n    else if (node.nodeType == 1) this.readRange(node.firstChild, null)\n    if (text != null) {\n      this.findPointIn(node, text.length)\n      this.text += text\n    }\n  }\n\n  findPointBefore(node: Node, next: Node | null) {\n    for (let point of this.points)\n      if (point.node == node && node.childNodes[point.offset] == next)\n        point.pos = this.text.length\n  }\n\n  findPointIn(node: Node, maxLen: number) {\n    for (let point of this.points)\n      if (point.node == node)\n        point.pos = this.text.length + Math.min(point.offset, maxLen)\n  }\n}\n\nfunction isBlockElement(node: Node): boolean {\n  return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName)\n}\n\nclass DOMPoint {\n  pos: number = -1\n  constructor(readonly node: Node, readonly offset: number) {}\n}\n\nfunction selectionPoints(dom: HTMLElement, root: DocumentOrShadowRoot): DOMPoint[] {\n  let result: DOMPoint[] = []\n  if (root.activeElement != dom) return result\n  let {anchorNode, anchorOffset, focusNode, focusOffset} = getSelection(root)\n  if (anchorNode) {\n    result.push(new DOMPoint(anchorNode, anchorOffset))\n    if (focusNode != anchorNode || focusOffset != anchorOffset)\n      result.push(new DOMPoint(focusNode!, focusOffset))\n  }\n  return result\n}\n\nfunction selectionFromPoints(points: DOMPoint[], base: number): EditorSelection | null {\n  if (points.length == 0) return null\n  let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor\n  return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null\n}\n\nfunction dispatchKey(view: EditorView, name: string, code: number): boolean {\n  let options = {key: name, code: name, keyCode: code, which: code, cancelable: true}\n  let down = new KeyboardEvent(\"keydown\", options)\n  view.contentDOM.dispatchEvent(down)\n  let up = new KeyboardEvent(\"keyup\", options)\n  view.contentDOM.dispatchEvent(up)\n  return down.defaultPrevented || up.defaultPrevented\n}\n","import {EditorState, Transaction, Extension, Precedence} from \"../../state\"\nimport {StyleModule, Style} from \"style-mod\"\n\nimport {DocView} from \"./docview\"\nimport {ContentView} from \"./contentview\"\nimport {InputState, MouseSelectionUpdate} from \"./input\"\nimport {Rect, focusPreventScroll} from \"./dom\"\nimport {movePos, posAtCoords} from \"./cursor\"\nimport {BlockInfo} from \"./heightmap\"\nimport {ViewState} from \"./viewstate\"\nimport {ViewUpdate, styleModule, domEventHandlers,\n        contentAttributes, editorAttributes, clickAddsSelectionRange, dragMovesSelection,\n        viewPlugin, ViewPlugin, PluginInstance, PluginField,\n        decorations, phrases, MeasureRequest, UpdateFlag} from \"./extension\"\nimport {themeClass, theme, buildTheme, baseThemeID, baseTheme} from \"./theme\"\nimport {DOMObserver} from \"./domobserver\"\nimport {Attrs, updateAttrs, combineAttrs} from \"./attributes\"\nimport browser from \"./browser\"\nimport {applyDOMChange} from \"./domchange\"\n\n/// Configuration parameters passed when creating an editor view.\nexport interface EditorConfig {\n  /// The view's initial state. Defaults to an extension-less state\n  /// with an empty document.\n  state?: EditorState,\n  /// If the view is going to be mounted in a shadow root or document\n  /// other than the one held by the global variable `document` (the\n  /// default), you should pass it here.\n  root?: Document | ShadowRoot,\n  /// Override the transaction dispatch function for this editor view.\n  /// Your implementation, if provided, should probably call the\n  /// view's [`update` method](#view.EditorView.update).\n  dispatch?: (tr: Transaction) => void\n}\n\nexport const enum UpdateState {\n  Idle, // Not updating\n  Measuring, // In the layout-reading phase of a layout check\n  Updating // Updating/drawing, either directly via the `update` method, or as a result of a layout check\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n\n/// An editor view represents the editor's user interface. It holds\n/// the editable DOM surface, and possibly other elements such as the\n/// line number gutter. It handles events and dispatches state\n/// transactions for editing actions.\nexport class EditorView {\n  /// The current editor state.\n  get state() { return this.viewState.state }\n\n  /// To be able to display large documents without consuming too much\n  /// memory or overloading the browser, CodeMirror only draws the\n  /// code that is visible (plus a margin around it) to the DOM. This\n  /// property tells you the extent of the current drawn viewport, in\n  /// document positions.\n  get viewport(): {from: number, to: number} { return this.viewState.viewport }\n\n  /// When there are, for example, large collapsed ranges in the\n  /// viewport, its size can be a lot bigger than the actual visible\n  /// content. Thus, if you are doing something like styling the\n  /// content in the viewport, it is preferable to only do so for\n  /// these ranges, which are the subset of the viewport that is\n  /// actually drawn.\n  get visibleRanges(): readonly {from: number, to: number}[] { return this.viewState.visibleRanges }\n  \n  /// All regular editor state updates should go through this. It\n  /// takes a transaction, applies it, and updates the view to show\n  /// the new state. Its implementation can be overridden with an\n  /// [option](#view.EditorConfig.dispatch). Does not have to be\n  /// called as a method.\n  readonly dispatch: (tr: Transaction) => void\n\n  /// The document or shadow root that the view lives in.\n  readonly root: DocumentOrShadowRoot\n\n  /// The DOM element that wraps the entire editor view.\n  readonly dom: HTMLElement\n\n  /// The DOM element that can be made to scroll.\n  readonly scrollDOM: HTMLElement\n\n  /// The editable DOM element holding the editor content. You should\n  /// not, usually, interact with this content directly, though the\n  /// DOM, since the editor will immediately undo most of the changes\n  /// you make. Instead, use transactions to modify content, and\n  /// [decorations](#view.Decoration) to style it.\n  readonly contentDOM: HTMLElement\n\n  /// @internal\n  inputState!: InputState\n\n  /// @internal\n  readonly viewState: ViewState\n  /// @internal\n  readonly docView: DocView\n\n  private plugins: PluginInstance[] = []\n  private editorAttrs: Attrs = {}\n  private contentAttrs: Attrs = {}\n  private styleModules!: readonly StyleModule[]\n\n  /// @internal\n  updateState: UpdateState = UpdateState.Updating\n\n  /// @internal\n  observer: DOMObserver\n\n  /// @internal\n  measureScheduled: number = -1\n  /// @internal\n  measureRequests: MeasureRequest<any>[] = []\n\n  /// Construct a new view. You'll usually want to put `view.dom` into\n  /// your document after creating a view, so that the user can see\n  /// it.\n  constructor(config: EditorConfig = {}) {\n    this.contentDOM = document.createElement(\"div\")\n\n    this.scrollDOM = document.createElement(\"div\")\n    this.scrollDOM.className = themeClass(\"scroller\")\n    this.scrollDOM.appendChild(this.contentDOM)\n\n    this.dom = document.createElement(\"div\")\n    this.dom.appendChild(this.scrollDOM)\n\n    this.dispatch = config.dispatch || ((tr: Transaction) => this.update([tr]))\n    this.root = (config.root || document) as DocumentOrShadowRoot\n\n    this.viewState = new ViewState(config.state || EditorState.create())\n    this.plugins = this.state.facet(viewPlugin).map(spec => PluginInstance.create(spec, this))\n    this.observer = new DOMObserver(this, (from, to, typeOver) => applyDOMChange(this, from, to, typeOver),\n                                    () => this.measure())\n    this.docView = new DocView(this)\n\n    this.inputState = new InputState(this)\n    this.mountStyles()\n    this.updateAttrs()\n    this.updateState = UpdateState.Idle\n\n    ensureGlobalHandler()\n    this.requestMeasure()\n  }\n\n  /// Update the view for the given array of transactions. This will\n  /// update the visible document and selection to match the state\n  /// produced by the transactions, and notify view plugins of the\n  /// change.\n  update(transactions: Transaction[]) {\n    if (this.updateState != UpdateState.Idle)\n      throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\")\n    this.updateState = UpdateState.Updating\n\n    let state = this.state\n    for (let tr of transactions) {\n      if (tr.startState != state)\n        throw new RangeError(\"Trying to update state with a transaction that doesn't start from the current state.\")\n      state = tr.apply()\n    }\n    let update = new ViewUpdate(this, state, transactions)\n    if (state.doc != this.state.doc || transactions.some(tr => tr.selectionSet && !tr.annotation(Transaction.preserveGoalColumn)))\n      this.inputState.goalColumns.length = 0\n\n    let scrollTo = transactions.some(tr => tr.scrolledIntoView) ? state.selection.primary.head : -1\n    this.viewState.update(update, scrollTo)\n    if (!update.empty) this.updatePlugins(update)\n    let redrawn = this.docView.update(update)\n    this.inputState.ensureHandlers(this)\n    if (this.state.facet(styleModule) != this.styleModules) this.mountStyles()\n    this.updateAttrs()\n    this.updateState = UpdateState.Idle\n    if (redrawn || scrollTo > -1) this.requestMeasure()\n  }\n\n  updatePlugins(update: ViewUpdate) {\n    let prevSpecs = update.prevState.facet(viewPlugin), specs = update.state.facet(viewPlugin)\n    if (prevSpecs != specs) {\n      let newPlugins = [], reused = []\n      for (let spec of specs) {\n        let found = prevSpecs.indexOf(spec)\n        if (found < 0) {\n          newPlugins.push(PluginInstance.create(spec, this))\n        } else {\n          let plugin = this.plugins[found].update(update)\n          reused.push(plugin)\n          newPlugins.push(plugin)\n        }\n      }\n      for (let plugin of this.plugins)\n        if (plugin.destroy && reused.indexOf(plugin) < 0) plugin.destroy()\n      this.plugins = newPlugins\n    } else {\n      for (let i = 0; i < this.plugins.length; i++)\n        this.plugins[i] = this.plugins[i].update(update)\n    }\n  }\n\n  /// @internal\n  measure() {\n    if (this.measureScheduled > -1) cancelAnimationFrame(this.measureScheduled)\n    this.measureScheduled = 1 // Prevent requestMeasure calls from scheduling another animation frame\n\n    for (let i = 0;; i++) {\n      this.updateState = UpdateState.Measuring\n      let changed = this.viewState.measure(this.docView, i > 0)\n      let measuring = this.measureRequests\n      if (!changed && !measuring.length) break\n      this.measureRequests = []\n      if (i > 5) {\n        console.warn(\"Viewport failed to stabilize\")\n        break\n      }\n      let measured = measuring.map(m => m.read(this))\n      let update = new ViewUpdate(this, this.state)\n      update.flags |= changed\n      this.updateState = UpdateState.Updating\n      this.updatePlugins(update)\n      if (changed) this.docView.update(update)\n      for (let i = 0; i < measuring.length; i++) measuring[i].write(measured[i], this)\n\n      if (!(changed & UpdateFlag.Viewport) && this.measureRequests.length == 0) break\n    }\n\n    this.updateState = UpdateState.Idle\n    this.measureScheduled = -1\n  }\n\n  private updateAttrs() {\n    let editorAttrs = combineAttrs(this.state.facet(editorAttributes), {\n      class: themeClass(\"wrap\") + (this.hasFocus ? \" cm-focused \" : \" \") +\n        baseThemeID + \" \" + this.state.facet(theme).join(\" \")\n    })\n    updateAttrs(this.dom, this.editorAttrs, editorAttrs)\n    this.editorAttrs = editorAttrs\n    let contentAttrs = combineAttrs(this.state.facet(contentAttributes), {\n      spellcheck: \"false\",\n      contenteditable: \"true\",\n      class: themeClass(\"content\"),\n      style: `${browser.tabSize}: ${this.state.tabSize}`\n    })\n    updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs)\n    this.contentAttrs = contentAttrs\n  }\n\n  private mountStyles() {\n    this.styleModules = this.state.facet(styleModule)\n    StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse())\n  }\n\n  /// Look up a translation for the given phrase (via the\n  /// [`phrases`](#view.EditorView^phrases) facet), or return the\n  /// original string if no translation is found.\n  phrase(phrase: string): string {\n    for (let map of this.state.facet(phrases)) {\n      if (Object.prototype.hasOwnProperty.call(map, phrase)) return map[phrase]\n    }\n    return phrase\n  }\n\n  /// Find the DOM parent node and offset (child offset if `node` is\n  /// an element, character offset when it is a text node) at the\n  /// given document position.\n  domAtPos(pos: number): {node: Node, offset: number} {\n    return this.docView.domAtPos(pos)\n  }\n\n  /// Find the document position at the given DOM node. Can be useful\n  /// for associating positions with DOM events. Will raise an error\n  /// when `node` isn't part of the editor content.\n  posAtDOM(node: Node, offset: number = 0) {\n    return this.docView.posFromDOM(node, offset)\n  }\n\n  private readMeasured() {\n    if (this.updateState == UpdateState.Updating)\n      throw new Error(\"Reading the editor layout isn't allowed during an update\")\n    if (this.updateState == UpdateState.Idle && this.measureScheduled > -1) this.measure()\n  }\n\n  /// Make sure plugins get a chance to measure the DOM before the\n  /// next frame. Calling this is preferable to messing with the DOM\n  /// directly from, for example, an even handler, because it'll make\n  /// sure measuring and drawing done by other components is\n  /// synchronized, avoiding unnecessary DOM layout computations.\n  requestMeasure<T>(request?: MeasureRequest<T>) {\n    if (this.measureScheduled < 0)\n      this.measureScheduled = requestAnimationFrame(() => this.measure())\n    if (request) {\n      if (request.key != null) for (let i = 0; i < this.measureRequests.length; i++) {\n        if (this.measureRequests[i].key === request.key) {\n          this.measureRequests[i] = request\n          return\n        }\n      }\n      this.measureRequests.push(request)\n    }\n  }\n\n  /// Collect all values provided by the active plugins for a given\n  /// field.\n  pluginField<T>(field: PluginField<T>): readonly T[] {\n    // FIXME make this error when called during plugin updating\n    let result: T[] = []\n    for (let plugin of this.plugins) plugin.takeField(field, result)\n    return result\n  }\n\n  /// Get the value of a specific plugin, if present. Note that\n  /// plugins that crash can be dropped from a view, so even when you\n  /// know you registered a given plugin, it is recommended to check\n  /// the return value of this method.\n  plugin<T>(plugin: ViewPlugin<T>): T | null {\n    for (let inst of this.plugins) if (inst.spec == plugin) return inst.value as T\n    return null\n  }\n\n  /// Find the line or block widget at the given vertical position.\n  /// `editorTop`, if given, provides the vertical position of the top\n  /// of the editor. It defaults to the editor's screen position\n  /// (which will force a DOM layout).\n  blockAtHeight(height: number, editorTop?: number) {\n    this.readMeasured()\n    return this.viewState.blockAtHeight(height, ensureTop(editorTop, this.contentDOM))\n  }\n\n  /// Find information for the line at the given vertical position.\n  /// The resulting block info might hold another array of block info\n  /// structs in its `type` field if this line consists of more than\n  /// one block.\n  lineAtHeight(height: number, editorTop?: number): BlockInfo {\n    this.readMeasured()\n    return this.viewState.lineAtHeight(height, ensureTop(editorTop, this.contentDOM))\n  }\n\n  /// Find the height information for the given line.\n  lineAt(pos: number, editorTop?: number): BlockInfo {\n    this.readMeasured()\n    return this.viewState.lineAt(pos, ensureTop(editorTop, this.contentDOM))\n  }\n\n  /// Iterate over the height information of the lines in the\n  /// viewport.\n  viewportLines(f: (height: BlockInfo) => void, editorTop?: number) {\n    let {from, to} = this.viewport\n    this.viewState.forEachLine(from, to, f, ensureTop(editorTop, this.contentDOM))\n  }\n\n  /// The editor's total content height.\n  get contentHeight() {\n    return this.viewState.heightMap.height + this.viewState.paddingTop + this.viewState.paddingBottom\n  }\n\n  /// Compute cursor motion from the given position, in the given\n  /// direction, by the given unit. Since this might involve\n  /// temporarily mutating the DOM selection, you can pass the action\n  /// type this will be used for to, in case the editor selection is\n  /// set to the new position right away, avoid an extra DOM selection\n  /// change.\n  movePos(start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n          granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n          action: \"move\" | \"extend\" = \"move\"): number {\n    return movePos(this, start, direction, granularity, action)\n  }\n\n  /// Get the document position at the given screen coordinates.\n  /// Returns -1 if no valid position could be found.\n  posAtCoords(coords: {x: number, y: number}): number {\n    this.readMeasured()\n    return posAtCoords(this, coords)\n  }\n\n  /// Get the screen coordinates at the given document position.\n  coordsAtPos(pos: number): Rect | null {\n    this.readMeasured()\n    return this.docView.coordsAt(pos)\n  }\n\n  /// The default width of a character in the editor. May not\n  /// accurately reflect the width of all characters.\n  get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth }\n  /// The default height of a line in the editor.\n  get defaultLineHeight() { return this.viewState.heightOracle.lineHeight }\n  /// The text direction (`direction` CSS property) of the editor.\n  get textDirection() { return this.viewState.heightOracle.direction }\n\n  /// Start a custom mouse selection event.\n  startMouseSelection(event: MouseEvent, update: MouseSelectionUpdate) {\n    this.focus()\n    this.inputState.startMouseSelection(this, event, update)\n  }\n\n  /// Check whether the editor has focus.\n  get hasFocus(): boolean {\n    return this.root.activeElement == this.contentDOM\n  }\n\n  /// Put focus on the editor.\n  focus() {\n    this.observer.ignore(() => {\n      focusPreventScroll(this.contentDOM)\n      this.docView.updateSelection()\n    })\n  }\n\n  /// Clean up this editor view, removing its element from the\n  /// document, unregistering event handlers, and notifying\n  /// plugins. The view instance can no longer be used after\n  /// calling this.\n  destroy() {\n    for (let plugin of this.plugins) plugin.destroy()\n    this.inputState.destroy()\n    this.dom.remove()\n    this.observer.destroy()\n    if (this.measureScheduled > -1) cancelAnimationFrame(this.measureScheduled)\n  }\n\n  /// Facet that registers [view plugins](#view.ViewPlugin). Usually,\n  /// it is more convenient to use\n  /// [`ViewPlugin.register`](#view.ViewPlugin^register).\n  static plugin = viewPlugin\n\n  /// Facet to add a [style\n  /// module](https://github.com/marijnh/style-mod#readme) to an editor\n  /// view. The view will ensure that the module is registered in its\n  /// [document root](#view.EditorConfig.root).\n  static styleModule = styleModule\n\n  /// Facet that can be used to add DOM event handlers. The value\n  /// should be an object mapping event names to handler functions. The\n  /// first such function to return true will be assumed to have handled\n  /// that event, and no other handlers or built-in behavior will be\n  /// activated for it.\n  static domEventHandlers = domEventHandlers\n\n  /// Facet used to configure whether a given selection drag event\n  /// should move or copy the selection. The given predicate will be\n  /// called with the `mousedown` event, and can return `true` when\n  /// the drag should move the content.\n  static dragMovesSelection = dragMovesSelection\n\n  /// Facet used to configure whether a given selecting click adds\n  /// a new range to the existing selection or replaces it entirely.\n  static clickAddsSelectionRange = clickAddsSelectionRange\n\n  /// A facet that determines which [decorations](#view.Decoration)\n  /// are shown in the view. See also [view\n  /// plugins](#view.EditorView^decorations), which have a separate\n  /// mechanism for providing decorations.\n  static decorations = decorations\n\n  /// Create a theme extension. The argument object should map [theme\n  /// selectors](#view.themeClass) to styles, which are (potentially\n  /// nested) [style\n  /// declarations](https://github.com/marijnh/style-mod#documentation)\n  /// providing the CSS styling for the selector.\n  static theme(spec: {[name: string]: Style}): Extension {\n    let prefix = StyleModule.newName()\n    return [theme.of(prefix), styleModule.of(buildTheme(prefix, spec))]\n  }\n\n  /// Create an extension that adds styles to the base theme.\n  static baseTheme(spec: {[name: string]: Style}): Extension {\n    return Precedence.Fallback.set(styleModule.of(buildTheme(baseThemeID, spec)))\n  }\n\n  /// Registers translation phrases. The\n  /// [`phrase`](#view.EditorView.phrase) method will look through all\n  /// objects registered with this facet to find translations for\n  /// its argument.\n  static phrases = phrases\n\n  /// Facet that provides attributes for the editor's editable DOM\n  /// element.\n  static contentAttributes = contentAttributes\n\n  /// Facet that provides editor DOM attributes for the editor's\n  /// outer element.\n  static editorAttributes = editorAttributes\n}\n\nfunction ensureTop(given: number | undefined, dom: HTMLElement) {\n  return given == null ? dom.getBoundingClientRect().top : given\n}\n\nlet registeredGlobalHandler = false, resizeDebounce = -1\n\nfunction ensureGlobalHandler() {\n  if (registeredGlobalHandler) return\n  window.addEventListener(\"resize\", () => {\n    if (resizeDebounce == -1) resizeDebounce = setTimeout(handleResize, 50)\n  })\n}\n\nfunction handleResize() {\n  resizeDebounce = -1\n  let found = document.querySelectorAll(\".cm-content\")\n  for (let i = 0; i < found.length; i++) {\n    let docView = ContentView.get(found[i])\n    if (docView) docView.editorView.requestMeasure()\n  }\n}\n","export {EditorView, EditorConfig} from \"./editorview\"\nexport {Command, ViewPlugin, PluginValue, PluginField, ViewUpdate} from \"./extension\"\nexport {Decoration, DecorationSet, WidgetType,\n        MarkDecorationSpec, WidgetDecorationSpec, LineDecorationSpec, ReplaceDecorationSpec, BlockType} from \"./decoration\"\nexport {BlockInfo} from \"./heightmap\"\nexport {themeClass} from \"./theme\"\nexport {Range} from \"../../rangeset\"\n\nimport {HeightMap, HeightOracle, MeasuredHeights, QueryType} from \"./heightmap\"\n/// @internal\nexport const __test = {HeightMap, HeightOracle, MeasuredHeights, QueryType}\n"],"names":["none","BlockType","RangeValue","RangeSet","MapMode","Facet","StyleModule","Text","state","ChangeSet","ChangedRange","decorationsFacet","DecorationComparator","countColumn","findColumn","isExtendingChar","SelectionRange","EditorState","dragMovesSelection","Transaction","dragBehavior","EditorSelection","Change","Precedence"],"mappings":"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"}