import { EditorView } from "./editorview";
import { DOMSelection } from "./dom";
export declare class DOMObserver {
    private view;
    private onChange;
    private onScrollChanged;
    dom: HTMLElement;
    observer: MutationObserver;
    active: boolean;
    ignoreSelection: DOMSelection;
    onSelectionChange: any;
    onCharData: any;
    charDataQueue: MutationRecord[];
    charDataTimeout: any;
    scrollTargets: HTMLElement[];
    intersection: IntersectionObserver | null;
    intersecting: boolean;
    parentCheck: number;
    constructor(view: EditorView, onChange: (from: number, to: number, typeOver: boolean) => boolean, onScrollChanged: () => void);
    onScroll(): void;
    listenForScroll(): void;
    ignore<T>(f: () => T): T;
    start(): void;
    stop(): void;
    takeCharRecords(): MutationRecord[];
    clearSelection(): void;
    clear(): void;
    flush(records?: MutationRecord[]): void;
    readMutation(rec: MutationRecord): {
        from: number;
        to: number;
        typeOver: boolean;
    } | null;
    destroy(): void;
}
//# sourceMappingURL=domobserver.d.ts.map