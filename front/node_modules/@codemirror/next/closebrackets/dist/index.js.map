{"version":3,"file":"index.js","sources":["../src/closebrackets.ts"],"sourcesContent":["import {EditorView} from \"../../view\"\nimport {EditorState, SelectionRange, Transaction} from \"../../state\"\nimport {Text, isWordChar} from \"../../text\"\nimport {codePointAt, fromCodePoint, minPairCodePoint} from \"../../text\"\nimport {keyName} from \"w3c-keyname\"\n\n/// Configures bracket closing behavior for a syntax (via\n/// [`languageData`](#state.languageData)).\nexport interface CloseBracketData {\n  /// The opening brackets to close. Defaults to `[\"(\", \"[\", \"{\", \"'\",\n  /// '\"']`. Brackets may be single characters or a triple of quotes\n  /// (as in `\"''''\"`).\n  closeBrackets?: string[],\n  /// Characters in front of which newly opened brackets are\n  /// automatically closed. Closing always happens in front of\n  /// whitespace. Defaults to `\")]}'\\\":;>\"`.\n  closeBracketsBefore?: string\n}\n\nconst defaults = {\n  closeBrackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n  closeBracketsBefore: \")]}'\\\":;>\"\n}\n\n/// Extension to enable bracket-closing behavior. When a closeable\n/// bracket is typed, its closing bracket is immediately inserted\n/// after the cursor. When closing a bracket directly in front of that\n/// closing bracket, the cursor moves over the existing bracket. When\n/// backspacing in between brackets, both are removed.\nexport const closeBrackets = EditorView.domEventHandlers.of({keydown})\n\nconst definedClosing = \"()[]{}<>\"\n\nfunction closing(ch: number) {\n  for (let i = 0; i < definedClosing.length; i += 2)\n    if (definedClosing.charCodeAt(i) == ch) return definedClosing.charAt(i + 1)\n  return fromCodePoint(ch < 128 ? ch : ch + 1)\n}\n\nfunction config(state: EditorState, pos: number) {\n  let syntax = state.facet(EditorState.syntax)\n  if (syntax.length == 0) return defaults\n  return syntax[0].languageDataAt<CloseBracketData>(state, pos)\n}\n\nfunction keydown(view: EditorView, event: KeyboardEvent) {\n  if (event.ctrlKey || event.metaKey) return false\n\n  if (event.keyCode == 8) { // Backspace\n    let tr = handleBackspace(view.state)\n    if (!tr) return false\n    view.dispatch(tr)\n    return true\n  }\n\n  let key = keyName(event)\n  if (key.length > 2 || key.length == 2 && codePointAt(key, 0) < minPairCodePoint) return false\n  let tr = handleInsertion(view.state, key)\n  if (!tr) return false\n  view.dispatch(tr)\n  return true\n}\n\n/// Function that implements the extension's backspace behavior.\n/// Exported mostly for testing purposes.\nexport function handleBackspace(state: EditorState) {\n  let conf = config(state, state.selection.primary.head)\n  let tokens = conf.closeBrackets || defaults.closeBrackets\n  let tr = state.t(), dont = null\n  tr.forEachRange(range => {\n    if (!range.empty) return dont = range\n    let before = prevChar(state.doc, range.head)\n    for (let token of tokens) {\n      if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0))) {\n        tr.replace(range.head - token.length, range.head + token.length, \"\")\n        return new SelectionRange(range.head - token.length)\n      }\n    }\n    return dont = range\n  })\n  return dont ? null : tr.scrollIntoView()\n}\n\n/// Implements the extension's behavior on text insertion. Again,\n/// exported mostly for testing.\nexport function handleInsertion(state: EditorState, ch: string): Transaction | null {\n  let conf = config(state, state.selection.primary.head)\n  let tokens = conf.closeBrackets || defaults.closeBrackets\n  for (let tok of tokens) {\n    let closed = closing(codePointAt(tok, 0))\n    if (ch == tok)\n      return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1) \n        : handleOpen(state, tok, closed, conf.closeBracketsBefore || defaults.closeBracketsBefore)\n    if (ch == closed)\n      return handleClose(state, tok, closed)\n  }\n  return null\n}\n\nfunction nextChar(doc: Text, pos: number) {\n  let next = doc.slice(pos, pos + 2)\n  return next.length == 2 && codePointAt(next, 0) < minPairCodePoint ? next.slice(0, 1) : next\n}\n\nfunction prevChar(doc: Text, pos: number) {\n  let prev = doc.slice(pos - 2, pos)\n  return prev.length == 2 && codePointAt(prev, 0) < minPairCodePoint ? prev.slice(1) : prev\n}\n\nfunction handleOpen(state: EditorState, open: string, close: string, closeBefore: string) {\n  let tr = state.t(), dont = null\n  tr.forEachRange(range => {\n    if (!range.empty) {\n      tr.replace(range.to, range.to, close)\n      tr.replace(range.from, range.from, open)\n      return new SelectionRange(range.anchor + open.length, range.head + open.length)\n    }\n    let next = nextChar(state.doc, range.head)\n    if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1) {\n      tr.replace(range.head, range.head, open + close)\n      return new SelectionRange(range.head + open.length, range.head + open.length)\n    }\n    return dont = range\n  })\n  return dont ? null : tr.scrollIntoView()\n}\n\nfunction handleClose(state: EditorState, open: string, close: string) {\n  let tr = state.t(), dont = null\n  tr.forEachRange(range => {\n    if (range.empty && close == nextChar(state.doc, range.head))\n      return new SelectionRange(range.head + close.length)\n    return dont = range\n  })\n  return dont ? null : tr.scrollIntoView()\n}\n\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state: EditorState, token: string, allowTriple: boolean) {\n  let tr = state.t(), dont = null\n  tr.forEachRange(range => {\n    if (!range.empty) {\n      tr.replace(range.to, range.to, token)\n      tr.replace(range.from, range.from, token)\n      return new SelectionRange(range.anchor + token.length, range.head + token.length)\n    }\n    let pos = range.head, next = nextChar(state.doc, pos)\n    if (next == token) {\n      if (nodeStart(state, pos)) {\n        tr.replace(pos, pos, token + token)\n        return new SelectionRange(pos + token.length)\n      } else {\n        let isTriple = allowTriple && state.doc.slice(pos, pos + token.length * 3) == token + token + token\n        return new SelectionRange(pos + token.length * (isTriple ? 3 : 1))\n      }\n    } else if (allowTriple && state.doc.slice(pos - 2 * token.length, pos) == token + token &&\n               nodeStart(state, pos - 2 * token.length)) {\n      tr.replace(pos, pos, token + token + token + token)\n      return new SelectionRange(pos + token.length)\n    } else if (!isWordChar(next)) {\n      let prev = state.doc.slice(pos - 1, pos)\n      if (!isWordChar(prev) && prev != token) {\n        tr.replace(pos, pos, token + token)\n        return new SelectionRange(pos + token.length)\n      }\n    }\n    return dont = range\n  })\n  return dont ? null : tr.scrollIntoView()\n}\n\nfunction nodeStart(state: EditorState, pos: number) {\n  let tree = state.tree.resolve(pos + 1)\n  return tree.parent && tree.start == pos\n}\n"],"names":["EditorView","fromCodePoint","state","EditorState","keyName","codePointAt","minPairCodePoint","SelectionRange","isWordChar"],"mappings":"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"}