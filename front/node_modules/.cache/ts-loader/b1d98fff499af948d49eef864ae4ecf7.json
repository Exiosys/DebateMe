{"remainingRequest":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/babel-loader/lib/index.js!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/ts-loader/index.js??ref--14-2!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brdnicolas/Desktop/DebateMe/front/src/components/Question.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/brdnicolas/Desktop/DebateMe/front/src/components/Question.vue","mtime":1597089574561},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brdnicolas/Desktop/DebateMe/front/src/components/Question.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport headerComponent from '@/components/mini-components/header.vue'\nimport commentaire from '@/components/mini-components/commentaire.vue'\nimport switchComponent from \"@/components/mini-components/switch.vue\";\nimport myAPI from \"@/components/myAPI\";\n@Component({\n    components: {\n        headerComponent,\n        commentaire,\n        switchComponent,\n    },\n})\nexport default class Question extends Vue {\n    posts: object;\n    question: object;\n    date: string;\n    switchValue: boolean;\n    user: object;\n    votesID: number;\n    errorPostComment: string;\n\n    constructor() {\n        super();\n        this.posts = [];\n        this.question = {};\n        this.date = \"\";\n        this.switchValue = false;\n        this.user = {};\n        this.votesID = 0;\n        this.errorPostComment = \"\";\n    }\n\n    created() {\n        window.addEventListener('scroll', this.handleScroll);\n    }\n    destroyed () {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll(): void {\n        const banner = document.getElementById(\"banner\");\n        const padding = document.getElementById(\"writecomment\");\n        if (banner) {\n            const h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            if (window.pageYOffset > 40 * h / 100 && padding) {\n                banner.className = \"sticky\";\n                const px = (banner.offsetHeight + 3).toString() + \"px\";\n                padding.style.paddingTop = px;\n            } if(window.pageYOffset <= 40 * h / 100 && padding) {\n                banner.className = \"nique\";\n                padding.style.paddingTop = \"0px\";\n            }\n        }\n    }\n\n    mounted() {\n        this.getComments();\n        this.getQuestion();\n        this.checkToken();\n    }\n\n    checkToken(): void {\n        if(localStorage.token === \"\") {\n            window.location.href = '/';\n        }\n    }\n\n    async postComment(): Promise<void> {\n        let rep = false;\n        const content = (document.getElementById(\"message\") as HTMLInputElement);\n        if(content.value.length < 50) {\n            this.errorPostComment = \"Veuillez écrire un texte de plus 50 charactères ..\";\n            return;\n        }\n        this.errorPostComment = \"\";\n        let listTermes: Record<string, any> = [];\n\n        let probleme = false;\n        await myAPI.post(\"posts\", {\n            content: content.value,\n            'question_id' : this.$route.params.idQuestion,\n            'isAnonym':this.switchValue\n        }).then((response) =>  {\n            rep = true;\n            listTermes = response.data;\n            console.log(response.data);\n            if(response.status == 206) {\n                probleme = true;\n\n            }\n        } );\n\n        if (probleme) {\n            let error = \"Les termes comme : \";\n            const termesMauvais: any[] = [];\n            (listTermes as Record<string,any>).map(function(value: any, key: any) {\n                if (!termesMauvais.includes(value.Term)) {\n                    error = error + value.Term + \", \";\n                    termesMauvais.push(value.Term);\n                }\n            });\n            error = error + \"sont à éviter..\";\n            this.errorPostComment = error;\n        }\n\n        if(rep && !probleme) {\n            this.switchValue = false;\n            const element = document.getElementById(\"message\") as  HTMLInputElement;\n            if(element) {\n                element.value = \"\";\n            }\n        }\n        this.getComments();\n    }\n\n    showDocu(): void {\n        this.$alert((this.question as Record<string, any>).documentation);\n    }\n\n    async getComments(): Promise<void> {\n        let posts = [null];\n\n        await myAPI.get(\"questions/\" + this.$route.params.idQuestion + \"/posts\").then((response) =>  {\n            posts = response.data;\n        });\n        if (posts)\n            this.posts = posts;\n    }\n    async getQuestion(): Promise<void> {\n        let rep = null;\n        let date = \"\";\n\n        await myAPI.get(\"themes/\" + this.$route.params.idTheme + \"/questions/\" + this.$route.params.idQuestion).then((response) =>  {\n            rep = response.data;\n            date = response.data.created_at;\n        });\n\n        if (rep && date) {\n            this.question = rep;\n            this.date = date.slice(0,10)\n        }\n    }\n}\n"],"sourceRoot":""}]}