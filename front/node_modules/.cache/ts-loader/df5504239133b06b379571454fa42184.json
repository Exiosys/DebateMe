{"remainingRequest":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/babel-loader/lib/index.js!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/ts-loader/index.js??ref--14-2!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brdnicolas/Desktop/DebateMe/front/src/components/admin/Reports.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/brdnicolas/Desktop/DebateMe/front/src/components/admin/Reports.vue","mtime":1597089574562},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2JyZG5pY29sYXMvRGVza3RvcC9EZWJhdGVNZS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2JyZG5pY29sYXMvRGVza3RvcC9EZWJhdGVNZS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9icmRuaWNvbGFzL0Rlc2t0b3AvRGViYXRlTWUvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvYnJkbmljb2xhcy9EZXNrdG9wL0RlYmF0ZU1lL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2JyZG5pY29sYXMvRGVza3RvcC9EZWJhdGVNZS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgcmVwb3J0IGZyb20gIkAvY29tcG9uZW50cy9hZG1pbi9taW5pLWNvbXBvbmVudHMvcmVwb3J0LWNvbXAudnVlIjsKaW1wb3J0IE1lbnUgZnJvbSAiQC9jb21wb25lbnRzL2FkbWluL01lbnUudnVlIjsKaW1wb3J0IEhlYWRlciBmcm9tICJAL2NvbXBvbmVudHMvbWluaS1jb21wb25lbnRzL2hlYWRlci52dWUiOwppbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4vTGluZUNoYXJ0LmpzJzsKaW1wb3J0IG15QVBJIGZyb20gIkAvY29tcG9uZW50cy9teUFQSSI7Ci8qCjxkaXYgc3R5bGU9IndpZHRoOjUwMHB4O2hlaWdodDo1MDBweDsiPgogICAgPGxpbmUtY2hhcnQgOmNoYXJ0LWRhdGE9ImRhdGFjb2xsZWN0aW9uIj48L2xpbmUtY2hhcnQ+CjwvZGl2PgoqLwoKdmFyIEhlbGxvV29ybGQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoSGVsbG9Xb3JsZCwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoSGVsbG9Xb3JsZCk7CgogIGZ1bmN0aW9uIEhlbGxvV29ybGQoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEhlbGxvV29ybGQpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcyk7CiAgICBfdGhpcy5yZXBvcnRzID0gW107CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSGVsbG9Xb3JsZCwgW3sKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuY2hlY2tBZG1pbigpOwogICAgICB0aGlzLmdldFJlcG9ydHMoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWRpcmVjdFRvIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWRpcmVjdFRvKHBhZ2UpIHsKICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLycgKyBwYWdlOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFJlcG9ydHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRSZXBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXA7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmVwID0gbnVsbDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIG15QVBJLmdldCgicmVwb3J0cy8iKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXAgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGlmIChyZXApIHsKICAgICAgICAgICAgICAgICAgdGhpcy5yZXBvcnRzID0gcmVwOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXApOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0UmVwb3J0cygpIHsKICAgICAgICByZXR1cm4gX2dldFJlcG9ydHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFJlcG9ydHM7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJkZWxldGVQb3N0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZGVsZXRlUG9zdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWRQb3N0KSB7CiAgICAgICAgdmFyIHJlcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlcG9uc2UgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIG15QVBJLmRlbGV0ZSgicG9zdHMvIiArIGlkUG9zdCkudGhlbihmdW5jdGlvbiAocmVwKSB7CiAgICAgICAgICAgICAgICAgIHJlcG9uc2UgPSAxOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGlmIChyZXBvbnNlKSB0aGlzLiRyb3V0ZXIuZ28oMCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGRlbGV0ZVBvc3QoX3gpIHsKICAgICAgICByZXR1cm4gX2RlbGV0ZVBvc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRlbGV0ZVBvc3Q7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJkZWxldGVSZXBvcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9kZWxldGVSZXBvcnQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGlkUmVwb3J0KSB7CiAgICAgICAgdmFyIHJlcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlcG9uc2UgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIG15QVBJLmRlbGV0ZSgicmVwb3J0cy8iICsgaWRSZXBvcnQpLnRoZW4oZnVuY3Rpb24gKHJlcCkgewogICAgICAgICAgICAgICAgICByZXBvbnNlID0gMTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAocmVwb25zZSkgdGhpcy4kcm91dGVyLmdvKDApOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkZWxldGVSZXBvcnQoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9kZWxldGVSZXBvcnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRlbGV0ZVJlcG9ydDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImNoZWNrQWRtaW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9jaGVja0FkbWluID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcmVwOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZXAgPSBudWxsOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIG15QVBJLmdldCgidXNlcnMvbWUvcHJvZmlsZSIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJlcCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgaWYgKHJlcCkgewogICAgICAgICAgICAgICAgICBpZiAoIXJlcC5pc0FkbWluKSB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvJzsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY2hlY2tBZG1pbigpIHsKICAgICAgICByZXR1cm4gX2NoZWNrQWRtaW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNoZWNrQWRtaW47CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBIZWxsb1dvcmxkOwp9KFZ1ZSk7CgpIZWxsb1dvcmxkID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXI6IEhlYWRlciwKICAgIExpbmVDaGFydDogTGluZUNoYXJ0LAogICAgcmVwb3J0OiByZXBvcnQsCiAgICBNZW51OiBNZW51CiAgfQp9KV0sIEhlbGxvV29ybGQpOwpleHBvcnQgZGVmYXVsdCBIZWxsb1dvcmxkOw=="},{"version":3,"sources":["/Users/brdnicolas/Desktop/DebateMe/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brdnicolas/Desktop/DebateMe/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brdnicolas/Desktop/DebateMe/front/src/components/admin/Reports.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport report from \"@/components/admin/mini-components/report-comp.vue\";\nimport Menu from \"@/components/admin/Menu.vue\";\nimport Header from \"@/components/mini-components/header.vue\";\nimport LineChart from './LineChart.js';\nimport myAPI from \"@/components/myAPI\";\n\n/*\n<div style=\"width:500px;height:500px;\">\n    <line-chart :chart-data=\"datacollection\"></line-chart>\n</div>\n*/\n\n@Component({\n    components: {\n        Header,\n        LineChart,\n        report,\n        Menu\n    },\n})\n\nexport default class HelloWorld extends Vue {\n    mounted() {\n        this.checkAdmin();\n        this.getReports();\n    }\n\n    redirectTo(page: string): void {\n        window.location.href = '/' + page;\n    }\n\n    reports: object;\n    constructor() {\n        super();\n        this.reports = [];\n    }\n\n    async getReports(): Promise<void> {\n        let rep = null;\n        await myAPI.get(\"reports/\")\n        .then(function(response) {\n            rep = response.data;\n        });\n        if (rep) {\n            this.reports = rep;\n            console.log(rep);\n        }\n    }\n\n    async deletePost(idPost: number): Promise<void> {\n        let reponse = 0;\n        await myAPI.delete(\"posts/\" + idPost)\n        .then(function(rep) {\n            reponse = 1;\n        });\n        if(reponse)\n            this.$router.go(0);\n    }\n\n    async deleteReport(idReport: number): Promise<void> {\n        let reponse = 0;\n        await myAPI.delete(\"reports/\" + idReport)\n        .then(function(rep) {\n            reponse = 1;\n        });\n        if(reponse)\n            this.$router.go(0);\n    }\n\n    async checkAdmin(): Promise<void> {\n        let rep = null;\n        await myAPI.get(\"users/me/profile\")\n        .then(function(response) {\n            rep = response.data;\n        });\n        if (rep) {\n            if( !(rep as Record<string,any>).isAdmin )\n                window.location.href = '/';\n        }\n    }\n\n\n}\n"],"sourceRoot":""}]}