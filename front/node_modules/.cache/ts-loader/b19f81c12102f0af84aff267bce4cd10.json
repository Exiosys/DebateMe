{"remainingRequest":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/babel-loader/lib/index.js!/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/ts-loader/index.js??ref--14-2!/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/beelee_the_bee/Documents/ETNA/PLI/front/src/components/mini-components/commentaire.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/src/components/mini-components/commentaire.vue","mtime":1595668326085},{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/beelee_the_bee/Documents/ETNA/PLI/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/beelee_the_bee/Documents/ETNA/PLI/front/src/components/mini-components/commentaire.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @ts-nocheck\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport moment from 'moment'\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport myAPI from \"@/components/myAPI\";\n@Component\nexport default class Header extends Vue {\n\n    @Prop({default: \"Attente d'informations\"})\n    message: string | undefined;\n    @Prop({default:true})\n    anonym: boolean | undefined;\n    @Prop({default:{}})\n    commentaire: object | undefined;\n    @Prop({default:1})\n    questionID: number | undefined;\n    @Prop({default:{}})\n    user: object | undefined;\n    @Prop({default:[]})\n    votes: Array<number> | undefined;\n    date: string;\n    voted: boolean;\n    currentUser: object;\n\n    constructor() {\n        super();\n        this.date = \"\";\n        this.voted = false;\n        this.currentUser = {};\n    }\n\n    showProfil(username: string): void {\n        window.location.href = \"/profil/\" + username;\n    }\n\n    created() {\n        moment.locale('fr');\n        if (this.commentaire)\n            this.date = moment((this.commentaire as Record<string, any>).created_at).fromNow()\n    }\n\n    mounted() {\n        this.getCurrentUser();\n        console.log(this.user);\n    }\n\n    async sendReport(): Promise<void> {\n        this.$fire({\n            title: \"Choisissez la raison de votre signalement\",\n            showCancelButton: true,\n            html:\n                '<div class=\"test\" style=\"text-align:left\">' +\n                '<div><input type=\"radio\" id=\"choose\" name=\"reportCause\" value=\"aucune\" checked>' +\n                '<label style=\"margin-left:10px;\" for=\"choose\">Aucune</label></div>' +\n                '<div><input type=\"radio\" id=\"injure\" name=\"reportCause\" value=\"1\">' +\n                \"<label style='margin-left:10px;' for='injure'>Injures</label></div>\" +\n\n                '<div><input type=\"radio\" id=\"place\" name=\"reportCause\" value=\"2\">' +\n                \"<label style='margin-left:10px;' for='place'>Contenu innaproprié</label></div>\" +\n\n                '<div><input type=\"radio\" id=\"sexisme\" name=\"reportCause\" value=\"5\">' +\n                \"<label style='margin-left:10px;' for='sexisme'>Sexisme</label></div>\" +\n\n                '<div><input type=\"radio\" id=\"racisme\" name=\"reportCause\" value=\"4\">' +\n                '<label style=\"margin-left:10px;\" for=\"racisme\">Racisme</label></div>' +\n\n                '<div><input type=\"radio\" id=\"formulation\" name=\"reportCause\" value=\"3\">' +\n                '<label style=\"margin-left:10px;\" for=\"formulation\">Formulation</label></div>' +\n\n                '</div>' +\n                '<h3 style=\"text-align:left;margin-top:20px\">Voulez-vous préciser ?</h3>' +\n                '<textarea style=\"resize:none;height:100px;padding-top:10px;\" id=\"swal-textarea1\" class=\"swal2-input\">',\n            type: \"warning\",\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        }).then(r => {\n            console.log(r.dismiss);\n            const radios = document.getElementsByName('reportCause');\n            let type = 0;\n            for (let i = 0, length = radios.length; i < length; i++) {\n                if (radios[i].checked) {\n                    type = radios[i].value;\n                    break;\n                }\n            }\n            let message = document.getElementById(\"swal-textarea1\").value;\n            if(!message)\n                message = null;\n\n            console.log(message);\n\n            const Toast = Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n            });\n            console.log(r);\n\n            if( r.dismiss != \"cancel\" && r.dismiss != \"esc\" && r.dismiss != \"backdrop\") {\n                if(type == \"aucune\") {\n                    Toast.fire({\n                        icon: 'error',\n                        title: \"Vous n'avez aucune raison de le signaler.\"\n                    })\n                } else {\n\n                    myAPI.post(\"reports\", {\n                        'post_id' : this.commentaire.id,\n                        'reason_report_id' : type,\n                        'message': message\n                    }).then((response: { data: any}) =>  {\n                        Toast.fire({\n                            icon: 'success',\n                            title: 'Nous avons reçu votre signalement !'\n                        })\n                    }).catch(error => {\n                        console.log(error);\n                        Toast.fire({\n                            icon: 'error',\n                            title: \"Une erreure s'est produite lors de l'envoie..\"\n                        })\n                    });\n\n                }\n            }\n\n\n        });\n    }\n\n    async getCurrentUser(): Promise<void> {\n        let rep = null;\n\n        await myAPI.get(\"users/me/profile\").then((response: { data: any}) =>  {\n            rep = response.data;\n        });\n\n\n        if (rep) {\n            this.currentUser = rep;\n        }\n        this.voted = !!this.votes?.includes((this.currentUser as Record<string, any>).id);\n\n    }\n\n    async upVote(): Promise<void> {\n        await myAPI.get(\"posts/\" + (this.commentaire as Record<string, any>).id + \"/vote\" );\n        this.voted = !this.voted;\n        this.$forceUpdate();\n        this.$emit('refresh');\n    }\n}\n\n"],"sourceRoot":""}]}