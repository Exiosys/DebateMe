{"code":"// Shifts are encoded as negative state IDs, reduces as bitmasks with\n// the first 6 bits holding the depth of the reduce, and the bits\n// after that the term that's being reduced.\nexport var REDUCE_DEPTH_SIZE = 6, REDUCE_DEPTH_MASK = Math.pow(2, REDUCE_DEPTH_SIZE) - 1;\nvar ParseState = /** @class */ (function () {\n    function ParseState(id, actions, goto, recover, alwaysReduce, defaultReduce, skip, tokenizers) {\n        this.id = id;\n        this.actions = actions;\n        this.goto = goto;\n        this.recover = recover;\n        this.alwaysReduce = alwaysReduce;\n        this.defaultReduce = defaultReduce;\n        this.skip = skip;\n        this.tokenizers = tokenizers;\n    }\n    ParseState.prototype.hasAction = function (terminal) { return lookup(this.actions, terminal) != 0; };\n    ParseState.prototype.anyReduce = function () {\n        if (this.alwaysReduce >= 0)\n            return this.alwaysReduce;\n        for (var i = 0; i < this.actions.length; i += 2) {\n            var action = this.actions[i + 1];\n            if (action > 0)\n                return action;\n        }\n        return 0;\n    };\n    // Zero means no entry found, otherwise it'll be a state id (never\n    // zero because no goto edges to the start state exist)\n    ParseState.prototype.getGoto = function (term) { return lookup(this.goto, term); };\n    ParseState.prototype.getRecover = function (terminal) { return lookup(this.recover, terminal); };\n    return ParseState;\n}());\nexport { ParseState };\nvar none = [];\nexport function s(actions, goto, defaultReduce, skip, tokenizers, recover) {\n    return new ParseState(s.id++, typeof actions == \"number\" ? none : actions, goto, recover || none, typeof actions == \"number\" ? actions : -1, defaultReduce, skip, tokenizers);\n}\ns.id = 0;\nfunction lookup(actions, term) {\n    for (var i = 0; i < actions.length; i += 2)\n        if (actions[i] == term)\n            return actions[i + 1];\n    return 0;\n}\n//# sourceMappingURL=state.js.map","map":"{\"version\":3,\"file\":\"state.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/state.ts\"],\"names\":[],\"mappings\":\"AAEA,qEAAqE;AACrE,iEAAiE;AACjE,4CAA4C;AAC5C,MAAM,CAAC,IAAM,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,SAAA,CAAC,EAAE,iBAAiB,CAAA,GAAG,CAAC,CAAA;AAEhF;IACE,oBAAqB,EAAU,EACV,OAA8B,EAC9B,IAA2B,EAC3B,OAA8B,EAC9B,YAAoB,EACpB,aAAqB,EACrB,IAAe,EACf,UAAoC;QAPpC,OAAE,GAAF,EAAE,CAAQ;QACV,YAAO,GAAP,OAAO,CAAuB;QAC9B,SAAI,GAAJ,IAAI,CAAuB;QAC3B,YAAO,GAAP,OAAO,CAAuB;QAC9B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,kBAAa,GAAb,aAAa,CAAQ;QACrB,SAAI,GAAJ,IAAI,CAAW;QACf,eAAU,GAAV,UAAU,CAA0B;IAAG,CAAC;IAE7D,8BAAS,GAAT,UAAU,QAAgB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA,CAAC,CAAC;IAE1E,8BAAS,GAAT;QACE,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,YAAY,CAAA;QACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YAChC,IAAI,MAAM,GAAG,CAAC;gBAAE,OAAO,MAAM,CAAA;SAC9B;QACD,OAAO,CAAC,CAAA;IACV,CAAC;IACD,kEAAkE;IAClE,uDAAuD;IACvD,4BAAO,GAAP,UAAQ,IAAY,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA,CAAC,CAAC;IACxD,+BAAU,GAAV,UAAW,QAAgB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA,CAAC,CAAC;IACxE,iBAAC;AAAD,CAAC,AAxBD,IAwBC;;AAED,IAAM,IAAI,GAAuB,EAAE,CAAA;AAEnC,MAAM,UAAU,CAAC,CAAC,OAAuC,EACvC,IAA2B,EAC3B,aAAqB,EACrB,IAAe,EACf,UAAoC,EACpC,OAA+B;IAC/C,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EACnD,IAAI,EAAE,OAAO,IAAI,IAAI,EAAE,OAAO,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAChE,aAAa,EAAE,IAAI,EAAE,UAAU,CAAC,CAAA;AACxD,CAAC;AAED,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;AAER,SAAS,MAAM,CAAC,OAA8B,EAAE,IAAY;IAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,CAAC;QAAE,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI;YAAE,OAAO,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACxF,OAAO,CAAC,CAAA;AACV,CAAC\"}","dts":{"name":"/home/marijn/src/lezer/lezer/state.d.ts","writeByteOrderMark":false,"text":"import { Tokenizer } from \"./token\";\nexport declare const REDUCE_DEPTH_SIZE = 6, REDUCE_DEPTH_MASK: number;\nexport declare class ParseState {\n    readonly id: number;\n    readonly actions: ReadonlyArray<number>;\n    readonly goto: ReadonlyArray<number>;\n    readonly recover: ReadonlyArray<number>;\n    readonly alwaysReduce: number;\n    readonly defaultReduce: number;\n    readonly skip: Tokenizer;\n    readonly tokenizers: ReadonlyArray<Tokenizer>;\n    constructor(id: number, actions: ReadonlyArray<number>, goto: ReadonlyArray<number>, recover: ReadonlyArray<number>, alwaysReduce: number, defaultReduce: number, skip: Tokenizer, tokenizers: ReadonlyArray<Tokenizer>);\n    hasAction(terminal: number): boolean;\n    anyReduce(): number;\n    getGoto(term: number): number;\n    getRecover(terminal: number): number;\n}\nexport declare function s(actions: number | ReadonlyArray<number>, goto: ReadonlyArray<number>, defaultReduce: number, skip: Tokenizer, tokenizers: ReadonlyArray<Tokenizer>, recover?: ReadonlyArray<number>): ParseState;\nexport declare namespace s {\n    var id: number;\n}\n"}}
