{"code":"var StringStream = /** @class */ (function () {\n    function StringStream(string) {\n        this.string = string;\n        this.pos = 0;\n    }\n    Object.defineProperty(StringStream.prototype, \"length\", {\n        get: function () { return this.string.length; },\n        enumerable: true,\n        configurable: true\n    });\n    StringStream.prototype.next = function () {\n        if (this.pos == this.string.length)\n            return -1;\n        return this.string.charCodeAt(this.pos);\n    };\n    StringStream.prototype.adv = function () { this.pos++; };\n    StringStream.prototype.goto = function (n) { this.pos = n; return this; };\n    StringStream.prototype.read = function (from, to) { return this.string.slice(from, to); };\n    return StringStream;\n}());\nexport { StringStream };\nexport function noToken(input) { return -1; }\n//# sourceMappingURL=token.js.map","map":"{\"version\":3,\"file\":\"token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/token.ts\"],\"names\":[],\"mappings\":\"AASA;IAGE,sBAAqB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFnC,QAAG,GAAG,CAAC,CAAA;IAE+B,CAAC;IAEvC,sBAAI,gCAAM;aAAV,cAAe,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA,CAAC,CAAC;;;OAAA;IAE1C,2BAAI,GAAJ;QACE,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,OAAO,CAAC,CAAC,CAAA;QAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACzC,CAAC;IAED,0BAAG,GAAH,cAAQ,IAAI,CAAC,GAAG,EAAE,CAAA,CAAC,CAAC;IAEpB,2BAAI,GAAJ,UAAK,CAAS,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,CAAC,CAAC;IAE7C,2BAAI,GAAJ,UAAK,IAAY,EAAE,EAAU,IAAY,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA,CAAC,CAAC;IAC/E,mBAAC;AAAD,CAAC,AAjBD,IAiBC;;AAID,MAAM,UAAU,OAAO,CAAC,KAAkB,IAAI,OAAO,CAAC,CAAC,CAAA,CAAC,CAAC\"}","dts":{"name":"/home/marijn/src/lezer/lezer/token.d.ts","writeByteOrderMark":false,"text":"export interface InputStream {\n    pos: number;\n    length: number;\n    next(): number;\n    adv(): void;\n    goto(n: number): InputStream;\n    read(from: number, to: number): string;\n}\nexport declare class StringStream implements InputStream {\n    readonly string: string;\n    pos: number;\n    constructor(string: string);\n    readonly length: number;\n    next(): number;\n    adv(): void;\n    goto(n: number): this;\n    read(from: number, to: number): string;\n}\nexport declare type Tokenizer = (input: InputStream) => number;\nexport declare function noToken(input: InputStream): number;\n"}}
