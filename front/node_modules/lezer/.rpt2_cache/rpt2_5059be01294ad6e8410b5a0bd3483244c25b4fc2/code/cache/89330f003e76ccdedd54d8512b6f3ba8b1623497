{"code":"// Shifts are encoded as negative state IDs, reduces as bitmasks with\n// the first 6 bits holding the depth of the reduce, and the bits\n// after that the term that's being reduced.\nexport var REDUCE_DEPTH_SIZE = 6, REDUCE_DEPTH_MASK = Math.pow(2, REDUCE_DEPTH_SIZE) - 1;\n// Invalid reduce value used in forcedReduce to encode that a state is\n// accepting\nexport var ACCEPTING = 1 << REDUCE_DEPTH_SIZE;\nexport var ACTION_SKIP = -0xffff;\nvar ParseState = /** @class */ (function () {\n    function ParseState(id, \n    // These are offsets into the state data array\n    actions, recover, skip, tokenizerMask, defaultReduce, forcedReduce) {\n        this.id = id;\n        this.actions = actions;\n        this.recover = recover;\n        this.skip = skip;\n        this.tokenizerMask = tokenizerMask;\n        this.defaultReduce = defaultReduce;\n        this.forcedReduce = forcedReduce;\n    }\n    Object.defineProperty(ParseState.prototype, \"accepting\", {\n        get: function () { return this.forcedReduce == ACCEPTING; },\n        enumerable: true,\n        configurable: true\n    });\n    return ParseState;\n}());\nexport { ParseState };\n//# sourceMappingURL=state.js.map","map":"{\"version\":3,\"file\":\"state.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/state.ts\"],\"names\":[],\"mappings\":\"AAAA,qEAAqE;AACrE,iEAAiE;AACjE,4CAA4C;AAC5C,MAAM,CAAC,IAAM,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,SAAA,CAAC,EAAE,iBAAiB,CAAA,GAAG,CAAC,CAAA;AAEhF,sEAAsE;AACtE,YAAY;AACZ,MAAM,CAAC,IAAM,SAAS,GAAG,CAAC,IAAI,iBAAiB,CAAA;AAE/C,MAAM,CAAC,IAAM,WAAW,GAAG,CAAC,MAAM,CAAA;AAElC;IACE,oBAAqB,EAAU;IACnB,8CAA8C;IACrC,OAAe,EACf,OAAe,EACf,IAAY,EACZ,aAAqB,EACrB,aAAqB,EACrB,YAAoB;QAPpB,OAAE,GAAF,EAAE,CAAQ;QAEV,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAQ;QACf,SAAI,GAAJ,IAAI,CAAQ;QACZ,kBAAa,GAAb,aAAa,CAAQ;QACrB,kBAAa,GAAb,aAAa,CAAQ;QACrB,iBAAY,GAAZ,YAAY,CAAQ;IAAG,CAAC;IAE7C,sBAAI,iCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,YAAY,IAAI,SAAS,CAAA,CAAC,CAAC;;;OAAA;IAC3D,iBAAC;AAAD,CAAC,AAXD,IAWC\"}","dts":{"name":"/home/marijn/src/lezer/lezer/state.d.ts","writeByteOrderMark":false,"text":"export declare const REDUCE_DEPTH_SIZE = 6, REDUCE_DEPTH_MASK: number;\nexport declare const ACCEPTING: number;\nexport declare const ACTION_SKIP = -65535;\nexport declare class ParseState {\n    readonly id: number;\n    readonly actions: number;\n    readonly recover: number;\n    readonly skip: number;\n    readonly tokenizerMask: number;\n    readonly defaultReduce: number;\n    readonly forcedReduce: number;\n    constructor(id: number, actions: number, recover: number, skip: number, tokenizerMask: number, defaultReduce: number, forcedReduce: number);\n    readonly accepting: boolean;\n}\n"}}
