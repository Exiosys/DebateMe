{"code":"export { Parser, ParseContext } from \"./parse\";\nexport { ParseState } from \"./state\";\nexport { StringStream, TokenGroup, ExternalTokenizer } from \"./token\";\nexport { Stack } from \"./stack\";\nexport { Tree, TreeBuffer, Subtree, TagMap } from \"lezer-tree\";\nexport var ErrTerm = 1 /* Err */, EofTerm = 0 /* Eof */;\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,MAAM,EAAgB,YAAY,EAAgB,MAAM,SAAS,CAAA;AACzE,OAAO,EAAC,UAAU,EAAC,MAAM,SAAS,CAAA;AAClC,OAAO,EAAc,YAAY,EAAa,UAAU,EAAE,iBAAiB,EAAC,MAAM,SAAS,CAAA;AAC3F,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAA;AAC7B,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAC,MAAM,YAAY,CAAA;AAG5D,MAAM,CAAC,IAAM,OAAO,cAAW,EAAE,OAAO,cAAW,CAAA\"}","dts":{"name":"/home/marijn/src/lezer/lezer/index.d.ts","writeByteOrderMark":false,"text":"export { Parser, ParseOptions, ParseContext, NestedGrammar } from \"./parse\";\nexport { ParseState } from \"./state\";\nexport { InputStream, StringStream, Tokenizer, TokenGroup, ExternalTokenizer } from \"./token\";\nexport { Stack } from \"./stack\";\nexport { Tree, TreeBuffer, Subtree, TagMap } from \"lezer-tree\";\nimport { Term } from \"./constants\";\nexport declare const ErrTerm = Term.Tagged, EofTerm = Term.Eof;\n"}}
