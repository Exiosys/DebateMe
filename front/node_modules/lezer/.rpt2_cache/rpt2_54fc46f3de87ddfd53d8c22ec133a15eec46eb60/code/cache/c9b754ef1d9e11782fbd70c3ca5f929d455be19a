{"code":"var ParseState = /** @class */ (function () {\n    function ParseState(id, flags, \n    // These are offsets into the state data array\n    actions, recover, skip, tokenizerMask, defaultReduce, forcedReduce) {\n        this.id = id;\n        this.flags = flags;\n        this.actions = actions;\n        this.recover = recover;\n        this.skip = skip;\n        this.tokenizerMask = tokenizerMask;\n        this.defaultReduce = defaultReduce;\n        this.forcedReduce = forcedReduce;\n    }\n    Object.defineProperty(ParseState.prototype, \"accepting\", {\n        get: function () { return (this.flags & 2 /* Accepting */) > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParseState.prototype, \"skipped\", {\n        get: function () { return (this.flags & 1 /* Skipped */) > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParseState.prototype, \"startNested\", {\n        get: function () { return this.flags & 4 /* StartNest */ ? this.flags >> 10 /* NestShift */ : -1; },\n        enumerable: true,\n        configurable: true\n    });\n    return ParseState;\n}());\nexport { ParseState };\n//# sourceMappingURL=state.js.map","map":"{\"version\":3,\"file\":\"state.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/state.ts\"],\"names\":[],\"mappings\":\"AAEA;IACE,oBAAqB,EAAU,EACV,KAAa;IAEtB,8CAA8C;IACrC,OAAe,EACf,OAAe,EACf,IAAY,EAEZ,aAAqB,EACrB,aAAqB,EACrB,YAAoB;QAVpB,OAAE,GAAF,EAAE,CAAQ;QACV,UAAK,GAAL,KAAK,CAAQ;QAGb,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAQ;QACf,SAAI,GAAJ,IAAI,CAAQ;QAEZ,kBAAa,GAAb,aAAa,CAAQ;QACrB,kBAAa,GAAb,aAAa,CAAQ;QACrB,iBAAY,GAAZ,YAAY,CAAQ;IAAG,CAAC;IAE7C,sBAAI,iCAAS;aAAb,cAAkB,OAAO,CAAC,IAAI,CAAC,KAAK,oBAAsB,CAAC,GAAG,CAAC,CAAA,CAAC,CAAC;;;OAAA;IACjE,sBAAI,+BAAO;aAAX,cAAgB,OAAO,CAAC,IAAI,CAAC,KAAK,kBAAoB,CAAC,GAAG,CAAC,CAAA,CAAC,CAAC;;;OAAA;IAC7D,sBAAI,mCAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,KAAK,oBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,sBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC;;;OAAA;IACxG,iBAAC;AAAD,CAAC,AAhBD,IAgBC\"}","dts":{"name":"/home/marijn/src/lezer/lezer/state.d.ts","writeByteOrderMark":false,"text":"export declare class ParseState {\n    readonly id: number;\n    readonly flags: number;\n    readonly actions: number;\n    readonly recover: number;\n    readonly skip: number;\n    readonly tokenizerMask: number;\n    readonly defaultReduce: number;\n    readonly forcedReduce: number;\n    constructor(id: number, flags: number, actions: number, recover: number, skip: number, tokenizerMask: number, defaultReduce: number, forcedReduce: number);\n    readonly accepting: boolean;\n    readonly skipped: boolean;\n    readonly startNested: number;\n}\n"}}
